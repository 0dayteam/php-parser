//line parser/parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser/parser.y:2
import (
	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"
	"io"
)

var rootnode = node.NewSimpleNode("Root")

func Parse(src io.Reader, fName string) node.Node {
	yyDebug = 0
	yyErrorVerbose = true
	rootnode = node.NewSimpleNode("Root") //reset
	yyParse(newLexer(src, fName))
	return rootnode
}

//line parser/parser.y:26
type yySymType struct {
	yys   int
	node  node.Node
	token token.Token
	value string
	list  []node.Node
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EVAL = 57348
const T_REQUIRE = 57349
const T_REQUIRE_ONCE = 57350
const T_LOGICAL_OR = 57351
const T_LOGICAL_XOR = 57352
const T_LOGICAL_AND = 57353
const T_PRINT = 57354
const T_YIELD = 57355
const T_DOUBLE_ARROW = 57356
const T_YIELD_FROM = 57357
const T_PLUS_EQUAL = 57358
const T_MINUS_EQUAL = 57359
const T_MUL_EQUAL = 57360
const T_DIV_EQUAL = 57361
const T_CONCAT_EQUAL = 57362
const T_MOD_EQUAL = 57363
const T_AND_EQUAL = 57364
const T_OR_EQUAL = 57365
const T_XOR_EQUAL = 57366
const T_SL_EQUAL = 57367
const T_SR_EQUAL = 57368
const T_POW_EQUAL = 57369
const T_COALESCE = 57370
const T_BOOLEAN_OR = 57371
const T_BOOLEAN_AND = 57372
const T_IS_EQUAL = 57373
const T_IS_NOT_EQUAL = 57374
const T_IS_IDENTICAL = 57375
const T_IS_NOT_IDENTICAL = 57376
const T_SPACESHIP = 57377
const T_IS_SMALLER_OR_EQUAL = 57378
const T_IS_GREATER_OR_EQUAL = 57379
const T_SL = 57380
const T_SR = 57381
const T_INSTANCEOF = 57382
const T_INC = 57383
const T_DEC = 57384
const T_INT_CAST = 57385
const T_DOUBLE_CAST = 57386
const T_STRING_CAST = 57387
const T_ARRAY_CAST = 57388
const T_OBJECT_CAST = 57389
const T_BOOL_CAST = 57390
const T_UNSET_CAST = 57391
const T_POW = 57392
const T_NEW = 57393
const T_CLONE = 57394
const T_NOELSE = 57395
const T_ELSEIF = 57396
const T_ELSE = 57397
const T_ENDIF = 57398
const T_STATIC = 57399
const T_ABSTRACT = 57400
const T_FINAL = 57401
const T_PRIVATE = 57402
const T_PROTECTED = 57403
const T_PUBLIC = 57404
const T_EXIT = 57405
const T_IF = 57406
const T_LNUMBER = 57407
const T_DNUMBER = 57408
const T_STRING = 57409
const T_STRING_VARNAME = 57410
const T_VARIABLE = 57411
const T_NUM_STRING = 57412
const T_INLINE_HTML = 57413
const T_CHARACTER = 57414
const T_BAD_CHARACTER = 57415
const T_ENCAPSED_AND_WHITESPACE = 57416
const T_CONSTANT_ENCAPSED_STRING = 57417
const T_ECHO = 57418
const T_DO = 57419
const T_WHILE = 57420
const T_ENDWHILE = 57421
const T_FOR = 57422
const T_ENDFOR = 57423
const T_FOREACH = 57424
const T_ENDFOREACH = 57425
const T_DECLARE = 57426
const T_ENDDECLARE = 57427
const T_AS = 57428
const T_SWITCH = 57429
const T_ENDSWITCH = 57430
const T_CASE = 57431
const T_DEFAULT = 57432
const T_BREAK = 57433
const T_CONTINUE = 57434
const T_GOTO = 57435
const T_FUNCTION = 57436
const T_CONST = 57437
const T_RETURN = 57438
const T_TRY = 57439
const T_CATCH = 57440
const T_FINALLY = 57441
const T_THROW = 57442
const T_USE = 57443
const T_INSTEADOF = 57444
const T_GLOBAL = 57445
const T_VAR = 57446
const T_UNSET = 57447
const T_ISSET = 57448
const T_EMPTY = 57449
const T_HALT_COMPILER = 57450
const T_CLASS = 57451
const T_TRAIT = 57452
const T_INTERFACE = 57453
const T_EXTENDS = 57454
const T_IMPLEMENTS = 57455
const T_OBJECT_OPERATOR = 57456
const T_LIST = 57457
const T_ARRAY = 57458
const T_CALLABLE = 57459
const T_CLASS_C = 57460
const T_TRAIT_C = 57461
const T_METHOD_C = 57462
const T_FUNC_C = 57463
const T_LINE = 57464
const T_FILE = 57465
const T_COMMENT = 57466
const T_DOC_COMMENT = 57467
const T_OPEN_TAG = 57468
const T_OPEN_TAG_WITH_ECHO = 57469
const T_CLOSE_TAG = 57470
const T_WHITESPACE = 57471
const T_START_HEREDOC = 57472
const T_END_HEREDOC = 57473
const T_DOLLAR_OPEN_CURLY_BRACES = 57474
const T_CURLY_OPEN = 57475
const T_PAAMAYIM_NEKUDOTAYIM = 57476
const T_NAMESPACE = 57477
const T_NS_C = 57478
const T_DIR = 57479
const T_NS_SEPARATOR = 57480
const T_ELLIPSIS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"','",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_PRINT",
	"T_YIELD",
	"T_DOUBLE_ARROW",
	"T_YIELD_FROM",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"'?'",
	"':'",
	"T_COALESCE",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"'&'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_SPACESHIP",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'+'",
	"'-'",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"T_INSTANCEOF",
	"'~'",
	"T_INC",
	"T_DEC",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"'@'",
	"T_POW",
	"'['",
	"T_NEW",
	"T_CLONE",
	"T_NOELSE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"'\"'",
	"'`'",
	"'('",
	"')'",
	"';'",
	"'{'",
	"'}'",
	"']'",
	"'$'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser/parser.y:1182

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	69, 419,
	133, 419,
	153, 419,
	164, 419,
	-2, 414,
	-1, 47,
	161, 422,
	-2, 431,
	-1, 83,
	69, 421,
	133, 421,
	153, 421,
	161, 424,
	164, 421,
	-2, 409,
	-1, 106,
	153, 382,
	-2, 411,
	-1, 228,
	69, 419,
	133, 419,
	153, 419,
	164, 419,
	-2, 311,
	-1, 231,
	161, 424,
	-2, 421,
	-1, 234,
	69, 419,
	133, 419,
	153, 419,
	164, 419,
	-2, 313,
	-1, 352,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 335,
	-1, 353,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 336,
	-1, 354,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 337,
	-1, 355,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 338,
	-1, 356,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 339,
	-1, 357,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 340,
	-1, 358,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 341,
	-1, 359,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 342,
	-1, 360,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 343,
	-1, 367,
	9, 161,
	162, 161,
	-2, 419,
	-1, 374,
	162, 211,
	-2, 216,
	-1, 411,
	9, 459,
	162, 459,
	166, 459,
	-2, 419,
	-1, 415,
	69, 420,
	133, 420,
	153, 420,
	161, 423,
	164, 420,
	-2, 345,
	-1, 429,
	161, 445,
	-2, 412,
	-1, 430,
	161, 447,
	-2, 437,
	-1, 509,
	161, 445,
	-2, 413,
	-1, 510,
	161, 447,
	-2, 438,
	-1, 558,
	162, 211,
	-2, 216,
	-1, 568,
	162, 211,
	-2, 216,
	-1, 603,
	161, 423,
	-2, 420,
	-1, 659,
	15, 181,
	162, 181,
	-2, 419,
	-1, 681,
	88, 263,
	-2, 266,
	-1, 700,
	9, 458,
	162, 458,
	166, 458,
	-2, 419,
	-1, 733,
	15, 182,
	162, 182,
	-2, 419,
	-1, 786,
	15, 184,
	162, 184,
	-2, 393,
	-1, 857,
	105, 76,
	-2, 80,
	-1, 880,
	162, 211,
	-2, 216,
}

const yyPrivate = 57344

const yyLast = 7387

var yyAct = [...]int{

	27, 129, 790, 802, 585, 683, 434, 569, 836, 849,
	801, 781, 818, 749, 106, 125, 573, 658, 741, 583,
	640, 137, 137, 137, 725, 714, 150, 311, 110, 639,
	4, 320, 520, 571, 185, 530, 366, 563, 580, 114,
	120, 574, 222, 403, 220, 131, 188, 79, 149, 376,
	146, 315, 224, 227, 8, 83, 235, 236, 237, 238,
	239, 43, 136, 240, 241, 242, 243, 244, 245, 246,
	314, 249, 142, 7, 257, 258, 259, 313, 127, 312,
	6, 428, 5, 512, 139, 140, 511, 786, 272, 273,
	126, 275, 276, 707, 124, 775, 776, 253, 263, 268,
	691, 229, 229, 2, 703, 617, 404, 232, 104, 231,
	231, 81, 604, 592, 408, 228, 234, 116, 614, 104,
	104, 288, 913, 914, 653, 775, 776, 292, 293, 908,
	859, 317, 814, 811, 809, 322, 323, 305, 768, 615,
	289, 905, 291, 866, 834, 534, 104, 298, 534, 534,
	304, 216, 821, 335, 336, 337, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 319,
	362, 364, 774, 368, 405, 133, 370, 105, 111, 116,
	284, 286, 331, 268, 844, 819, 265, 78, 105, 105,
	832, 386, 388, 389, 390, 391, 392, 393, 394, 395,
	396, 397, 398, 399, 613, 218, 400, 137, 402, 294,
	224, 143, 282, 716, 382, 105, 643, 637, 233, 229,
	534, 413, 789, 764, 224, 232, 798, 231, 746, 674,
	584, 514, 378, 367, 301, 116, 217, 104, 334, 137,
	184, 330, 891, 109, 805, 806, 423, 652, 328, 884,
	113, 137, 883, 307, 407, 429, 509, 115, 301, 865,
	828, 521, 522, 229, 369, 523, 875, 361, 414, 401,
	822, 231, 269, 527, 815, 772, 531, 411, 224, 759,
	265, 732, 730, 728, 108, 726, 687, 688, 689, 686,
	685, 684, 724, 283, 229, 516, 660, 906, 545, 549,
	721, 416, 231, 133, 553, 305, 111, 538, 425, 535,
	230, 384, 4, 427, 372, 517, 105, 820, 541, 326,
	544, 325, 533, 559, 324, 150, 515, 307, 662, 295,
	680, 892, 827, 682, 508, 232, 8, 880, 843, 418,
	419, 826, 816, 808, 518, 116, 740, 104, 729, 712,
	710, 702, 668, 109, 562, 7, 656, 644, 635, 605,
	596, 290, 6, 793, 5, 418, 269, 419, 419, 418,
	373, 557, 587, 560, 588, 858, 548, 589, 590, 578,
	797, 788, 582, 734, 701, 586, 542, 536, 539, 285,
	417, 556, 333, 661, 108, 329, 595, 568, 558, 374,
	224, 599, 327, 224, 552, 581, 406, 306, 550, 412,
	745, 383, 300, 133, 381, 579, 111, 616, 113, 874,
	230, 287, 619, 274, 271, 270, 105, 116, 731, 248,
	219, 215, 154, 156, 155, 687, 688, 689, 686, 685,
	684, 183, 598, 182, 181, 374, 254, 602, 135, 430,
	510, 420, 179, 134, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 594, 178, 680,
	566, 130, 682, 687, 688, 689, 686, 685, 684, 112,
	164, 288, 687, 688, 689, 686, 685, 684, 543, 887,
	513, 303, 618, 303, 262, 137, 623, 261, 303, 255,
	256, 377, 116, 303, 116, 421, 143, 526, 380, 886,
	885, 116, 116, 634, 840, 303, 742, 680, 738, 739,
	682, 119, 254, 876, 752, 751, 680, 254, 145, 682,
	318, 122, 123, 648, 322, 650, 704, 627, 750, 305,
	624, 641, 655, 288, 4, 638, 654, 632, 626, 575,
	547, 870, 544, 578, 544, 540, 667, 622, 794, 646,
	576, 577, 796, 578, 147, 649, 675, 302, 8, 422,
	578, 755, 620, 299, 664, 121, 586, 708, 699, 133,
	133, 657, 111, 111, 690, 255, 256, 7, 116, 524,
	255, 256, 229, 229, 6, 705, 5, 672, 673, 695,
	231, 231, 147, 611, 869, 116, 367, 659, 254, 521,
	76, 77, 838, 420, 531, 687, 688, 689, 686, 685,
	684, 128, 823, 775, 776, 232, 254, 145, 229, 722,
	609, 420, 546, 715, 534, 116, 231, 104, 719, 641,
	297, 711, 700, 224, 252, 709, 544, 736, 375, 713,
	194, 544, 544, 720, 576, 577, 193, 717, 727, 680,
	192, 190, 682, 837, 578, 753, 607, 754, 610, 608,
	525, 255, 256, 133, 747, 586, 111, 267, 760, 761,
	254, 116, 224, 743, 186, 277, 756, 735, 229, 255,
	256, 621, 195, 196, 406, 625, 231, 778, 775, 776,
	757, 260, 733, 133, 676, 322, 111, 164, 122, 123,
	189, 178, 715, 254, 641, 224, 105, 45, 281, 769,
	671, 791, 767, 164, 792, 544, 762, 544, 780, 758,
	784, 777, 765, 779, 385, 187, 773, 698, 770, 782,
	807, 845, 278, 255, 256, 254, 795, 279, 280, 839,
	251, 197, 199, 198, 799, 191, 817, 597, 332, 785,
	229, 308, 812, 824, 810, 825, 642, 691, 231, 766,
	718, 831, 669, 633, 659, 544, 255, 256, 118, 803,
	842, 628, 564, 830, 554, 813, 578, 846, 833, 409,
	855, 1, 841, 687, 688, 689, 686, 685, 684, 666,
	864, 854, 829, 163, 165, 166, 250, 178, 255, 256,
	863, 37, 681, 679, 872, 678, 873, 221, 868, 164,
	877, 223, 835, 848, 861, 42, 879, 321, 912, 804,
	800, 748, 855, 529, 782, 878, 570, 41, 882, 365,
	148, 144, 141, 854, 888, 889, 651, 15, 890, 87,
	88, 89, 90, 91, 14, 519, 606, 266, 73, 74,
	48, 75, 47, 107, 896, 893, 49, 82, 897, 80,
	898, 902, 901, 900, 71, 578, 247, 61, 264, 60,
	586, 853, 852, 851, 850, 907, 677, 909, 44, 910,
	572, 737, 663, 860, 55, 56, 915, 645, 309, 117,
	57, 296, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 379, 51, 84, 52, 3, 433, 744,
	670, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 12,
	22, 32, 0, 0, 33, 11, 0, 23, 0, 28,
	85, 86, 9, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 161, 162,
	160, 163, 165, 166, 102, 178, 0, 0, 0, 10,
	100, 96, 111, 0, 103, 72, 59, 164, 31, 13,
	636, 0, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 179, 75, 180, 152, 153, 157,
	159, 158, 171, 172, 169, 170, 177, 173, 174, 175,
	176, 167, 168, 161, 162, 160, 163, 165, 166, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 0, 164, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 12, 22, 32, 0, 0, 33, 11,
	0, 23, 0, 28, 85, 86, 9, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 10, 100, 96, 111, 0, 103, 72,
	59, 0, 31, 13, 537, 0, 105, 87, 88, 89,
	90, 91, 0, 0, 0, 0, 73, 74, 0, 75,
	180, 152, 153, 157, 159, 158, 171, 172, 169, 170,
	177, 173, 174, 175, 176, 167, 168, 161, 162, 160,
	163, 165, 166, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 0, 164, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 24,
	76, 77, 0, 0, 0, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 12, 22, 32,
	0, 0, 33, 11, 0, 23, 0, 28, 85, 86,
	9, 38, 39, 40, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 10, 100, 96,
	111, 0, 103, 72, 59, 0, 31, 13, 0, 0,
	105, 87, 88, 89, 90, 91, 0, 0, 0, 0,
	73, 74, 0, 75, 153, 157, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 56, 164, 0,
	0, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 24, 76, 77, 0, 0, 0, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 103, 72, 59, 0,
	31, 13, 916, 0, 105, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 73, 74, 0, 75, 0, 157,
	159, 158, 171, 172, 169, 170, 177, 173, 174, 175,
	176, 167, 168, 161, 162, 160, 163, 165, 166, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 164, 0, 0, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 24, 76, 77,
	0, 0, 0, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	103, 72, 59, 0, 31, 13, 911, 0, 105, 87,
	88, 89, 90, 91, 0, 0, 0, 0, 73, 74,
	0, 75, 0, 0, 159, 158, 171, 172, 169, 170,
	177, 173, 174, 175, 176, 167, 168, 161, 162, 160,
	163, 165, 166, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 164, 0, 0, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 103, 72, 59, 0, 31, 13,
	904, 0, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 0, 75, 158, 171, 172, 169,
	170, 177, 173, 174, 175, 176, 167, 168, 161, 162,
	160, 163, 165, 166, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 55, 56,
	0, 0, 0, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 903,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 103, 72,
	59, 0, 31, 13, 0, 0, 105, 87, 88, 89,
	90, 91, 0, 0, 0, 0, 73, 74, 0, 75,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 55, 56, 0, 0, 0, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 24,
	76, 77, 0, 0, 0, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	316, 38, 39, 40, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 103, 72, 59, 0, 31, 13, 895, 0,
	105, 87, 88, 89, 90, 91, 0, 0, 0, 0,
	73, 74, 0, 75, 173, 174, 175, 176, 167, 168,
	161, 162, 160, 163, 165, 166, 0, 178, 167, 168,
	161, 162, 160, 163, 165, 166, 0, 178, 0, 164,
	0, 0, 0, 0, 0, 0, 55, 56, 0, 164,
	0, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 24, 76, 77, 0, 0, 0, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 103, 72, 59, 0,
	31, 13, 894, 0, 105, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 73, 74, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 201, 202, 203, 205, 206, 207, 208,
	209, 210, 211, 212, 204, 0, 0, 0, 0, 0,
	55, 56, 0, 0, 0, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 213, 214, 0, 0, 24, 76, 77,
	0, 0, 0, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	103, 72, 59, 0, 31, 13, 871, 0, 105, 87,
	88, 89, 90, 91, 0, 0, 0, 0, 73, 74,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 0, 0, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 867, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 103, 72, 59, 0, 31, 13,
	0, 0, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 0, 0, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 787, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 103, 72,
	59, 0, 31, 13, 0, 0, 105, 87, 88, 89,
	90, 91, 0, 0, 0, 0, 73, 74, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 0, 0, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 24,
	76, 77, 0, 0, 0, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 771, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	316, 38, 39, 40, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 103, 72, 59, 0, 31, 13, 0, 0,
	105, 87, 88, 89, 90, 91, 0, 0, 0, 0,
	73, 74, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 56, 0, 0,
	0, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 694, 24, 76, 77, 0, 0, 0, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 103, 72, 59, 0,
	31, 13, 0, 0, 105, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 73, 74, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 0, 0, 0, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 24, 76, 77,
	0, 0, 0, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	103, 72, 59, 0, 31, 13, 567, 0, 105, 87,
	88, 89, 90, 91, 0, 0, 0, 0, 73, 74,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 0, 0, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 103, 72, 59, 0, 31, 13,
	310, 0, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 0, 0, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 103, 72,
	59, 0, 31, 13, 156, 155, 105, 441, 442, 443,
	444, 445, 0, 446, 447, 448, 484, 485, 0, 0,
	0, 0, 0, 179, 0, 180, 152, 153, 157, 159,
	158, 171, 172, 169, 170, 177, 173, 174, 175, 176,
	167, 168, 161, 162, 160, 163, 165, 166, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 451, 0, 454, 455, 456, 435,
	436, 437, 438, 439, 440, 452, 453, 0, 0, 432,
	0, 104, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 487,
	488, 489, 490, 491, 479, 480, 481, 482, 483, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 499, 497, 498, 494, 495, 0, 486, 492, 493,
	500, 501, 503, 502, 504, 505, 441, 442, 443, 444,
	445, 155, 446, 447, 448, 484, 485, 496, 507, 506,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 179,
	105, 180, 152, 153, 157, 159, 158, 171, 172, 169,
	170, 177, 173, 174, 175, 176, 167, 168, 161, 162,
	160, 163, 165, 166, 0, 178, 0, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 450, 451, 0, 454, 455, 456, 435, 436,
	437, 438, 439, 440, 452, 453, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 487, 488,
	489, 490, 491, 479, 480, 481, 482, 483, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 0,
	499, 497, 498, 494, 495, 0, 486, 492, 493, 500,
	501, 503, 502, 504, 505, 441, 442, 443, 444, 445,
	0, 446, 447, 448, 484, 485, 856, 507, 506, 111,
	0, 0, 0, 0, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 451, 0, 454, 455, 456, 435, 436, 437,
	438, 439, 440, 452, 453, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 487, 488, 489,
	490, 491, 479, 480, 481, 482, 483, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 0, 499,
	497, 498, 494, 495, 0, 486, 492, 493, 500, 501,
	503, 502, 504, 505, 0, 0, 0, 0, 0, 0,
	87, 88, 89, 90, 91, 856, 507, 506, 111, 73,
	74, 0, 75, 0, 0, 0, 847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 0, 0,
	0, 57, 0, 58, 53, 54, 62, 63, 64, 65,
	66, 67, 68, 70, 0, 51, 84, 52, 0, 0,
	0, 0, 24, 0, 0, 0, 0, 0, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 132,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 0, 0, 0, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 103, 72, 59, 0, 31,
	13, 0, 0, 105, 87, 88, 89, 90, 91, 0,
	0, 0, 0, 73, 74, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	56, 0, 0, 0, 0, 57, 0, 58, 53, 54,
	62, 63, 64, 65, 66, 67, 68, 70, 0, 51,
	84, 52, 0, 0, 0, 0, 24, 0, 0, 0,
	0, 0, 69, 46, 92, 93, 35, 0, 104, 0,
	26, 0, 0, 0, 109, 25, 17, 16, 0, 18,
	0, 29, 0, 30, 0, 0, 19, 0, 0, 0,
	20, 21, 34, 132, 0, 22, 32, 0, 0, 33,
	0, 0, 23, 0, 28, 85, 86, 0, 0, 0,
	0, 0, 0, 0, 50, 108, 0, 101, 97, 98,
	99, 94, 95, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 133, 100, 96, 111, 0, 103,
	72, 59, 0, 31, 13, 0, 0, 105, 87, 88,
	89, 90, 91, 0, 0, 0, 0, 73, 74, 0,
	75, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 56, 0, 0, 0, 0, 57,
	0, 58, 53, 54, 62, 63, 64, 65, 66, 67,
	68, 70, 0, 51, 84, 52, 0, 0, 0, 0,
	24, 0, 0, 0, 0, 0, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 132, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 85,
	86, 0, 0, 0, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 0, 103, 72, 59, 0, 31, 13, 0,
	0, 105, 87, 88, 89, 90, 91, 0, 0, 0,
	0, 73, 74, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 56, 0,
	0, 0, 0, 57, 0, 58, 53, 54, 62, 63,
	64, 65, 66, 67, 68, 70, 0, 51, 84, 52,
	0, 0, 0, 0, 24, 0, 0, 0, 0, 0,
	69, 46, 92, 93, 35, 0, 104, 0, 26, 0,
	0, 0, 109, 25, 17, 16, 0, 18, 0, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 132, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 85, 86, 0, 0, 0, 0, 0,
	0, 0, 50, 108, 0, 101, 97, 98, 99, 94,
	95, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 133, 100, 96, 111, 0, 103, 72, 59,
	0, 31, 13, 0, 0, 105, 87, 88, 89, 90,
	91, 0, 0, 0, 0, 73, 74, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 56, 0, 0, 0, 0, 57, 0, 58,
	53, 54, 62, 63, 64, 65, 66, 67, 68, 70,
	0, 51, 84, 52, 0, 0, 0, 0, 24, 0,
	0, 0, 0, 0, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 132, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 50, 108, 0, 101,
	97, 98, 99, 94, 95, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 133, 100, 96, 111,
	0, 103, 72, 59, 0, 31, 13, 0, 0, 105,
	87, 88, 89, 90, 91, 0, 0, 0, 0, 73,
	74, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 0, 0,
	0, 57, 0, 58, 53, 54, 62, 63, 64, 65,
	66, 67, 68, 70, 0, 51, 84, 52, 0, 0,
	0, 0, 24, 0, 0, 0, 0, 0, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 132,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 0, 0, 0, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 103, 72, 59, 0, 31,
	13, 426, 0, 105, 441, 442, 443, 444, 445, 0,
	446, 447, 448, 484, 485, 0, 179, 0, 180, 152,
	153, 157, 159, 158, 171, 172, 169, 170, 177, 173,
	174, 175, 176, 167, 168, 161, 162, 160, 163, 165,
	166, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 451, 0, 454, 455, 456, 435, 436, 437, 438,
	439, 440, 452, 453, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 487, 488, 489, 490,
	491, 479, 480, 481, 482, 483, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 0, 499, 497,
	498, 494, 495, 0, 486, 492, 493, 500, 501, 503,
	502, 504, 505, 441, 442, 443, 444, 445, 0, 446,
	447, 448, 484, 485, 496, 507, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	451, 0, 454, 455, 456, 687, 688, 689, 686, 685,
	684, 452, 453, 0, 0, 899, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 487, 488, 489, 490, 491,
	479, 480, 481, 482, 483, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 499, 497, 498,
	494, 495, 0, 486, 492, 493, 500, 501, 503, 502,
	504, 505, 0, 0, 0, 0, 0, 87, 88, 89,
	90, 91, 0, 496, 507, 506, 73, 74, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 0, 0, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 69, 0, 92, 93, 116,
	0, 104, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 87, 88, 89, 90, 91, 0, 0, 85, 86,
	73, 74, 0, 75, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 225, 0, 0, 133, 100, 96,
	111, 532, 103, 72, 59, 528, 55, 56, 0, 0,
	105, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 69,
	0, 92, 93, 116, 0, 104, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 87, 88, 89, 90, 91,
	0, 0, 85, 86, 73, 74, 0, 75, 0, 0,
	0, 226, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 103, 72, 59, 0,
	55, 56, 0, 0, 105, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 69, 0, 92, 93, 116, 0, 104,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 87,
	88, 89, 90, 91, 0, 0, 85, 86, 73, 74,
	0, 75, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 600, 0, 0, 133, 100, 96, 111, 532,
	103, 72, 59, 0, 55, 56, 0, 0, 105, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 69, 0, 92,
	93, 116, 0, 104, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 87, 88, 89, 90, 91, 0, 0,
	85, 86, 73, 74, 0, 75, 0, 0, 0, 601,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 103, 72, 59, 0, 55, 56,
	0, 0, 105, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 69, 0, 92, 93, 116, 424, 104, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 87, 88, 89,
	90, 91, 0, 0, 85, 86, 73, 74, 0, 75,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	387, 0, 0, 133, 100, 96, 111, 0, 103, 72,
	59, 0, 55, 56, 0, 0, 105, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 69, 0, 92, 93, 116,
	0, 104, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 87, 88, 89, 90, 91, 0, 0, 85, 86,
	73, 74, 0, 75, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 363, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 103, 72, 59, 0, 55, 56, 0, 0,
	105, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 69,
	0, 92, 93, 116, 0, 104, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 87, 88, 89, 90, 91,
	0, 0, 85, 86, 73, 74, 0, 75, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 103, 72, 59, 0,
	55, 56, 0, 0, 105, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 69, 0, 92, 93, 116, 0, 104,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 0, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 154, 156, 155,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	103, 72, 59, 0, 0, 0, 0, 179, 105, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 154, 156, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 180, 152, 153, 157,
	159, 158, 171, 172, 169, 170, 177, 173, 174, 175,
	176, 167, 168, 161, 162, 160, 163, 165, 166, 0,
	178, 154, 156, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 180, 152, 153, 157, 159, 158, 171,
	172, 169, 170, 177, 173, 174, 175, 176, 167, 168,
	161, 162, 160, 163, 165, 166, 0, 178, 154, 156,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 763, 0, 0, 0, 0, 179, 0,
	180, 152, 153, 157, 159, 158, 171, 172, 169, 170,
	177, 173, 174, 175, 176, 167, 168, 161, 162, 160,
	163, 165, 166, 0, 178, 154, 156, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 706,
	0, 0, 0, 0, 0, 179, 0, 180, 152, 153,
	157, 159, 158, 171, 172, 169, 170, 177, 173, 174,
	175, 176, 167, 168, 161, 162, 160, 163, 165, 166,
	0, 178, 154, 156, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 697, 0, 0, 0,
	0, 0, 179, 0, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 154,
	156, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 631, 0, 0, 0, 0, 0, 179,
	819, 180, 152, 153, 157, 159, 158, 171, 172, 169,
	170, 177, 173, 174, 175, 176, 167, 168, 161, 162,
	160, 163, 165, 166, 0, 178, 154, 156, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	612, 0, 0, 0, 0, 0, 179, 0, 180, 152,
	153, 157, 159, 158, 171, 172, 169, 170, 177, 173,
	174, 175, 176, 167, 168, 161, 162, 160, 163, 165,
	166, 0, 178, 154, 156, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 593, 0, 0,
	0, 0, 0, 179, 0, 180, 152, 153, 157, 159,
	158, 171, 172, 169, 170, 177, 173, 174, 175, 176,
	167, 168, 161, 162, 160, 163, 165, 166, 0, 178,
	154, 156, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 820, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 180, 152, 153, 157, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 154, 156, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 371,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 0, 154, 156, 155, 0, 0,
	0, 0, 0, 0, 0, 164, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 180, 152, 153,
	157, 159, 158, 171, 172, 169, 170, 177, 173, 174,
	175, 176, 167, 168, 161, 162, 160, 163, 165, 166,
	0, 178, 154, 156, 155, 0, 0, 0, 0, 0,
	0, 0, 723, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 0,
	154, 156, 155, 0, 0, 0, 0, 0, 0, 693,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 180, 152, 153, 157, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 154, 156, 155,
	0, 0, 0, 0, 0, 0, 0, 692, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 0, 154, 156, 155, 0, 0,
	0, 0, 0, 0, 630, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 180, 152, 153,
	157, 159, 158, 171, 172, 169, 170, 177, 173, 174,
	175, 176, 167, 168, 161, 162, 160, 163, 165, 166,
	0, 178, 154, 156, 155, 0, 0, 0, 0, 0,
	0, 0, 629, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 0,
	154, 156, 155, 0, 0, 0, 0, 0, 0, 603,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 180, 152, 153, 157, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 154, 156, 155,
	0, 0, 0, 0, 0, 0, 0, 591, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 0, 154, 156, 155, 0, 0,
	0, 0, 0, 0, 555, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 180, 152, 153,
	157, 159, 158, 171, 172, 169, 170, 177, 173, 174,
	175, 176, 167, 168, 161, 162, 160, 163, 165, 166,
	0, 178, 154, 156, 155, 0, 0, 0, 0, 0,
	0, 0, 551, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 561, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 0,
	565, 154, 156, 155, 0, 0, 410, 0, 0, 415,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 180, 152, 153, 157, 159, 158, 171,
	172, 169, 170, 177, 173, 174, 175, 176, 167, 168,
	161, 162, 160, 163, 165, 166, 0, 178, 154, 156,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	180, 152, 153, 157, 159, 158, 171, 172, 169, 170,
	177, 173, 174, 175, 176, 167, 168, 161, 162, 160,
	163, 165, 166, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164,
}
var yyPact = [...]int{

	-1000, -1000, 1193, -1000, -1000, -1000, -1000, -1000, -1000, 338,
	103, 438, 555, -1000, -1000, -1000, 330, 4896, 302, 297,
	6141, 6141, 6141, 32, 534, 6141, -1000, 6653, 293, 292,
	290, -1000, 86, 6141, 618, 724, 693, 553, 594, 590,
	584, 639, 698, 2355, -1000, -1000, 280, -1000, -1000, 82,
	279, 5457, 6141, 159, 159, 6141, 6141, 6141, 6141, 6141,
	-1000, -1000, 6141, 6141, 6141, 6141, 6141, 6141, 6141, 278,
	6141, -1000, 677, 6141, 6141, 6141, -1000, -1000, -1000, 652,
	-1000, 364, 361, -1000, 569, 274, 273, 6141, 6141, 272,
	6141, 6141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 612, 645, -1000, 58, 238, 238, 270, -1000,
	344, 522, 209, 522, -36, -1000, -1000, 176, 436, 259,
	430, 522, -1000, -1000, -1000, -1000, 254, -1000, 764, 3325,
	6141, 453, 693, 271, 6141, 6141, 171, 7318, 435, 168,
	166, 249, -1000, -1000, 242, 693, -1000, 761, 239, -1000,
	7318, -1000, 6141, 6141, 6141, 6141, 6141, 6141, 6141, 6141,
	6141, 6141, 6141, 6141, 6141, 6141, 6141, 6141, 6141, 6141,
	6141, 6141, 6141, 6141, 6141, 6141, 6141, 6141, 31, 6027,
	6141, 159, 6141, 555, -1000, 6606, 161, -1000, 294, -1000,
	582, -1000, 390, 78, 397, 263, 4896, 260, 158, 723,
	5913, 6141, 6141, 6141, 6141, 6141, 6141, 6141, 6141, 6141,
	6141, 6141, 6141, -1000, -1000, 6141, 6141, 6141, 20, 5457,
	-52, 800, -1000, -1000, 7271, 159, 258, -1000, -1000, 652,
	6141, -1000, -1000, 5457, -1000, 659, 659, 675, 659, 7127,
	659, 659, 659, 659, 659, 659, 659, -1000, 6141, 659,
	240, 454, 558, -1000, 456, 5799, 159, 1014, 5046, 1014,
	6141, 3653, 3653, 238, -1000, 357, 172, 238, -1000, -1000,
	6141, 6141, 7318, 7318, 6141, 7318, 7318, 459, -1000, 540,
	368, 454, 6141, -1000, -1000, 5343, -1000, 5457, 568, 344,
	156, 344, -1000, -1000, 1029, -1000, 154, 235, 418, 522,
	-1000, 351, 144, 566, 413, -1000, -1000, 555, 6141, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 257, 7080, 253, 248,
	151, 795, 7318, 7032, -1000, -1000, -1000, -1000, 32, -1000,
	496, 247, 6141, -1000, 6141, 1340, 1504, 3643, 1014, 3789,
	1668, 1992, 1829, 771, 771, 771, 675, 659, 675, 675,
	959, 959, 2151, 2151, 2151, 2151, 2161, 2161, 2161, 2161,
	2151, -1000, 7222, 6141, 1178, 793, -1000, -1000, 7175, 328,
	3161, -1000, -1000, 246, 539, 390, 283, 446, -1000, 76,
	446, 6141, -1000, 6141, -1000, -1000, 1014, 6141, 1014, 1014,
	1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014,
	6985, -53, 6512, 238, -1000, 6141, -1000, 208, 760, 5457,
	5685, -1000, 5457, 6937, -54, -1000, 207, -1000, -1000, -1000,
	-1000, 600, 537, 6465, 49, -26, 6141, -61, 238, -1000,
	-1000, 6141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 238, -1000,
	-1000, -1000, -1000, 32, 6141, 6141, 20, 32, 390, 792,
	-1000, 7318, 6890, 6842, -1000, -1000, -1000, 6418, -1000, 784,
	-1000, 7318, 6141, 206, -1000, -1000, 865, -1000, -1000, -1000,
	63, 408, -1000, 522, 406, 615, -1000, 62, -1000, 7318,
	205, 4732, 6141, 6141, 6141, 93, -1000, -1000, 539, 7318,
	-1000, 6141, 1178, 204, 159, 269, 4568, -1000, 539, 200,
	783, -1000, 703, -1000, -1000, 445, -1000, -1000, -1000, 283,
	75, 446, -1000, 559, -1000, 778, -1000, 6795, 6747, 2997,
	1992, 4404, -1000, -1000, -1000, 6371, 740, 6141, -1000, 7318,
	159, 233, 199, -1000, -1000, -1000, -62, -1000, -1000, 467,
	-1000, -1000, -1000, -1000, 6141, -1000, 1014, -1000, -1000, 6324,
	-1000, -1000, -73, 432, -1000, -1000, 283, 198, 6141, -1000,
	-1000, -1000, 197, 5571, 7318, -1000, -1000, 522, 59, 781,
	-1000, -1000, 522, 615, 147, -1000, -1000, -1000, 6700, 139,
	7318, -1000, 132, 130, 196, 1178, 129, -1000, 276, -1000,
	159, 232, 5457, -1000, -1000, -1000, 421, 194, 416, 539,
	262, -1000, -1000, 74, -1000, 778, -1000, -1000, 470, 431,
	446, 737, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	426, 446, 4896, 718, 126, -1000, -1000, -1000, 6141, 1014,
	-1000, 5457, 740, -1000, -1000, 6277, -1000, -1000, -1000, 69,
	-1000, -1000, -1000, -1000, 780, -1000, 522, -27, 615, -1000,
	781, -1000, 2833, 122, 6141, 17, -1000, 610, -1000, 416,
	-1000, 4076, 269, -1000, 5457, -79, 2669, -1000, 230, 68,
	710, 710, 212, -1000, 490, -1000, -1000, 417, 227, -1000,
	757, 5060, 693, 91, -1000, -1000, -1000, -1000, -1000, -1000,
	3489, 1014, 191, -31, -1000, -32, 522, 780, -1000, -1000,
	-33, 121, -1000, 190, -1000, 6141, 164, -13, 117, 535,
	710, -1000, -1000, -1000, 189, 180, -1000, 107, 446, -1000,
	36, 539, -20, 595, 752, 369, -1000, -1000, 470, 6141,
	185, -1000, 744, 5060, -1000, -1000, 3931, 3489, 740, -1000,
	220, -1000, -1000, -35, -1000, -1000, 4240, 6559, -1000, -1000,
	-1000, -1000, -1000, 106, -21, 2505, 4076, -1000, -1000, 536,
	-1000, 2341, -1000, -1000, -1000, 267, -1000, -1000, 455, 6141,
	-1000, -1000, 7318, -1000, 5060, 6141, 186, -1000, 3792, -1000,
	99, 96, 409, 424, 356, -1000, 271, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3489, -1000, -1000, 89, -1000, 179,
	446, -1000, 2177, 2013, -1000, 595, -1000, 7318, -1000, 7318,
	539, -1000, -1000, -1000, -1000, 446, 5199, 5060, 1849, 3489,
	1685, -1000, -23, -1000, -1000, -1000, -1000, 145, 778, -1000,
	-1000, 5060, -1000, -34, -1000, -1000, 710, -1000, -1000, 1521,
	-41, -1000, -1000, -1000, -1000, 1357, -1000,
}
var yyPgo = [...]int{

	0, 940, 939, 46, 737, 6, 938, 937, 14, 27,
	79, 77, 70, 51, 933, 921, 29, 20, 919, 94,
	15, 25, 78, 918, 0, 62, 917, 913, 17, 11,
	912, 911, 36, 61, 49, 33, 910, 35, 908, 72,
	50, 906, 9, 904, 903, 902, 901, 13, 48, 899,
	898, 111, 98, 197, 897, 896, 894, 8, 889, 81,
	43, 887, 55, 47, 886, 883, 882, 880, 877, 97,
	876, 875, 103, 541, 90, 1, 874, 867, 31, 866,
	862, 861, 860, 859, 7, 19, 38, 24, 857, 856,
	83, 853, 851, 850, 10, 4, 849, 848, 847, 86,
	845, 843, 18, 842, 841, 837, 44, 42, 32, 41,
	2, 16, 3, 835, 833, 832, 5, 831, 786, 664,
	826, 28, 822, 819, 811, 37, 12,
}
var yyR1 = [...]int{

	0, 124, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 112, 112, 72, 72,
	121, 121, 8, 8, 8, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 118,
	118, 15, 15, 18, 18, 125, 125, 16, 16, 21,
	21, 73, 73, 17, 17, 20, 20, 19, 19, 74,
	74, 75, 75, 23, 23, 23, 23, 23, 23, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 123, 123, 122, 122, 31, 31, 83,
	83, 32, 10, 1, 1, 2, 2, 11, 11, 117,
	117, 4, 4, 12, 13, 34, 34, 14, 14, 86,
	86, 28, 28, 28, 28, 27, 27, 29, 29, 30,
	30, 79, 79, 79, 79, 87, 87, 87, 126, 126,
	26, 26, 88, 88, 76, 76, 100, 100, 77, 77,
	84, 84, 89, 89, 35, 35, 36, 36, 111, 111,
	109, 109, 109, 110, 110, 90, 90, 91, 91, 37,
	37, 80, 80, 39, 81, 81, 40, 40, 85, 85,
	41, 41, 41, 41, 95, 95, 96, 96, 96, 101,
	101, 42, 42, 43, 44, 44, 44, 44, 46, 46,
	45, 97, 97, 113, 113, 114, 114, 115, 115, 116,
	116, 116, 116, 116, 116, 92, 92, 47, 47, 93,
	93, 94, 22, 82, 82, 48, 78, 78, 98, 98,
	50, 49, 49, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 3,
	3, 102, 102, 103, 103, 57, 57, 58, 58, 58,
	58, 51, 51, 52, 52, 55, 55, 120, 120, 120,
	99, 99, 62, 62, 62, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 63, 63, 63, 24, 24, 25, 25, 61, 64,
	64, 64, 65, 65, 65, 66, 66, 66, 66, 66,
	66, 33, 33, 33, 53, 53, 53, 67, 67, 68,
	68, 68, 68, 68, 68, 59, 59, 59, 60, 60,
	60, 106, 107, 107, 105, 105, 104, 104, 104, 104,
	104, 104, 119, 119, 119, 119, 69, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 54, 54, 54,
	54, 54, 54, 54, 71, 71, 108,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 0,
	1, 3, 1, 3, 2, 1, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 3, 4, 3, 1,
	1, 6, 7, 6, 7, 0, 1, 3, 1, 3,
	1, 3, 1, 1, 2, 1, 3, 1, 2, 3,
	1, 2, 0, 1, 1, 1, 1, 1, 4, 3,
	1, 1, 5, 7, 9, 5, 3, 3, 3, 3,
	3, 3, 1, 2, 6, 7, 9, 5, 1, 6,
	3, 3, 2, 0, 9, 1, 3, 0, 4, 1,
	3, 1, 10, 0, 1, 0, 1, 8, 7, 1,
	2, 1, 1, 5, 6, 0, 2, 0, 2, 0,
	2, 1, 2, 4, 3, 1, 4, 1, 4, 1,
	4, 3, 4, 4, 5, 0, 5, 4, 1, 1,
	1, 4, 5, 6, 1, 3, 6, 7, 3, 6,
	1, 0, 1, 3, 4, 6, 0, 1, 1, 2,
	1, 1, 1, 0, 2, 2, 4, 1, 3, 1,
	2, 3, 1, 1, 3, 1, 1, 3, 2, 0,
	3, 4, 3, 9, 1, 3, 1, 2, 3, 1,
	2, 2, 2, 3, 3, 3, 4, 3, 1, 1,
	3, 1, 3, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 1, 1, 0, 1, 3, 1,
	7, 3, 2, 6, 5, 3, 4, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 3,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 3, 2, 1, 2, 4, 2, 10, 11, 0,
	1, 0, 4, 3, 1, 1, 2, 2, 4, 4,
	2, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	0, 1, 4, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 3, 1,
	1, 1, 3, 3, 1, 1, 0, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 4, 4, 4, 4,
	1, 1, 1, 3, 1, 4, 2, 3, 3, 1,
	4, 4, 3, 3, 3, 1, 3, 1, 1, 3,
	1, 1, 0, 1, 3, 1, 3, 1, 4, 2,
	6, 4, 2, 2, 1, 2, 1, 4, 3, 3,
	3, 6, 3, 1, 1, 2, 1, 5, 4, 2,
	2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -124, -72, -7, -9, -10, -11, -12, -13, 127,
	154, 120, 114, 164, -76, -77, 97, 96, 99, 106,
	110, 111, 115, 122, 76, 95, 90, -24, 124, 101,
	103, 163, 116, 119, 112, 86, 113, -117, 128, 129,
	130, -88, -100, -33, -38, -4, 83, -66, -67, -64,
	134, 69, 71, 58, 59, 49, 50, 55, 57, 161,
	-49, -54, 60, 61, 62, 63, 64, 65, 66, 82,
	67, -56, 160, 13, 14, 16, 77, 78, -53, -63,
	-58, -51, -61, -62, 70, 125, 126, 4, 5, 6,
	7, 8, 84, 85, 141, 142, 156, 138, 139, 140,
	155, 137, 149, 159, 88, 167, -8, -65, 135, 94,
	-121, 157, 161, 157, -121, 164, 86, -18, -118, -73,
	-121, 157, 113, 114, -19, -20, -74, -22, 86, -75,
	161, -9, 113, 154, 161, 161, -25, -24, 76, -25,
	-25, -80, -39, -53, -81, 113, -40, 88, -82, -48,
	-24, 163, 33, 34, 10, 12, 11, 35, 37, 36,
	51, 49, 50, 52, 68, 53, 54, 47, 48, 40,
	41, 38, 39, 43, 44, 45, 46, 42, 56, 30,
	32, 161, 161, 161, 164, -24, 86, 31, -3, 37,
	128, -4, 86, 86, 86, 73, 74, 73, 75, 74,
	17, 18, 19, 20, 29, 21, 22, 23, 24, 25,
	26, 27, 28, 58, 59, 161, 69, 164, 133, 161,
	-106, -105, -107, -104, -24, 37, 134, -24, -33, -63,
	161, -62, 76, 69, -33, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -55, 161, -24,
	-120, 93, -119, -69, 88, 151, 152, -24, -24, -24,
	69, 153, 153, -52, -50, -51, -68, 128, -8, -53,
	161, 161, -24, -24, 161, -24, -24, 93, 150, -119,
	-119, 93, 164, -53, -90, 161, -90, 161, 157, -121,
	162, -121, 163, 164, -72, 163, -15, -73, -121, 157,
	163, 9, 157, 105, -121, -20, 163, 9, 17, -23,
	165, -9, -10, -11, -12, -13, 127, -24, 97, -3,
	-78, -98, -24, -24, 163, 163, 163, 163, 9, 163,
	9, -3, 17, 163, 9, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -52, -24, 31, -24, -83, -32, -33, -24, -74,
	-75, 163, 163, 86, 161, 86, -34, 131, 164, -14,
	131, 161, -9, 161, 163, 31, -24, 37, -24, -24,
	-24, -24, -24, -24, -24, -24, -24, -24, -24, -24,
	-24, -25, -24, -60, 86, 164, -53, -106, 166, 9,
	15, -33, 161, -24, -106, 162, -25, 160, -69, -69,
	93, 69, 133, -24, 87, -33, 15, -25, -59, -112,
	-53, 164, 86, -6, -5, 76, 77, 78, 79, 80,
	81, 4, 5, 6, 7, 8, 10, 11, 12, 56,
	70, 71, 82, 83, 73, 74, 75, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 111,
	112, 113, 114, 115, 13, 14, 134, 106, 107, 108,
	109, 110, 135, 136, 131, 132, 154, 129, 130, 128,
	137, 138, 140, 139, 141, 142, 156, 155, -59, -112,
	-53, -99, -90, 153, 69, 164, 133, 153, -99, -71,
	-108, -24, -24, -24, 150, 150, 159, -24, 162, -91,
	-37, -24, 158, -106, 86, 163, -72, 165, 163, 163,
	157, -121, -19, 157, -121, 164, 86, 157, -22, -24,
	161, 162, 161, 163, 9, 162, -39, -40, 161, -24,
	-48, 31, -24, -125, 9, 105, 162, 165, 161, -84,
	-89, -35, -36, -111, -109, 30, 135, 136, -8, -34,
	-86, 132, -8, -85, 164, -95, -8, -24, -24, -75,
	-24, 162, 166, 165, -90, -24, 162, 17, -107, -24,
	37, 134, -106, 162, 166, 162, -70, 86, 89, 50,
	88, 86, 165, 165, 69, 165, -24, 166, -90, -24,
	-90, -53, -25, -24, -60, -53, -34, -125, 9, 162,
	162, 165, -125, 9, -24, 162, 165, 164, 157, -16,
	-17, -20, -118, 164, 162, -26, -9, 31, -24, -78,
	-24, -79, 164, 31, -84, -24, 162, -32, -28, -33,
	37, 134, 69, -30, -9, 31, -123, -84, 162, 9,
	-1, 37, -109, -86, 164, -95, 165, -41, -113, -114,
	120, -115, 123, -116, 81, 80, 79, 76, 77, 78,
	-85, 9, 162, 162, 75, -9, 31, 165, 17, -24,
	-33, 161, 162, 166, 89, -24, 165, 166, 165, -86,
	162, -108, 162, -37, -21, -20, 164, -125, 9, -20,
	-16, 163, -75, 162, 163, -87, 163, -87, 163, 162,
	163, 162, 15, -33, 161, -106, -75, -31, 117, 118,
	162, -102, 120, -35, -2, 158, 164, -85, -92, -47,
	88, 114, 113, -95, -116, 165, -8, -9, 31, 163,
	-75, -24, -106, 166, 164, -125, 9, -21, 165, -17,
	-125, 98, 163, -78, 165, 108, 109, -87, 107, -87,
	-102, -29, -9, 31, -28, -106, 166, 104, 161, 164,
	-110, 31, -110, 161, 88, -85, 165, 163, 9, 17,
	-93, -94, -112, -3, -96, 163, 164, -75, 162, 165,
	-85, 165, -20, -125, 165, 163, 162, -24, -126, 31,
	163, 165, 163, 107, -110, -75, 162, 162, 163, -122,
	-8, -75, 164, -111, 164, -103, -57, 88, 37, 17,
	165, -47, -24, 163, 9, 17, -112, 165, -101, -42,
	-43, -44, -45, -46, -8, -112, 154, 86, 165, 165,
	-27, -9, 31, -126, -75, 163, 164, 102, -29, 88,
	35, 165, -75, -75, 162, 9, 88, -24, -94, -24,
	161, 165, -42, 163, 163, 121, 105, 153, -75, -75,
	-75, 163, 162, -8, 165, 165, -57, -84, -95, 86,
	-5, -116, -112, 100, 165, 164, 162, -112, 163, -75,
	-110, 165, -97, 163, 164, -75, 165,
}
var yyDef = [...]int{

	79, -2, 1, 78, 85, 86, 87, 88, 89, 0,
	0, 0, 0, 122, 130, 131, 0, 0, 0, 0,
	416, 416, 416, 0, 381, 0, 142, 0, 0, 0,
	0, 148, 0, 0, 0, 80, 369, 0, 0, 0,
	0, 204, 0, -2, 415, 169, 0, -2, 432, 418,
	0, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 350, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 360, 387, 0, 363, 0, 171, 172, 425, 410,
	430, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 0, 434, 0, -2, 0, 0, 394,
	82, 0, 0, 0, 0, 79, 80, 0, 0, 0,
	115, 0, 99, 100, 112, 117, 0, 120, 0, 0,
	0, 0, 369, 0, 286, 0, 0, 417, 381, 0,
	0, 0, 232, 233, 0, 369, 235, 236, 0, 284,
	285, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 152, 0, 370,
	0, 170, 175, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 312, 0, 416, 0, 0, 452,
	0, 451, 455, 453, 457, 0, 0, 297, -2, 0,
	0, -2, 381, 452, -2, 331, 332, 333, 334, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 416, 359,
	0, 388, 389, 464, 466, 0, 0, 362, 364, 366,
	416, 0, 0, 390, 292, 383, 384, 390, 382, 439,
	0, 0, 479, 480, 0, 482, 483, 0, 406, 0,
	0, 0, 0, 436, 377, 0, 380, 452, 0, 84,
	0, 83, 91, 79, 0, 94, 0, 0, 115, 0,
	96, 0, 0, 0, 115, 118, 98, 0, 0, 121,
	129, 123, 124, 125, 126, 127, 0, 0, 0, 0,
	0, 287, 289, 0, 136, 137, 138, 139, 0, 140,
	0, 0, 0, 141, 0, 314, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 344, 0, 0, 349, 105, 159, -2, 0, 0,
	0, 150, 151, 0, -2, 175, 179, 0, 239, 0,
	0, 0, 205, 0, 208, 122, 295, 0, 298, 299,
	300, 301, 302, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 0, 433, 448, 0, 450, 0, 393, 452,
	0, -2, 452, 0, 0, -2, 0, 361, 465, 462,
	463, 0, 0, 0, 0, 419, 0, 0, 0, -2,
	-2, 0, 76, 77, 69, 70, 71, 72, 73, 74,
	75, 2, 3, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 0, -2,
	-2, 291, 391, 0, 416, 0, 0, 0, 175, 105,
	484, 486, 0, 0, 405, 408, 407, 0, 225, 105,
	227, 229, 0, 0, 81, 90, 0, 93, 95, 97,
	0, 115, 111, 0, 115, 0, 116, 0, 119, 282,
	0, 0, 0, 286, 0, 0, 231, 234, -2, 237,
	283, 0, 348, 0, 106, 0, 0, 153, -2, 0,
	210, 212, 163, 217, 218, 0, 220, 221, 222, 179,
	0, 0, 176, 265, 239, 178, 244, 0, 0, 0,
	296, 0, 426, 428, 429, 0, 0, 0, 454, 456,
	0, 0, 0, -2, 393, 386, 0, 473, 474, 0,
	476, 468, 469, 470, 0, 472, 365, 427, 378, 0,
	379, 443, 0, 0, 442, 444, 179, 0, 106, 478,
	481, 435, 0, 106, 230, 392, 92, 0, 0, 105,
	108, 113, 0, 0, 0, 132, 200, 122, 0, 0,
	288, 135, 195, 195, 0, 347, 0, 160, 0, -2,
	0, 0, 452, 147, 189, 122, 157, 0, 371, 216,
	165, 164, 219, 0, 239, 180, 173, 238, 0, 0,
	0, -2, 264, 267, 269, 270, 271, 272, 273, 274,
	265, 0, 0, 0, 0, 202, 122, 449, 0, 294,
	-2, 452, 461, 467, 475, 0, 446, 440, 441, 0,
	477, 485, 226, 228, 105, 110, 0, 0, 106, 114,
	105, 128, 0, 0, 286, 0, 195, 0, 195, 371,
	144, 0, 0, -2, 452, 0, 0, 149, 0, 0,
	223, 223, 0, 213, 0, 166, 239, 265, 0, 276,
	277, 0, 369, 0, 268, 174, 245, 203, 122, 209,
	206, 293, 0, 0, 239, 0, 106, 105, 103, 107,
	0, 0, 133, 0, 191, 0, 0, 0, 0, 0,
	223, 145, 187, 122, 0, 0, -2, 0, 0, 122,
	0, 0, 0, 0, 214, 265, 168, 240, 0, 0,
	0, 280, 0, 0, 242, 246, 0, 207, 460, 471,
	265, 101, 109, 0, 104, 201, 0, 0, 122, 198,
	199, 192, 193, 0, 0, 0, 0, 183, 190, 0,
	155, 0, 122, 224, 122, 0, 374, 375, 0, 0,
	167, 275, 278, 241, 0, 0, 0, 247, 0, 249,
	0, 0, 259, 0, 0, 258, 57, -2, 290, 102,
	134, 185, 122, 122, 197, 194, 122, 0, 146, 0,
	0, 158, 0, 0, 372, 0, 376, 215, 279, 281,
	-2, 248, 250, 251, 252, 0, 0, 0, 0, 196,
	0, 188, 0, 156, 162, 367, 373, 0, 253, 254,
	255, 257, 260, 0, 368, 122, 223, 256, 186, 0,
	0, 154, 243, 261, 122, 0, 262,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 55, 159, 3, 167, 54, 37, 3,
	161, 162, 52, 49, 9, 50, 51, 53, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 31, 163,
	43, 17, 45, 30, 67, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 69, 3, 166, 36, 3, 160, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 164, 35, 165, 57,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 10, 11, 12,
	13, 14, 15, 16, 18, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 32, 33, 34, 38,
	39, 40, 41, 42, 44, 46, 47, 48, 56, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 68, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:219
		{
			rootnode = yyDollar[1].node
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:223
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:226
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:233
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:238
		{
			yyVAL.node = node.TokenNode("identifier", yyDollar[1].token)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:239
		{
			yyVAL.node = node.TokenNode("identifier", yyDollar[1].token)
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:243
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[2].node)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:244
		{
			yyVAL.node = node.NewSimpleNode("Statements")
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:248
		{
			yyVAL.list = []node.Node{name.NewNamePart(yyDollar[1].token)}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:249
		{
			yyVAL.list = append(yyDollar[1].list, name.NewNamePart(yyDollar[3].token))
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:253
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:254
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:255
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:259
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:260
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:261
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:262
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:263
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:264
		{
			yyVAL.node = node.NewSimpleNode("THaltCompiler")
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:265
		{
			yyVAL.node = node.NewSimpleNode("Namespace").Append(name.NewName(yyDollar[2].list))
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:267
		{
			yyVAL.node = node.NewSimpleNode("Namespace").Append(name.NewName(yyDollar[2].list)).Append(yyDollar[4].node)
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:268
		{
			yyVAL.node = node.NewSimpleNode("Namespace").Append(yyDollar[3].node)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:269
		{
			yyVAL.node = yyDollar[2].node
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:270
		{
			yyVAL.node = yyDollar[3].node.Append(yyDollar[2].node)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:271
		{
			yyVAL.node = yyDollar[2].node
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:272
		{
			yyVAL.node = yyDollar[3].node.Append(yyDollar[2].node)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:273
		{
			yyVAL.node = yyDollar[2].node
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:277
		{
			yyVAL.node = node.NewSimpleNode("FuncUseType")
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:278
		{
			yyVAL.node = node.NewSimpleNode("ConstUseType")
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:283
		{
			yyVAL.node = node.NewSimpleNode("GroupUse").Append(name.NewName(yyDollar[1].list)).Append(yyDollar[4].node)
		}
	case 102:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser/parser.y:285
		{
			yyVAL.node = node.NewSimpleNode("GroupUse").Append(name.NewName(yyDollar[2].list)).Append(yyDollar[5].node)
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:290
		{
			yyVAL.node = node.NewSimpleNode("MixedGroupUse").Append(name.NewName(yyDollar[1].list)).Append(yyDollar[4].node)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser/parser.y:292
		{
			yyVAL.node = node.NewSimpleNode("MixedGroupUse").Append(name.NewName(yyDollar[2].list)).Append(yyDollar[5].node)
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:302
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:303
		{
			yyVAL.node = node.NewSimpleNode("UseList").Append(yyDollar[1].node)
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:308
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:309
		{
			yyVAL.node = node.NewSimpleNode("UseList").Append(yyDollar[1].node)
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:313
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:314
		{
			yyVAL.node = node.NewSimpleNode("UseList").Append(yyDollar[1].node)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:318
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:319
		{
			yyVAL.node = yyDollar[2].node.Append(yyDollar[1].node)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:323
		{
			yyVAL.node = node.NewSimpleNode("UseElem").Append(name.NewName(yyDollar[1].list))
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:324
		{
			yyVAL.node = node.NewSimpleNode("UseElem").Append(name.NewName(yyDollar[1].list)).Append(node.NewSimpleNode("as").Attribute("value", yyDollar[3].token.String()))
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:328
		{
			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:329
		{
			yyVAL.node = yyDollar[2].node
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:333
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:334
		{
			yyVAL.node = node.NewSimpleNode("ConstList").Append(yyDollar[1].node)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:338
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[2].node)
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:339
		{
			yyVAL.node = node.NewSimpleNode("stmt")
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:343
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:344
		{
			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:345
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:346
		{
			yyVAL.node = yyDollar[1].node
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:347
		{
			yyVAL.node = yyDollar[1].node
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:348
		{
			yyVAL.node = node.NewSimpleNode("THaltCompiler")
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:351
		{
			yyVAL.node = yyDollar[2].node
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:352
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:353
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:355
		{
			yyVAL.node = node.NewSimpleNode("While").
				Append(node.NewSimpleNode("expr").Append(yyDollar[3].node)).
				Append(node.NewSimpleNode("stmt").Append(yyDollar[5].node))
		}
	case 133:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser/parser.y:361
		{
			yyVAL.node = node.NewSimpleNode("DoWhile").
				Append(node.NewSimpleNode("expr").Append(yyDollar[5].node)).
				Append(node.NewSimpleNode("stmt").Append(yyDollar[2].node))
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser/parser.y:367
		{
			yyVAL.node = node.NewSimpleNode("For").
				Append(node.NewSimpleNode("expr1").Append(yyDollar[3].node)).
				Append(node.NewSimpleNode("expr2").Append(yyDollar[5].node)).
				Append(node.NewSimpleNode("expr3").Append(yyDollar[7].node)).
				Append(node.NewSimpleNode("stmt").Append(yyDollar[9].node))
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:374
		{
			yyVAL.node = node.NewSimpleNode("Switch").Append(node.NewSimpleNode("expr").Append(yyDollar[3].node)).Append(yyDollar[5].node)
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:375
		{
			yyVAL.node = stmt.NewBreak(yyDollar[1].token, yyDollar[2].node)
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:376
		{
			yyVAL.node = node.NewSimpleNode("Continue").Append(yyDollar[2].node)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:377
		{
			yyVAL.node = node.NewSimpleNode("Return").Append(yyDollar[2].node)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:378
		{
			yyVAL.node = yyDollar[2].node
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:379
		{
			yyVAL.node = yyDollar[2].node
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:380
		{
			yyVAL.node = yyDollar[2].node
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:381
		{
			yyVAL.node = node.NewSimpleNode("Echo").Append(node.NewSimpleNode("InlineHtml").Attribute("value", yyDollar[1].token.String()))
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:382
		{
			yyVAL.node = yyDollar[1].node
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:384
		{
			yyVAL.node = node.NewSimpleNode("Unset").Append(yyDollar[3].node)
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser/parser.y:386
		{
			yyVAL.node = node.NewSimpleNode("Foreach").
				Append(node.NewSimpleNode("expr").Append(yyDollar[3].node)).
				Append(node.NewSimpleNode("ForeachVariable").Append(yyDollar[5].node)).
				Append(yyDollar[7].node)
		}
	case 146:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser/parser.y:393
		{
			yyVAL.node = node.NewSimpleNode("Foreach").
				Append(node.NewSimpleNode("expr").Append(yyDollar[3].node)).
				Append(node.NewSimpleNode("ForeachKey").Append(yyDollar[5].node)).
				Append(node.NewSimpleNode("ForeachVariable").Append(yyDollar[7].node)).
				Append(yyDollar[9].node)
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:400
		{
			yyVAL.node = node.NewSimpleNode("Declare").Append(yyDollar[3].node).Append(yyDollar[5].node)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:401
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:403
		{
			yyVAL.node = stmt.NewTry(yyDollar[1].token, yyDollar[3].node, yyDollar[5].list, yyDollar[6].node)
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:406
		{
			yyVAL.node = node.NewSimpleNode("Throw").Append(yyDollar[2].node)
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:407
		{
			yyVAL.node = node.NewSimpleNode("GoTo").Attribute("Label", yyDollar[2].token.String())
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:408
		{
			yyVAL.node = node.NewSimpleNode("Label").Attribute("name", yyDollar[1].token.String())
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:411
		{
			yyVAL.list = []node.Node{}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser/parser.y:413
		{
			yyVAL.list = append(yyDollar[1].list, stmt.NewCatch(yyDollar[2].token, yyDollar[4].list, expr.NewVariable(yyDollar[5].token), yyDollar[8].node))
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:416
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:417
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:421
		{
			yyVAL.node = nil
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:422
		{
			yyVAL.node = stmt.NewFinally(yyDollar[1].token, yyDollar[3].node)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:426
		{
			yyVAL.node = node.NewSimpleNode("UnsetVariablesList").Append(yyDollar[1].node)
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:427
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:431
		{
			yyVAL.node = yyDollar[1].node
		}
	case 162:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser/parser.y:436
		{
			yyVAL.node = node.NewSimpleNode("Function").
				Attribute("name", yyDollar[3].token.String()).
				Attribute("returns_ref", yyDollar[2].value).
				Append(yyDollar[5].node).
				Append(yyDollar[7].node).
				Append(yyDollar[9].node)
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:447
		{
			yyVAL.value = "false"
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:448
		{
			yyVAL.value = "true"
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:452
		{
			yyVAL.value = "false"
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:453
		{
			yyVAL.value = "true"
		}
	case 167:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser/parser.y:458
		{
			yyVAL.node = node.NewSimpleNode("Class").
				Attribute("name", yyDollar[3].token.String()).
				Append(yyDollar[1].node).
				Append(node.NewSimpleNode("Extends").Append(yyDollar[4].node)).
				Append(node.NewSimpleNode("Implements").Append(yyDollar[5].node)).
				Append(yyDollar[7].node)
		}
	case 168:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser/parser.y:467
		{
			yyVAL.node = node.NewSimpleNode("Class").
				Attribute("name", yyDollar[2].token.String()).
				Append(node.NewSimpleNode("Extends").Append(yyDollar[3].node)).
				Append(node.NewSimpleNode("Implements").Append(yyDollar[4].node)).
				Append(yyDollar[6].node)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:477
		{
			yyVAL.node = node.NewSimpleNode("Class").Attribute(yyDollar[1].value, "true")
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:478
		{
			yyVAL.node = yyDollar[1].node.Attribute(yyDollar[2].value, "true")
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:482
		{
			yyVAL.value = "abstract"
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:483
		{
			yyVAL.value = "final"
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:487
		{
			yyVAL.node = node.NewSimpleNode("Trait").Attribute("name", yyDollar[2].token.String()).Append(yyDollar[4].node)
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:492
		{
			yyVAL.node = node.NewSimpleNode("Interface").
				Attribute("name", yyDollar[2].token.String()).
				Append(node.NewSimpleNode("Extends").Append(yyDollar[3].node)).
				Append(yyDollar[5].node)
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:501
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:502
		{
			yyVAL.node = yyDollar[2].node
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:506
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:507
		{
			yyVAL.node = yyDollar[2].node
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:511
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:512
		{
			yyVAL.node = yyDollar[2].node
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:516
		{
			yyVAL.node = yyDollar[1].node
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:517
		{
			yyVAL.node = node.NewSimpleNode("Ref").Append(yyDollar[2].node)
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:518
		{
			yyVAL.node = node.NewSimpleNode("List").Append(yyDollar[3].node)
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:519
		{
			yyVAL.node = node.NewSimpleNode("ShortList").Append(yyDollar[2].node)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:523
		{
			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:524
		{
			yyVAL.node = yyDollar[2].node
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:528
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:529
		{
			yyVAL.node = yyDollar[2].node
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:533
		{
			yyVAL.node = yyDollar[1].node
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:534
		{
			yyVAL.node = yyDollar[2].node
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:538
		{
			yyVAL.node = yyDollar[2].node
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:539
		{
			yyVAL.node = yyDollar[3].node
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:540
		{
			yyVAL.node = yyDollar[2].node
		}
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:541
		{
			yyVAL.node = yyDollar[3].node
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:545
		{
			yyVAL.node = node.NewSimpleNode("CaseList")
		}
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:547
		{
			yyVAL.node = yyDollar[1].node.Append(stmt.NewCase(yyDollar[2].token, yyDollar[3].node, yyDollar[5].node))
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:551
		{
			yyVAL.node = yyDollar[1].node.Append(stmt.NewDefault(yyDollar[2].token, yyDollar[4].node))
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:562
		{
			yyVAL.node = yyDollar[1].node
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:563
		{
			yyVAL.node = yyDollar[2].node
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:568
		{
			yyVAL.node = node.NewSimpleNode("If").Append(node.NewSimpleNode("expr").Append(yyDollar[3].node)).Append(node.NewSimpleNode("stmt").Append(yyDollar[5].node))
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:572
		{
			yyVAL.node = yyDollar[1].node.Append(node.NewSimpleNode("ElseIf").Append(node.NewSimpleNode("expr").Append(yyDollar[4].node)).Append(node.NewSimpleNode("stmt").Append(yyDollar[6].node)))
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:578
		{
			yyVAL.node = yyDollar[1].node
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:580
		{
			yyVAL.node = yyDollar[1].node.Append(node.NewSimpleNode("Else").Append(node.NewSimpleNode("stmt").Append(yyDollar[3].node)))
		}
	case 206:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:587
		{
			yyVAL.node = node.NewSimpleNode("AltIf").Append(node.NewSimpleNode("expr").Append(yyDollar[3].node)).Append(node.NewSimpleNode("stmt").Append(yyDollar[6].node))
		}
	case 207:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser/parser.y:591
		{
			yyVAL.node = yyDollar[1].node.Append(node.NewSimpleNode("AltElseIf").Append(node.NewSimpleNode("expr").Append(yyDollar[4].node)).Append(node.NewSimpleNode("stmt").Append(yyDollar[7].node)))
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:597
		{
			yyVAL.node = yyDollar[1].node
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:599
		{
			yyVAL.node = yyDollar[1].node.Append(node.NewSimpleNode("AltElse").Append(node.NewSimpleNode("stmt").Append(yyDollar[4].node)))
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:605
		{
			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:606
		{
			yyVAL.node = node.NewSimpleNode("Parameter list")
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:610
		{
			yyVAL.node = node.NewSimpleNode("Parameter list").Append(yyDollar[1].node)
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:611
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:616
		{
			yyVAL.node = node.NewSimpleNode("Parameter").
				Append(yyDollar[1].node).
				Attribute("is_reference", yyDollar[2].value).
				Attribute("is_variadic", yyDollar[3].value).
				Attribute("var", yyDollar[4].token.String())
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:624
		{
			yyVAL.node = node.NewSimpleNode("Parameter").
				Append(yyDollar[1].node).
				Attribute("is_reference", yyDollar[2].value).
				Attribute("is_variadic", yyDollar[3].value).
				Attribute("var", yyDollar[4].token.String()).
				Append(yyDollar[6].node)
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:635
		{
			yyVAL.node = node.NewSimpleNode("No type")
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:636
		{
			yyVAL.node = yyDollar[1].node
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:640
		{
			yyVAL.node = yyDollar[1].node
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:641
		{
			yyVAL.node = yyDollar[2].node
			yyVAL.node.Attribute("nullable", "true")
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:645
		{
			yyVAL.node = node.NewSimpleNode("array type")
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:646
		{
			yyVAL.node = node.NewSimpleNode("callable type")
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:647
		{
			yyVAL.node = yyDollar[1].node
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:651
		{
			yyVAL.node = node.NewSimpleNode("No return type")
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:652
		{
			yyVAL.node = yyDollar[2].node
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:656
		{
			yyVAL.node = node.NewSimpleNode("ArgumentList")
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:657
		{
			yyVAL.node = yyDollar[2].node
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:661
		{
			yyVAL.node = node.NewSimpleNode("ArgumentList").Append(yyDollar[1].node)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:662
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:666
		{
			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:667
		{
			yyVAL.node = node.NewSimpleNode("Unpack").Append(yyDollar[2].node)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:671
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:672
		{
			yyVAL.node = node.NewSimpleNode("GlobalVarList").Append(yyDollar[1].node)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:676
		{
			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:680
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:681
		{
			yyVAL.node = node.NewSimpleNode("StaticVarList").Append(yyDollar[1].node)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:685
		{
			yyVAL.node = node.NewSimpleNode("StaticVariable").Attribute("Name", yyDollar[1].token.String())
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:686
		{
			yyVAL.node = node.NewSimpleNode("StaticVariable").Attribute("Name", yyDollar[1].token.String()).Append(node.NewSimpleNode("expr").Append(yyDollar[3].node))
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:690
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[2].node)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:691
		{
			yyVAL.node = node.NewSimpleNode("Stmt")
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:695
		{
			yyVAL.node = yyDollar[2].node.Append(yyDollar[1].node)
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:696
		{
			yyVAL.node = yyDollar[3].node.Append(yyDollar[1].node)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:697
		{
			yyVAL.node = node.NewSimpleNode("Use").Append(yyDollar[2].node).Append(yyDollar[3].node)
		}
	case 243:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser/parser.y:700
		{
			yyVAL.node = node.NewSimpleNode("Function").
				Append(yyDollar[1].node).
				Append(node.NewSimpleNode("name").Append(yyDollar[4].node)).
				Attribute("returns_ref", yyDollar[3].value).
				Append(yyDollar[6].node).
				Append(yyDollar[8].node).
				Append(yyDollar[9].node)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:712
		{
			yyVAL.node = node.NewSimpleNode("NameList").Append(yyDollar[1].node)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:713
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:717
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:718
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:719
		{
			yyVAL.node = yyDollar[2].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:723
		{
			yyVAL.node = node.NewSimpleNode("TraitAdaptionList").Append(yyDollar[1].node)
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:724
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[2].node)
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:728
		{
			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:729
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:734
		{
			yyVAL.node = node.NewSimpleNode("TraitPrecedence").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:738
		{
			yyVAL.node = yyDollar[1].node.Append(node.NewSimpleNode("as").Attribute("value", yyDollar[3].token.String()))
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:740
		{
			yyVAL.node = yyDollar[1].node.Append(node.NewSimpleNode("as").Append(node.NewSimpleNode("reservedNonModifiers")))
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:742
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node).Append(yyDollar[4].node)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:743
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:747
		{
			yyVAL.node = node.NewSimpleNode("TraitMethodRef").Append(yyDollar[1].node)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:748
		{
			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:752
		{
			yyVAL.node = node.NewSimpleNode("TraitMethodRef").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:756
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:757
		{
			yyVAL.node = yyDollar[2].node
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:761
		{
			yyVAL.node = yyDollar[1].node
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:762
		{
			yyVAL.node = node.NewSimpleNode("VarMemberModifier")
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:766
		{
			yyVAL.node = node.NewSimpleNode("PublicMemberModifier")
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:767
		{
			yyVAL.node = yyDollar[1].node
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:771
		{
			yyVAL.node = yyDollar[1].node
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:772
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[2].node)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:776
		{
			yyVAL.node = node.NewSimpleNode("PublicMemberModifier")
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:777
		{
			yyVAL.node = node.NewSimpleNode("ProtectedMemberModifier")
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:778
		{
			yyVAL.node = node.NewSimpleNode("PrivateMemberModifier")
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:779
		{
			yyVAL.node = node.NewSimpleNode("StaticMemberModifier")
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:780
		{
			yyVAL.node = node.NewSimpleNode("AbstractMemberModifier")
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:781
		{
			yyVAL.node = node.NewSimpleNode("FinalMemberModifier")
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:785
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:786
		{
			yyVAL.node = node.NewSimpleNode("PropertyList").Append(yyDollar[1].node)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:790
		{
			yyVAL.node = node.NewSimpleNode("Property").Attribute("name", yyDollar[1].token.String())
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:791
		{
			yyVAL.node = node.NewSimpleNode("Property").Attribute("name", yyDollar[1].token.String()).Append(node.NewSimpleNode("Default").Append(yyDollar[3].node))
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:795
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:796
		{
			yyVAL.node = node.NewSimpleNode("ConstList").Append(yyDollar[1].node)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:800
		{
			yyVAL.node = node.NewSimpleNode("Const").Append(yyDollar[3].node)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:804
		{
			yyVAL.node = node.NewSimpleNode("Const").Attribute("name", yyDollar[1].token.String()).Append(yyDollar[3].node)
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:808
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:809
		{
			yyVAL.node = node.NewSimpleNode("EchoList").Append(yyDollar[1].node)
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:813
		{
			yyVAL.node = node.NewSimpleNode("Echo").Append(yyDollar[1].node)
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:817
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:818
		{
			yyVAL.node = yyDollar[1].node
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:821
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:822
		{
			yyVAL.node = node.NewSimpleNode("ExpressionList").Append(yyDollar[1].node)
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser/parser.y:827
		{
			yyVAL.node = node.NewSimpleNode("AnonymousClass").
				Attribute("name", yyDollar[1].token.String()).
				Append(yyDollar[2].node).
				Append(yyDollar[3].node).
				Append(yyDollar[4].node).
				Append(yyDollar[6].node)
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:838
		{
			yyVAL.node = node.NewSimpleNode("New").Append(yyDollar[2].node).Append(yyDollar[3].node)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:839
		{
			yyVAL.node = node.NewSimpleNode("New").Append(yyDollar[2].node)
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:843
		{
			yyVAL.node = node.NewSimpleNode("Assign").Append(yyDollar[3].node).Append(yyDollar[6].node)
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:844
		{
			yyVAL.node = node.NewSimpleNode("Assign").Append(yyDollar[2].node).Append(yyDollar[5].node)
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:845
		{
			yyVAL.node = node.NewSimpleNode("Assign").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:846
		{
			yyVAL.node = node.NewSimpleNode("AssignRef").Append(yyDollar[1].node).Append(yyDollar[4].node)
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:847
		{
			yyVAL.node = node.NewSimpleNode("Clone").Append(yyDollar[2].node)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:848
		{
			yyVAL.node = node.NewSimpleNode("AssignAdd").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:849
		{
			yyVAL.node = node.NewSimpleNode("AssignSub").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:850
		{
			yyVAL.node = node.NewSimpleNode("AssignMul").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:851
		{
			yyVAL.node = node.NewSimpleNode("AssignPow").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:852
		{
			yyVAL.node = node.NewSimpleNode("AssignDiv").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:853
		{
			yyVAL.node = node.NewSimpleNode("AssignConcat").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:854
		{
			yyVAL.node = node.NewSimpleNode("AssignMod").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:855
		{
			yyVAL.node = node.NewSimpleNode("AssignAnd").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:856
		{
			yyVAL.node = node.NewSimpleNode("AssignOr").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:857
		{
			yyVAL.node = node.NewSimpleNode("AssignXor").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:858
		{
			yyVAL.node = node.NewSimpleNode("AssignShiftLeft").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:859
		{
			yyVAL.node = node.NewSimpleNode("AssignShiftRight").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:860
		{
			yyVAL.node = node.NewSimpleNode("PostIncrement").Append(yyDollar[1].node)
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:861
		{
			yyVAL.node = node.NewSimpleNode("PreIncrement").Append(yyDollar[2].node)
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:862
		{
			yyVAL.node = node.NewSimpleNode("PostDecrement").Append(yyDollar[1].node)
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:863
		{
			yyVAL.node = node.NewSimpleNode("PreDecrement").Append(yyDollar[2].node)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:864
		{
			yyVAL.node = node.NewSimpleNode("Or").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:865
		{
			yyVAL.node = node.NewSimpleNode("And").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:866
		{
			yyVAL.node = node.NewSimpleNode("Or").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:867
		{
			yyVAL.node = node.NewSimpleNode("And").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:868
		{
			yyVAL.node = node.NewSimpleNode("Xor").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:869
		{
			yyVAL.node = node.NewSimpleNode("BitwiseOr").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:870
		{
			yyVAL.node = node.NewSimpleNode("BitwiseAnd").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:871
		{
			yyVAL.node = node.NewSimpleNode("BitwiseXor").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:872
		{
			yyVAL.node = node.NewSimpleNode("Concat").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:873
		{
			yyVAL.node = node.NewSimpleNode("Add").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:874
		{
			yyVAL.node = node.NewSimpleNode("Sub").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:875
		{
			yyVAL.node = node.NewSimpleNode("Mul").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:876
		{
			yyVAL.node = node.NewSimpleNode("Pow").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:877
		{
			yyVAL.node = node.NewSimpleNode("Div").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:878
		{
			yyVAL.node = node.NewSimpleNode("Mod").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:879
		{
			yyVAL.node = node.NewSimpleNode("ShiftLeft").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:880
		{
			yyVAL.node = node.NewSimpleNode("ShiftRight").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:881
		{
			yyVAL.node = node.NewSimpleNode("UnaryPlus").Append(yyDollar[2].node)
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:882
		{
			yyVAL.node = node.NewSimpleNode("UnaryMinus").Append(yyDollar[2].node)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:883
		{
			yyVAL.node = node.NewSimpleNode("BooleanNot").Append(yyDollar[2].node)
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:884
		{
			yyVAL.node = node.NewSimpleNode("BitwiseNot").Append(yyDollar[2].node)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:885
		{
			yyVAL.node = node.NewSimpleNode("Identical").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:886
		{
			yyVAL.node = node.NewSimpleNode("NotIdentical").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:887
		{
			yyVAL.node = node.NewSimpleNode("Equal").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:888
		{
			yyVAL.node = node.NewSimpleNode("NotEqual").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:889
		{
			yyVAL.node = node.NewSimpleNode("Smaller").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:890
		{
			yyVAL.node = node.NewSimpleNode("SmallerOrEqual").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:891
		{
			yyVAL.node = node.NewSimpleNode("Greater").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:892
		{
			yyVAL.node = node.NewSimpleNode("GreaterOrEqual").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:893
		{
			yyVAL.node = node.NewSimpleNode("Spaceship").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:894
		{
			yyVAL.node = node.NewSimpleNode("InstanceOf").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:895
		{
			yyVAL.node = yyDollar[2].node
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:896
		{
			yyVAL.node = yyDollar[1].node
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:897
		{
			yyVAL.node = node.NewSimpleNode("Ternary").Append(yyDollar[1].node).Append(yyDollar[3].node).Append(yyDollar[5].node)
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:898
		{
			yyVAL.node = node.NewSimpleNode("Ternary").Append(yyDollar[1].node).Append(yyDollar[4].node)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:899
		{
			yyVAL.node = node.NewSimpleNode("Coalesce").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:900
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:901
		{
			yyVAL.node = node.NewSimpleNode("CastInt").Append(yyDollar[2].node)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:902
		{
			yyVAL.node = node.NewSimpleNode("CastDouble").Append(yyDollar[2].node)
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:903
		{
			yyVAL.node = node.NewSimpleNode("CastString").Append(yyDollar[2].node)
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:904
		{
			yyVAL.node = node.NewSimpleNode("CastArray").Append(yyDollar[2].node)
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:905
		{
			yyVAL.node = node.NewSimpleNode("CastObject").Append(yyDollar[2].node)
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:906
		{
			yyVAL.node = node.NewSimpleNode("CastBool").Append(yyDollar[2].node)
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:907
		{
			yyVAL.node = node.NewSimpleNode("CastUnset").Append(yyDollar[2].node)
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:908
		{
			yyVAL.node = node.NewSimpleNode("Exit").Append(yyDollar[2].node)
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:909
		{
			yyVAL.node = node.NewSimpleNode("Silence").Append(yyDollar[2].node)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:910
		{
			yyVAL.node = yyDollar[1].node
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:911
		{
			yyVAL.node = node.NewNodeExprShellExec(yyDollar[1].token, yyDollar[2].list, yyDollar[3].token)
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:912
		{
			yyVAL.node = node.NewSimpleNode("Print").Append(yyDollar[2].node)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:913
		{
			yyVAL.node = node.NewSimpleNode("Yield")
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:914
		{
			yyVAL.node = node.NewSimpleNode("Yield").Append(yyDollar[2].node)
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:915
		{
			yyVAL.node = node.NewSimpleNode("Yield").Append(yyDollar[2].node).Append(yyDollar[4].node)
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:916
		{
			yyVAL.node = node.NewSimpleNode("YieldFrom").Append(yyDollar[2].node)
		}
	case 367:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser/parser.y:918
		{
			yyVAL.node = node.NewSimpleNode("Closure").
				Attribute("returns_ref", yyDollar[2].value).
				Append(yyDollar[4].node).
				Append(yyDollar[6].node).
				Append(yyDollar[7].node).
				Append(yyDollar[9].node)
		}
	case 368:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser/parser.y:927
		{
			yyVAL.node = node.NewSimpleNode("StaticClosure").
				Attribute("returns_ref", yyDollar[3].value).
				Append(yyDollar[5].node).
				Append(yyDollar[7].node).
				Append(yyDollar[8].node).
				Append(yyDollar[10].node)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:938
		{
			yyVAL.value = "false"
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:939
		{
			yyVAL.value = "true"
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:943
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:944
		{
			yyVAL.node = yyDollar[3].node
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:948
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:949
		{
			yyVAL.node = node.NewSimpleNode("ClosureUses").Append(yyDollar[1].node)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:953
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("value", yyDollar[1].token.String())
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:954
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("value", yyDollar[2].token.String()).Attribute("ref", "true")
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:958
		{
			yyVAL.node = node.NewSimpleNode("FunctionCall").Append(yyDollar[1].node).Append(yyDollar[2].node)
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:960
		{
			yyVAL.node = node.NewSimpleNode("StaticCall").Append(yyDollar[1].node).Append(yyDollar[3].node).Append(yyDollar[4].node)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:962
		{
			yyVAL.node = node.NewSimpleNode("StaticCall").Append(yyDollar[1].node).Append(yyDollar[3].node).Append(yyDollar[4].node)
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:963
		{
			yyVAL.node = node.NewSimpleNode("Call").Append(yyDollar[1].node).Append(yyDollar[2].node)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:967
		{
			yyVAL.node = node.NewSimpleNode("Static")
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:968
		{
			yyVAL.node = yyDollar[1].node
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:972
		{
			yyVAL.node = yyDollar[1].node
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:973
		{
			yyVAL.node = yyDollar[1].node
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:977
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:978
		{
			yyVAL.node = yyDollar[2].node
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:982
		{
			yyVAL.list = []node.Node{}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:983
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:984
		{
			yyVAL.list = yyDollar[1].list
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:988
		{
			yyVAL.node = node.NewSimpleNode("ArgumentList")
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:989
		{
			yyVAL.node = yyDollar[1].node
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:993
		{
			yyVAL.node = yyDollar[3].node
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:994
		{
			yyVAL.node = yyDollar[2].node
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:995
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:999
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1000
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1001
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1002
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1003
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1004
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1005
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1006
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1007
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1008
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token)
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1010
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token) /* TODO: mark as Heredoc*/
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1012
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[1].token, nil, yyDollar[2].token)
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1013
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[1].token, yyDollar[2].list, yyDollar[3].token)
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1014
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[1].token, yyDollar[2].list, yyDollar[3].token)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1015
		{
			yyVAL.node = yyDollar[1].node
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1016
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1020
		{
			yyVAL.node = node.NewSimpleNode("Const").Append(yyDollar[1].node)
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1021
		{
			yyVAL.node = node.NewSimpleNode("Const").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1023
		{
			yyVAL.node = node.NewSimpleNode("Const").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1027
		{
			yyVAL.node = yyDollar[1].node
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1028
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:1032
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1033
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1037
		{
			yyVAL.node = yyDollar[1].node
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1041
		{
			yyVAL.node = yyDollar[1].node
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1042
		{
			yyVAL.node = yyDollar[2].node
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1043
		{
			yyVAL.node = yyDollar[1].node
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1047
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1048
		{
			yyVAL.node = yyDollar[2].node
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1049
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1053
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1054
		{
			yyVAL.node = node.NewSimpleNode("Dim").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1055
		{
			yyVAL.node = node.NewSimpleNode("Dim").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1056
		{
			yyVAL.node = node.NewSimpleNode("Dim").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1058
		{
			yyVAL.node = node.NewSimpleNode("MethodCall").Append(yyDollar[1].node).Append(yyDollar[3].node).Append(yyDollar[4].node)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1059
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1063
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1064
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1065
		{
			yyVAL.node = node.NewSimpleNode("Property").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1069
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("name", yyDollar[1].token.String())
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1070
		{
			yyVAL.node = node.NewSimpleNode("Variable").Append(yyDollar[3].node)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1071
		{
			yyVAL.node = node.NewSimpleNode("Variable").Append(yyDollar[2].node)
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1076
		{
			yyVAL.node = node.NewSimpleNode("StaticProp").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1078
		{
			yyVAL.node = node.NewSimpleNode("StaticProp").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1082
		{
			yyVAL.node = yyDollar[1].node
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1083
		{
			yyVAL.node = node.NewSimpleNode("Dim").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1084
		{
			yyVAL.node = node.NewSimpleNode("Dim").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1085
		{
			yyVAL.node = node.NewSimpleNode("Property").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1087
		{
			yyVAL.node = node.NewSimpleNode("StaticProperty").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1089
		{
			yyVAL.node = node.NewSimpleNode("StaticProperty").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1093
		{
			yyVAL.node = yyDollar[1].node
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1094
		{
			yyVAL.node = yyDollar[2].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1095
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1099
		{
			yyVAL.node = node.NewSimpleNode("PropertyName").Attribute("value", yyDollar[1].token.String())
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1100
		{
			yyVAL.node = yyDollar[2].node
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1101
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1105
		{ /* TODO: allow single trailing comma */
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser/parser.y:1109
		{
			yyVAL.node = node.NewSimpleNode("")
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1110
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1115
		{
			yyVAL.node = yyDollar[1].node.Append(yyDollar[3].node)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1116
		{
			yyVAL.node = node.NewSimpleNode("ArrayPairList").Append(yyDollar[1].node)
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1120
		{
			yyVAL.node = node.NewSimpleNode("ArrayElement").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1121
		{
			yyVAL.node = node.NewSimpleNode("ArrayElement").Append(yyDollar[1].node)
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1122
		{
			yyVAL.node = node.NewSimpleNode("ArrayElement").Append(yyDollar[1].node).Append(node.NewSimpleNode("Ref").Append(yyDollar[4].node))
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1123
		{
			yyVAL.node = node.NewSimpleNode("ArrayElement").Append(node.NewSimpleNode("Ref").Append(yyDollar[2].node))
		}
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:1125
		{
			yyVAL.node = node.NewSimpleNode("ArrayElement").
				Append(yyDollar[1].node).
				Append(node.NewSimpleNode("ArrayList").Append(yyDollar[5].node))
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1131
		{
			yyVAL.node = node.NewSimpleNode("ArrayElement").
				Append(node.NewSimpleNode("ArrayList").Append(yyDollar[3].node))
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1138
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1139
		{
			yyVAL.list = append(yyDollar[1].list, scalar.NewEncapsedStringPart(yyDollar[2].token))
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1140
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1141
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token), yyDollar[2].node}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1145
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("value", yyDollar[1].token.String())
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1146
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("value", yyDollar[1].token.String()).Append(node.NewSimpleNode("offset").Append(yyDollar[3].node))
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1147
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("value", yyDollar[1].token.String()).Append(node.NewSimpleNode("property").Attribute("value", yyDollar[3].token.String()))
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1148
		{
			yyVAL.node = node.NewSimpleNode("Variable").Append(node.NewSimpleNode("expr").Append(yyDollar[2].node))
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1149
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("value", yyDollar[2].token.String())
		}
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser/parser.y:1151
		{
			yyVAL.node = node.NewSimpleNode("Variable").Attribute("value", yyDollar[2].token.String()).Append(node.NewSimpleNode("offset").Append(yyDollar[4].node))
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1152
		{
			yyVAL.node = yyDollar[2].node
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1155
		{
			yyVAL.node = node.NewSimpleNode("OffsetString").Attribute("value", yyDollar[1].token.String())
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1156
		{
			yyVAL.node = node.NewSimpleNode("OffsetNumString").Attribute("value", yyDollar[1].token.String())
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1157
		{
			yyVAL.node = node.NewSimpleNode("OffsetNegateNumString").Attribute("value", yyDollar[2].token.String())
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1158
		{
			yyVAL.node = node.NewSimpleNode("OffsetVariable").Attribute("value", yyDollar[1].token.String())
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser/parser.y:1162
		{
			yyVAL.node = yyDollar[3].node
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1163
		{
			yyVAL.node = node.NewSimpleNode("Empty").Append(yyDollar[3].node)
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1164
		{
			yyVAL.node = node.NewSimpleNode("Include").Append(yyDollar[2].node)
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1165
		{
			yyVAL.node = node.NewSimpleNode("IncludeOnce").Append(yyDollar[2].node)
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser/parser.y:1166
		{
			yyVAL.node = node.NewSimpleNode("Eval").Append(yyDollar[3].node)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1167
		{
			yyVAL.node = node.NewSimpleNode("Require").Append(yyDollar[2].node)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser/parser.y:1168
		{
			yyVAL.node = node.NewSimpleNode("RequireOnce").Append(yyDollar[2].node)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1172
		{
			yyVAL.node = yyDollar[1].node
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser/parser.y:1173
		{
			yyVAL.node = node.NewSimpleNode("AndIsset").Append(yyDollar[1].node).Append(yyDollar[3].node)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser/parser.y:1177
		{
			yyVAL.node = node.NewSimpleNode("Isset").Append(yyDollar[1].node)
		}
	}
	goto yystack /* stack new state and value */
}
