//line parser.y:2
package main

import __yyfmt__ "fmt"

//line parser.y:2
import (
	"bytes"
	"fmt"
	"io"
	"os"
)

type node struct {
	name       string
	children   []node
	attributes map[string]string
}

func (n node) String() string {
	buf := new(bytes.Buffer)
	n.print(buf, " ")
	return buf.String()
}

func (n node) print(out io.Writer, indent string) {
	if len(n.attributes) > 0 {
		fmt.Fprintf(out, "\n%v%v %s", indent, n.name, n.attributes)
	} else {
		fmt.Fprintf(out, "\n%v%v", indent, n.name)
	}
	for _, nn := range n.children {
		nn.print(out, indent+"  ")
	}
}

func Node(name string) node {
	return node{name: name, attributes: make(map[string]string)}
}

func (n node) append(nn ...node) node {
	n.children = append(n.children, nn...)
	return n
}

func (n node) attribute(key string, value string) node {
	n.attributes[key] = value
	return n
}

//line parser.y:50
type yySymType struct {
	yys   int
	node  node
	token string
	value string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EVAL = 57348
const T_REQUIRE = 57349
const T_REQUIRE_ONCE = 57350
const T_LOGICAL_OR = 57351
const T_LOGICAL_XOR = 57352
const T_LOGICAL_AND = 57353
const T_PRINT = 57354
const T_YIELD = 57355
const T_DOUBLE_ARROW = 57356
const T_YIELD_FROM = 57357
const T_PLUS_EQUAL = 57358
const T_MINUS_EQUAL = 57359
const T_MUL_EQUAL = 57360
const T_DIV_EQUAL = 57361
const T_CONCAT_EQUAL = 57362
const T_MOD_EQUAL = 57363
const T_AND_EQUAL = 57364
const T_OR_EQUAL = 57365
const T_XOR_EQUAL = 57366
const T_SL_EQUAL = 57367
const T_SR_EQUAL = 57368
const T_POW_EQUAL = 57369
const T_COALESCE = 57370
const T_BOOLEAN_OR = 57371
const T_BOOLEAN_AND = 57372
const T_IS_EQUAL = 57373
const T_IS_NOT_EQUAL = 57374
const T_IS_IDENTICAL = 57375
const T_IS_NOT_IDENTICAL = 57376
const T_SPACESHIP = 57377
const T_IS_SMALLER_OR_EQUAL = 57378
const T_IS_GREATER_OR_EQUAL = 57379
const T_SL = 57380
const T_SR = 57381
const T_INSTANCEOF = 57382
const T_INC = 57383
const T_DEC = 57384
const T_INT_CAST = 57385
const T_DOUBLE_CAST = 57386
const T_STRING_CAST = 57387
const T_ARRAY_CAST = 57388
const T_OBJECT_CAST = 57389
const T_BOOL_CAST = 57390
const T_UNSET_CAST = 57391
const T_POW = 57392
const T_NEW = 57393
const T_CLONE = 57394
const T_NOELSE = 57395
const T_ELSEIF = 57396
const T_ELSE = 57397
const T_ENDIF = 57398
const T_STATIC = 57399
const T_ABSTRACT = 57400
const T_FINAL = 57401
const T_PRIVATE = 57402
const T_PROTECTED = 57403
const T_PUBLIC = 57404
const T_EXIT = 57405
const T_IF = 57406
const T_LNUMBER = 57407
const T_DNUMBER = 57408
const T_STRING = 57409
const T_STRING_VARNAME = 57410
const T_VARIABLE = 57411
const T_NUM_STRING = 57412
const T_INLINE_HTML = 57413
const T_CHARACTER = 57414
const T_BAD_CHARACTER = 57415
const T_ENCAPSED_AND_WHITESPACE = 57416
const T_CONSTANT_ENCAPSED_STRING = 57417
const T_ECHO = 57418
const T_DO = 57419
const T_WHILE = 57420
const T_ENDWHILE = 57421
const T_FOR = 57422
const T_ENDFOR = 57423
const T_FOREACH = 57424
const T_ENDFOREACH = 57425
const T_DECLARE = 57426
const T_ENDDECLARE = 57427
const T_AS = 57428
const T_SWITCH = 57429
const T_ENDSWITCH = 57430
const T_CASE = 57431
const T_DEFAULT = 57432
const T_BREAK = 57433
const T_CONTINUE = 57434
const T_GOTO = 57435
const T_FUNCTION = 57436
const T_CONST = 57437
const T_RETURN = 57438
const T_TRY = 57439
const T_CATCH = 57440
const T_FINALLY = 57441
const T_THROW = 57442
const T_USE = 57443
const T_INSTEADOF = 57444
const T_GLOBAL = 57445
const T_VAR = 57446
const T_UNSET = 57447
const T_ISSET = 57448
const T_EMPTY = 57449
const T_HALT_COMPILER = 57450
const T_CLASS = 57451
const T_TRAIT = 57452
const T_INTERFACE = 57453
const T_EXTENDS = 57454
const T_IMPLEMENTS = 57455
const T_OBJECT_OPERATOR = 57456
const T_LIST = 57457
const T_ARRAY = 57458
const T_CALLABLE = 57459
const T_CLASS_C = 57460
const T_TRAIT_C = 57461
const T_METHOD_C = 57462
const T_FUNC_C = 57463
const T_LINE = 57464
const T_FILE = 57465
const T_COMMENT = 57466
const T_DOC_COMMENT = 57467
const T_OPEN_TAG = 57468
const T_OPEN_TAG_WITH_ECHO = 57469
const T_CLOSE_TAG = 57470
const T_WHITESPACE = 57471
const T_START_HEREDOC = 57472
const T_END_HEREDOC = 57473
const T_DOLLAR_OPEN_CURLY_BRACES = 57474
const T_CURLY_OPEN = 57475
const T_PAAMAYIM_NEKUDOTAYIM = 57476
const T_NAMESPACE = 57477
const T_NS_C = 57478
const T_DIR = 57479
const T_NS_SEPARATOR = 57480
const T_ELLIPSIS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"','",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_PRINT",
	"T_YIELD",
	"T_DOUBLE_ARROW",
	"T_YIELD_FROM",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"'?'",
	"':'",
	"T_COALESCE",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"'&'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_SPACESHIP",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'+'",
	"'-'",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"T_INSTANCEOF",
	"'~'",
	"T_INC",
	"T_DEC",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"'@'",
	"T_POW",
	"'['",
	"T_NEW",
	"T_CLONE",
	"T_NOELSE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"'('",
	"')'",
	"';'",
	"'{'",
	"'}'",
	"']'",
	"'\"'",
	"'$'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:1083
const src = `<?php
interface foo extends A, B
{
    private static function bar($a = null);
}
`

func main() {
	yyDebug = 0
	yyErrorVerbose = true
	l := newLexer(bytes.NewBufferString(src), os.Stdout, "file.name")
	yyParse(l)
}

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	133, 399,
	153, 399,
	-2, 405,
	-1, 80,
	133, 401,
	153, 401,
	-2, 376,
	-1, 96,
	153, 397,
	-2, 393,
	-1, 202,
	133, 399,
	153, 399,
	-2, 305,
	-1, 208,
	133, 399,
	153, 399,
	-2, 307,
	-1, 308,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 329,
	-1, 309,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 330,
	-1, 310,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 331,
	-1, 311,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 332,
	-1, 312,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 333,
	-1, 313,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 334,
	-1, 314,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 335,
	-1, 315,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 336,
	-1, 316,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 337,
	-1, 322,
	133, 399,
	153, 399,
	-2, 210,
	-1, 363,
	133, 400,
	153, 400,
	-2, 338,
	-1, 463,
	133, 399,
	153, 399,
	-2, 193,
	-1, 497,
	160, 269,
	-2, 274,
	-1, 552,
	133, 399,
	153, 399,
	-2, 181,
	-1, 578,
	88, 248,
	-2, 254,
	-1, 599,
	133, 399,
	153, 399,
	-2, 192,
	-1, 619,
	133, 399,
	153, 399,
	-2, 182,
	-1, 667,
	133, 403,
	153, 403,
	-2, 184,
	-1, 728,
	105, 76,
	-2, 78,
	-1, 745,
	160, 269,
	-2, 274,
}

const yyPrivate = 57344

const yyLast = 6368

var yyAct = [...]int{

	26, 116, 671, 681, 562, 580, 720, 502, 371, 680,
	662, 696, 633, 115, 566, 172, 551, 564, 277, 490,
	123, 123, 123, 272, 535, 135, 4, 602, 567, 534,
	321, 325, 80, 169, 273, 96, 247, 5, 274, 245,
	118, 6, 499, 612, 134, 79, 131, 128, 114, 94,
	201, 667, 94, 209, 210, 211, 212, 213, 236, 215,
	216, 596, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 77, 228, 229, 230, 460, 522, 2, 729,
	78, 589, 692, 206, 206, 689, 207, 207, 687, 584,
	585, 586, 583, 582, 581, 129, 204, 204, 357, 249,
	94, 252, 775, 776, 106, 256, 257, 465, 650, 523,
	767, 657, 658, 547, 657, 658, 715, 100, 275, 709,
	670, 279, 280, 242, 677, 269, 465, 95, 104, 110,
	95, 203, 203, 577, 465, 501, 579, 498, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 315, 316, 317, 319, 699, 323, 243, 656,
	327, 521, 465, 333, 358, 103, 639, 237, 95, 332,
	105, 553, 451, 604, 258, 341, 343, 344, 345, 346,
	347, 348, 349, 350, 351, 352, 353, 354, 206, 42,
	355, 207, 538, 168, 337, 265, 362, 770, 697, 290,
	532, 204, 755, 555, 749, 364, 287, 748, 365, 253,
	124, 255, 285, 265, 568, 735, 262, 705, 700, 268,
	106, 693, 94, 684, 685, 367, 445, 654, 99, 454,
	238, 239, 643, 458, 546, 249, 203, 768, 476, 616,
	202, 208, 615, 613, 457, 611, 494, 481, 469, 466,
	339, 329, 584, 585, 586, 583, 582, 581, 714, 283,
	282, 618, 206, 359, 281, 207, 676, 269, 554, 97,
	106, 259, 4, 206, 459, 204, 207, 756, 704, 486,
	703, 135, 448, 5, 450, 694, 204, 6, 119, 450,
	448, 101, 688, 205, 368, 446, 577, 626, 601, 579,
	95, 549, 525, 254, 473, 745, 669, 620, 600, 489,
	203, 497, 584, 585, 586, 583, 582, 581, 480, 570,
	571, 203, 464, 484, 485, 487, 467, 504, 698, 505,
	338, 336, 506, 507, 244, 752, 217, 214, 119, 631,
	199, 101, 106, 200, 167, 675, 106, 470, 129, 509,
	166, 289, 139, 141, 140, 322, 577, 513, 286, 579,
	165, 503, 106, 267, 284, 264, 500, 121, 120, 112,
	113, 472, 163, 475, 164, 137, 138, 142, 144, 143,
	156, 157, 154, 155, 158, 159, 160, 161, 162, 152,
	153, 146, 147, 145, 148, 150, 151, 493, 117, 587,
	584, 585, 586, 583, 582, 581, 617, 102, 267, 267,
	149, 570, 571, 111, 119, 252, 267, 101, 106, 103,
	106, 252, 267, 368, 446, 361, 360, 232, 231, 456,
	119, 452, 335, 101, 75, 76, 237, 750, 109, 237,
	463, 451, 624, 625, 577, 751, 237, 579, 597, 106,
	276, 233, 249, 527, 634, 249, 235, 237, 636, 635,
	533, 478, 241, 701, 657, 658, 237, 711, 471, 132,
	106, 542, 279, 544, 266, 326, 112, 113, 269, 548,
	536, 4, 660, 657, 658, 174, 560, 573, 526, 474,
	543, 263, 5, 540, 530, 453, 6, 519, 449, 238,
	239, 447, 238, 239, 739, 477, 645, 557, 234, 238,
	239, 465, 550, 598, 206, 206, 559, 207, 207, 331,
	238, 239, 593, 569, 330, 178, 177, 204, 204, 238,
	239, 572, 517, 609, 588, 176, 603, 170, 181, 183,
	182, 607, 536, 149, 605, 173, 249, 261, 629, 240,
	622, 206, 179, 180, 207, 672, 44, 738, 608, 642,
	340, 171, 203, 203, 204, 742, 716, 678, 515, 495,
	518, 516, 288, 98, 638, 637, 206, 589, 648, 207,
	124, 614, 475, 606, 475, 621, 644, 630, 537, 204,
	106, 249, 94, 175, 569, 122, 627, 491, 99, 203,
	108, 482, 279, 503, 641, 461, 1, 334, 603, 8,
	536, 249, 647, 7, 107, 640, 125, 126, 652, 260,
	655, 651, 649, 356, 203, 665, 47, 148, 150, 151,
	646, 663, 48, 93, 686, 673, 514, 71, 774, 97,
	475, 206, 682, 149, 207, 475, 475, 659, 695, 661,
	666, 723, 690, 569, 204, 724, 702, 722, 119, 691,
	721, 101, 708, 205, 719, 683, 576, 679, 632, 713,
	95, 578, 575, 574, 623, 706, 717, 710, 561, 726,
	712, 322, 552, 556, 324, 248, 246, 320, 734, 203,
	133, 130, 127, 545, 730, 707, 278, 733, 569, 539,
	14, 741, 41, 13, 737, 40, 46, 744, 731, 43,
	563, 725, 475, 726, 475, 743, 747, 663, 599, 565,
	36, 270, 3, 370, 753, 754, 674, 628, 378, 379,
	380, 381, 382, 759, 383, 384, 385, 421, 422, 0,
	760, 0, 0, 619, 0, 725, 765, 764, 761, 0,
	763, 0, 0, 0, 0, 0, 475, 0, 769, 771,
	0, 772, 0, 0, 0, 757, 0, 0, 777, 0,
	0, 569, 0, 0, 0, 0, 503, 0, 0, 0,
	386, 584, 585, 586, 583, 582, 581, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 0, 391, 392, 393,
	372, 373, 374, 375, 376, 377, 389, 390, 552, 0,
	369, 0, 94, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	424, 425, 426, 427, 428, 416, 417, 418, 419, 420,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 0, 436, 434, 435, 431, 432, 0, 423, 429,
	430, 437, 438, 440, 439, 441, 442, 0, 0, 0,
	0, 0, 58, 59, 60, 61, 62, 0, 433, 444,
	443, 72, 73, 0, 74, 0, 0, 0, 0, 0,
	95, 142, 144, 143, 156, 157, 154, 155, 158, 159,
	160, 161, 162, 152, 153, 146, 147, 145, 148, 150,
	151, 0, 0, 0, 0, 0, 0, 52, 53, 0,
	0, 0, 0, 54, 149, 55, 50, 51, 63, 64,
	65, 66, 67, 68, 69, 70, 0, 98, 0, 49,
	0, 0, 0, 0, 23, 75, 76, 0, 0, 0,
	0, 45, 81, 82, 34, 0, 94, 0, 25, 0,
	0, 0, 99, 24, 16, 15, 0, 17, 0, 28,
	0, 29, 0, 0, 18, 0, 0, 0, 19, 20,
	33, 35, 0, 21, 31, 0, 0, 32, 11, 0,
	22, 0, 27, 0, 57, 9, 37, 38, 39, 0,
	0, 0, 0, 97, 0, 90, 86, 87, 88, 83,
	84, 0, 0, 0, 0, 0, 0, 91, 0, 0,
	0, 0, 10, 89, 85, 101, 0, 56, 140, 30,
	12, 531, 0, 92, 95, 58, 59, 60, 61, 62,
	0, 0, 0, 0, 72, 73, 163, 74, 164, 137,
	138, 142, 144, 143, 156, 157, 154, 155, 158, 159,
	160, 161, 162, 152, 153, 146, 147, 145, 148, 150,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 53, 0, 0, 149, 0, 54, 0, 55, 50,
	51, 63, 64, 65, 66, 67, 68, 69, 70, 0,
	98, 0, 49, 0, 0, 0, 0, 23, 75, 76,
	0, 0, 0, 0, 45, 81, 82, 34, 0, 94,
	0, 25, 0, 0, 0, 99, 24, 16, 15, 0,
	17, 0, 28, 0, 29, 0, 0, 18, 0, 0,
	0, 19, 20, 33, 35, 0, 21, 31, 0, 0,
	32, 11, 0, 22, 0, 27, 0, 57, 9, 37,
	38, 39, 0, 0, 0, 0, 97, 0, 90, 86,
	87, 88, 83, 84, 0, 0, 0, 0, 0, 0,
	91, 0, 0, 0, 0, 10, 89, 85, 101, 0,
	56, 0, 30, 12, 468, 366, 92, 95, 378, 379,
	380, 381, 382, 0, 383, 384, 385, 421, 422, 0,
	163, 0, 164, 137, 138, 142, 144, 143, 156, 157,
	154, 155, 158, 159, 160, 161, 162, 152, 153, 146,
	147, 145, 148, 150, 151, 159, 160, 161, 162, 152,
	153, 146, 147, 145, 148, 150, 151, 0, 149, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 387, 388, 0, 391, 392, 393,
	372, 373, 374, 375, 376, 377, 389, 390, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	424, 425, 426, 427, 428, 416, 417, 418, 419, 420,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 0, 436, 434, 435, 431, 432, 0, 423, 429,
	430, 437, 438, 440, 439, 441, 442, 378, 379, 380,
	381, 382, 0, 383, 384, 385, 421, 422, 727, 444,
	443, 101, 0, 0, 0, 0, 163, 746, 164, 137,
	138, 142, 144, 143, 156, 157, 154, 155, 158, 159,
	160, 161, 162, 152, 153, 146, 147, 145, 148, 150,
	151, 152, 153, 146, 147, 145, 148, 150, 151, 386,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 149, 387, 388, 0, 391, 392, 393, 372,
	373, 374, 375, 376, 377, 389, 390, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 424,
	425, 426, 427, 428, 416, 417, 418, 419, 420, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	0, 436, 434, 435, 431, 432, 0, 423, 429, 430,
	437, 438, 440, 439, 441, 442, 146, 147, 145, 148,
	150, 151, 58, 59, 60, 61, 62, 727, 444, 443,
	101, 72, 73, 0, 74, 149, 718, 0, 164, 137,
	138, 142, 144, 143, 156, 157, 154, 155, 158, 159,
	160, 161, 162, 152, 153, 146, 147, 145, 148, 150,
	151, 0, 0, 0, 0, 0, 0, 52, 53, 0,
	0, 0, 0, 54, 149, 55, 50, 51, 63, 64,
	65, 66, 67, 68, 69, 70, 0, 98, 0, 49,
	0, 0, 0, 0, 23, 75, 76, 0, 0, 0,
	0, 45, 81, 82, 34, 0, 94, 0, 25, 0,
	0, 0, 99, 24, 16, 15, 0, 17, 0, 28,
	0, 29, 0, 0, 18, 0, 0, 0, 19, 20,
	33, 35, 0, 21, 31, 0, 0, 32, 11, 0,
	22, 0, 27, 0, 57, 9, 37, 38, 39, 0,
	0, 0, 0, 97, 0, 90, 86, 87, 88, 83,
	84, 0, 0, 0, 0, 0, 0, 91, 0, 0,
	0, 0, 10, 89, 85, 101, 0, 56, 0, 30,
	12, 0, 0, 92, 95, 58, 59, 60, 61, 62,
	0, 0, 0, 0, 72, 73, 0, 74, 138, 142,
	144, 143, 156, 157, 154, 155, 158, 159, 160, 161,
	162, 152, 153, 146, 147, 145, 148, 150, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 53, 149, 0, 0, 0, 54, 0, 55, 50,
	51, 63, 64, 65, 66, 67, 68, 69, 70, 0,
	98, 0, 49, 0, 0, 0, 0, 23, 75, 76,
	0, 0, 0, 0, 45, 81, 82, 34, 0, 94,
	0, 25, 0, 0, 0, 99, 24, 16, 15, 0,
	17, 0, 28, 0, 29, 0, 0, 18, 0, 0,
	0, 19, 20, 33, 35, 0, 21, 31, 0, 0,
	32, 0, 0, 22, 0, 27, 0, 57, 0, 37,
	0, 0, 0, 0, 0, 0, 97, 0, 90, 86,
	87, 88, 83, 84, 0, 0, 0, 0, 0, 0,
	91, 0, 0, 0, 0, 119, 89, 85, 101, 0,
	56, 0, 30, 12, 778, 0, 92, 95, 58, 59,
	60, 61, 62, 0, 0, 0, 0, 72, 73, 0,
	74, 0, 0, 144, 143, 156, 157, 154, 155, 158,
	159, 160, 161, 162, 152, 153, 146, 147, 145, 148,
	150, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 53, 149, 0, 0, 0, 54,
	0, 55, 50, 51, 63, 64, 65, 66, 67, 68,
	69, 70, 0, 98, 0, 49, 0, 0, 0, 0,
	23, 75, 76, 0, 0, 0, 0, 45, 81, 82,
	34, 0, 94, 0, 25, 0, 0, 0, 99, 24,
	16, 15, 0, 17, 0, 28, 0, 29, 0, 0,
	18, 0, 0, 0, 19, 20, 33, 35, 0, 21,
	31, 0, 0, 32, 0, 0, 22, 0, 27, 0,
	57, 0, 37, 0, 0, 0, 0, 0, 0, 97,
	0, 90, 86, 87, 88, 83, 84, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 119, 89,
	85, 101, 0, 56, 0, 30, 12, 773, 0, 92,
	95, 58, 59, 60, 61, 62, 0, 0, 0, 0,
	72, 73, 0, 74, 143, 156, 157, 154, 155, 158,
	159, 160, 161, 162, 152, 153, 146, 147, 145, 148,
	150, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 52, 53, 0, 0,
	0, 0, 54, 0, 55, 50, 51, 63, 64, 65,
	66, 67, 68, 69, 70, 0, 98, 0, 49, 0,
	0, 0, 0, 23, 75, 76, 0, 0, 0, 0,
	45, 81, 82, 34, 0, 94, 0, 25, 0, 0,
	0, 99, 24, 16, 15, 0, 17, 766, 28, 0,
	29, 0, 0, 18, 0, 0, 0, 19, 20, 33,
	35, 0, 21, 31, 0, 0, 32, 0, 0, 22,
	0, 27, 0, 57, 0, 37, 0, 0, 0, 0,
	0, 0, 97, 0, 90, 86, 87, 88, 83, 84,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	0, 119, 89, 85, 101, 0, 56, 0, 30, 12,
	0, 0, 92, 95, 58, 59, 60, 61, 62, 0,
	0, 0, 0, 72, 73, 0, 74, 156, 157, 154,
	155, 158, 159, 160, 161, 162, 152, 153, 146, 147,
	145, 148, 150, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 52,
	53, 0, 0, 0, 0, 54, 0, 55, 50, 51,
	63, 64, 65, 66, 67, 68, 69, 70, 0, 98,
	0, 49, 0, 0, 0, 0, 23, 75, 76, 0,
	0, 0, 0, 45, 81, 82, 34, 0, 94, 0,
	25, 0, 0, 0, 99, 24, 16, 15, 0, 17,
	0, 28, 0, 29, 0, 0, 18, 0, 0, 0,
	19, 20, 33, 35, 0, 21, 31, 0, 0, 32,
	0, 0, 22, 0, 27, 0, 57, 0, 37, 0,
	0, 0, 0, 0, 0, 97, 0, 90, 86, 87,
	88, 83, 84, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 0, 119, 89, 85, 101, 0, 56,
	0, 30, 12, 758, 0, 92, 95, 58, 59, 60,
	61, 62, 0, 0, 0, 0, 72, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 188, 0, 0, 0,
	0, 0, 52, 53, 0, 0, 0, 0, 54, 0,
	55, 50, 51, 63, 64, 65, 66, 67, 68, 69,
	70, 0, 98, 0, 49, 197, 198, 0, 0, 23,
	75, 76, 0, 0, 0, 0, 45, 81, 82, 34,
	0, 94, 0, 25, 0, 0, 0, 99, 24, 16,
	15, 0, 17, 0, 28, 0, 29, 0, 0, 18,
	0, 0, 0, 19, 20, 33, 35, 0, 21, 31,
	0, 0, 32, 0, 0, 22, 0, 27, 0, 57,
	0, 37, 0, 0, 0, 0, 0, 0, 97, 0,
	90, 86, 87, 88, 83, 84, 0, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 0, 119, 89, 85,
	101, 0, 56, 0, 30, 12, 740, 0, 92, 95,
	58, 59, 60, 61, 62, 0, 0, 0, 0, 72,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 53, 0, 0, 0,
	0, 54, 0, 55, 50, 51, 63, 64, 65, 66,
	67, 68, 69, 70, 0, 98, 0, 49, 0, 0,
	0, 0, 23, 75, 76, 0, 0, 0, 0, 45,
	81, 82, 34, 0, 94, 0, 25, 0, 0, 0,
	99, 24, 16, 15, 0, 17, 0, 28, 736, 29,
	0, 0, 18, 0, 0, 0, 19, 20, 33, 35,
	0, 21, 31, 0, 0, 32, 0, 0, 22, 0,
	27, 0, 57, 0, 37, 0, 0, 0, 0, 0,
	0, 97, 0, 90, 86, 87, 88, 83, 84, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 0,
	119, 89, 85, 101, 0, 56, 0, 30, 12, 0,
	0, 92, 95, 58, 59, 60, 61, 62, 0, 0,
	0, 0, 72, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 53,
	0, 0, 0, 0, 54, 0, 55, 50, 51, 63,
	64, 65, 66, 67, 68, 69, 70, 0, 98, 0,
	49, 0, 0, 0, 0, 23, 75, 76, 0, 0,
	0, 0, 45, 81, 82, 34, 0, 94, 0, 25,
	0, 0, 0, 99, 24, 16, 15, 0, 17, 0,
	28, 0, 29, 668, 0, 18, 0, 0, 0, 19,
	20, 33, 35, 0, 21, 31, 0, 0, 32, 0,
	0, 22, 0, 27, 0, 57, 0, 37, 0, 0,
	0, 0, 0, 0, 97, 0, 90, 86, 87, 88,
	83, 84, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 0, 119, 89, 85, 101, 0, 56, 0,
	30, 12, 0, 0, 92, 95, 58, 59, 60, 61,
	62, 0, 0, 0, 0, 72, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 53, 0, 0, 0, 0, 54, 0, 55,
	50, 51, 63, 64, 65, 66, 67, 68, 69, 70,
	0, 98, 0, 49, 0, 0, 0, 0, 23, 75,
	76, 0, 0, 0, 0, 45, 81, 82, 34, 0,
	94, 0, 25, 0, 0, 0, 99, 24, 16, 15,
	653, 17, 0, 28, 0, 29, 0, 0, 18, 0,
	0, 0, 19, 20, 33, 35, 0, 21, 31, 0,
	0, 32, 0, 0, 22, 0, 27, 0, 57, 0,
	37, 0, 0, 0, 0, 0, 0, 97, 0, 90,
	86, 87, 88, 83, 84, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 0, 0, 119, 89, 85, 101,
	0, 56, 0, 30, 12, 0, 0, 92, 95, 58,
	59, 60, 61, 62, 0, 0, 0, 0, 72, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 53, 0, 0, 0, 0,
	54, 0, 55, 50, 51, 63, 64, 65, 66, 67,
	68, 69, 70, 0, 98, 0, 49, 0, 0, 0,
	592, 23, 75, 76, 0, 0, 0, 0, 45, 81,
	82, 34, 0, 94, 0, 25, 0, 0, 0, 99,
	24, 16, 15, 0, 17, 0, 28, 0, 29, 0,
	0, 18, 0, 0, 0, 19, 20, 33, 35, 0,
	21, 31, 0, 0, 32, 0, 0, 22, 0, 27,
	0, 57, 0, 37, 0, 0, 0, 0, 0, 0,
	97, 0, 90, 86, 87, 88, 83, 84, 0, 0,
	0, 0, 0, 0, 91, 0, 0, 0, 0, 119,
	89, 85, 101, 0, 56, 0, 30, 12, 0, 0,
	92, 95, 58, 59, 60, 61, 62, 0, 0, 0,
	0, 72, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 53, 0,
	0, 0, 0, 54, 0, 55, 50, 51, 63, 64,
	65, 66, 67, 68, 69, 70, 0, 98, 0, 49,
	0, 0, 0, 0, 23, 75, 76, 0, 0, 0,
	0, 45, 81, 82, 34, 0, 94, 0, 25, 0,
	0, 0, 99, 24, 16, 15, 0, 17, 0, 28,
	0, 29, 0, 0, 18, 0, 0, 0, 19, 20,
	33, 35, 0, 21, 31, 0, 0, 32, 0, 0,
	22, 0, 27, 0, 57, 0, 37, 0, 0, 0,
	0, 0, 0, 97, 0, 90, 86, 87, 88, 83,
	84, 0, 0, 0, 0, 0, 0, 91, 0, 0,
	0, 0, 119, 89, 85, 101, 0, 56, 0, 30,
	12, 496, 0, 92, 95, 58, 59, 60, 61, 62,
	0, 0, 0, 0, 72, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 53, 0, 0, 0, 0, 54, 0, 55, 50,
	51, 63, 64, 65, 66, 67, 68, 69, 70, 0,
	98, 0, 49, 0, 0, 0, 0, 23, 75, 76,
	0, 0, 0, 0, 45, 81, 82, 34, 0, 94,
	0, 25, 0, 0, 0, 99, 24, 16, 15, 0,
	17, 0, 28, 0, 29, 0, 0, 18, 0, 0,
	0, 19, 20, 33, 35, 0, 21, 31, 0, 0,
	32, 0, 0, 22, 0, 27, 0, 57, 0, 37,
	0, 0, 0, 0, 0, 0, 97, 0, 90, 86,
	87, 88, 83, 84, 0, 0, 0, 0, 0, 0,
	91, 0, 0, 0, 0, 119, 89, 85, 101, 0,
	56, 0, 30, 12, 271, 0, 92, 95, 58, 59,
	60, 61, 62, 0, 0, 0, 0, 72, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 53, 0, 0, 0, 0, 54,
	0, 55, 50, 51, 63, 64, 65, 66, 67, 68,
	69, 70, 0, 98, 0, 49, 0, 0, 0, 0,
	23, 75, 76, 0, 0, 0, 0, 45, 81, 82,
	34, 0, 94, 0, 25, 0, 0, 0, 99, 24,
	16, 15, 0, 17, 0, 28, 0, 29, 0, 0,
	18, 0, 0, 0, 19, 20, 33, 35, 0, 21,
	31, 0, 0, 32, 0, 0, 22, 0, 27, 0,
	57, 0, 37, 0, 0, 0, 0, 0, 0, 97,
	0, 90, 86, 87, 88, 83, 84, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 119, 89,
	85, 101, 0, 56, 0, 30, 12, 0, 0, 92,
	95, 58, 59, 60, 61, 62, 0, 0, 0, 0,
	72, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 53, 0, 0,
	0, 0, 54, 0, 55, 50, 51, 63, 64, 65,
	66, 67, 68, 69, 70, 0, 98, 0, 49, 0,
	0, 0, 0, 23, 0, 0, 0, 0, 0, 0,
	45, 81, 82, 34, 0, 94, 0, 25, 0, 0,
	0, 99, 24, 16, 15, 0, 17, 0, 28, 0,
	29, 0, 0, 18, 0, 0, 0, 19, 20, 33,
	0, 0, 21, 31, 0, 0, 32, 0, 0, 22,
	0, 27, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 90, 86, 87, 88, 83, 84,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	0, 119, 89, 85, 101, 0, 56, 0, 30, 12,
	0, 0, 92, 95, 58, 59, 60, 61, 62, 0,
	0, 0, 0, 72, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	53, 0, 0, 0, 0, 54, 0, 55, 50, 51,
	63, 64, 65, 66, 67, 68, 69, 70, 0, 98,
	0, 49, 0, 0, 0, 0, 23, 0, 0, 0,
	0, 0, 0, 45, 81, 82, 34, 0, 94, 0,
	25, 0, 0, 0, 99, 24, 16, 15, 0, 17,
	0, 28, 0, 29, 0, 0, 18, 0, 0, 0,
	19, 20, 33, 0, 0, 21, 31, 0, 0, 32,
	0, 0, 22, 0, 27, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 90, 86, 87,
	88, 83, 84, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 0, 119, 89, 85, 101, 0, 56,
	0, 30, 12, 0, 0, 92, 95, 58, 59, 60,
	61, 62, 0, 0, 0, 0, 72, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 53, 0, 0, 0, 0, 54, 0,
	55, 50, 51, 63, 64, 65, 66, 67, 68, 69,
	70, 0, 98, 0, 49, 0, 0, 0, 0, 23,
	0, 0, 0, 0, 0, 0, 45, 81, 82, 34,
	0, 94, 0, 25, 0, 0, 0, 99, 24, 16,
	15, 0, 17, 0, 28, 0, 29, 0, 0, 18,
	0, 0, 0, 19, 20, 33, 0, 0, 21, 31,
	0, 0, 32, 0, 0, 22, 0, 27, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	90, 86, 87, 88, 83, 84, 0, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 0, 119, 89, 85,
	101, 0, 56, 0, 30, 12, 0, 0, 92, 95,
	58, 59, 60, 61, 62, 0, 0, 0, 0, 72,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 53, 0, 0, 0,
	0, 54, 0, 55, 50, 51, 63, 64, 65, 66,
	67, 68, 69, 70, 0, 98, 0, 49, 0, 0,
	0, 0, 23, 0, 0, 0, 0, 0, 0, 45,
	81, 82, 34, 0, 94, 0, 25, 0, 0, 0,
	99, 24, 16, 15, 0, 17, 0, 28, 0, 29,
	0, 0, 18, 0, 0, 0, 19, 20, 33, 0,
	0, 21, 31, 0, 0, 32, 0, 0, 22, 0,
	27, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 90, 86, 87, 88, 83, 84, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 0,
	119, 89, 85, 101, 0, 56, 0, 30, 12, 0,
	0, 92, 95, 58, 59, 60, 61, 62, 0, 0,
	0, 0, 72, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 53,
	0, 0, 0, 0, 54, 0, 55, 50, 51, 63,
	64, 65, 66, 67, 68, 69, 70, 0, 98, 0,
	49, 0, 0, 0, 0, 23, 0, 0, 0, 0,
	0, 0, 45, 81, 82, 34, 0, 94, 0, 25,
	0, 0, 0, 99, 24, 16, 15, 0, 17, 0,
	28, 0, 29, 0, 0, 18, 0, 0, 0, 19,
	20, 33, 0, 0, 21, 31, 0, 0, 32, 0,
	0, 22, 0, 27, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 90, 86, 87, 88,
	83, 84, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 0, 119, 89, 85, 101, 0, 56, 0,
	30, 12, 0, 0, 92, 95, 58, 59, 60, 61,
	62, 0, 0, 0, 0, 72, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 53, 0, 0, 0, 0, 54, 0, 55,
	50, 51, 63, 64, 65, 66, 67, 68, 69, 70,
	0, 98, 0, 49, 0, 0, 0, 0, 23, 0,
	0, 0, 0, 0, 0, 45, 81, 82, 34, 0,
	94, 0, 25, 0, 0, 0, 99, 24, 16, 15,
	0, 17, 0, 28, 0, 29, 0, 0, 18, 0,
	0, 0, 19, 20, 33, 0, 0, 21, 31, 0,
	0, 32, 0, 0, 22, 0, 27, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 90,
	86, 87, 88, 83, 84, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 0, 0, 119, 89, 85, 101,
	0, 56, 0, 30, 12, 141, 140, 92, 95, 378,
	379, 380, 381, 382, 0, 383, 384, 385, 421, 422,
	0, 0, 0, 0, 163, 0, 164, 137, 138, 142,
	144, 143, 156, 157, 154, 155, 158, 159, 160, 161,
	162, 152, 153, 146, 147, 145, 148, 150, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 0, 391, 392,
	393, 372, 373, 374, 375, 376, 377, 389, 390, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 424, 425, 426, 427, 428, 416, 417, 418, 419,
	420, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 0, 436, 434, 435, 431, 432, 0, 423,
	429, 430, 437, 438, 440, 439, 441, 442, 378, 379,
	380, 381, 382, 0, 383, 384, 385, 421, 422, 433,
	444, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 0, 391, 392, 393,
	584, 585, 586, 583, 582, 581, 389, 390, 0, 0,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	424, 425, 426, 427, 428, 416, 417, 418, 419, 420,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 0, 436, 434, 435, 431, 432, 0, 423, 429,
	430, 437, 438, 440, 439, 441, 442, 0, 0, 0,
	0, 0, 58, 59, 60, 61, 62, 0, 433, 444,
	443, 72, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 53, 0,
	0, 0, 0, 54, 0, 55, 50, 51, 63, 64,
	65, 66, 67, 68, 69, 70, 0, 98, 0, 49,
	0, 139, 141, 140, 124, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 106, 0, 94, 0, 0, 0,
	0, 163, 99, 164, 137, 138, 142, 144, 143, 156,
	157, 154, 155, 158, 159, 160, 161, 162, 152, 153,
	146, 147, 145, 148, 150, 151, 58, 59, 60, 61,
	62, 0, 0, 0, 57, 72, 73, 0, 74, 149,
	0, 0, 251, 97, 0, 90, 86, 87, 88, 83,
	84, 0, 0, 0, 0, 0, 0, 91, 0, 528,
	0, 0, 119, 89, 85, 101, 0, 56, 0, 0,
	0, 52, 53, 92, 95, 0, 0, 54, 0, 55,
	50, 51, 63, 64, 65, 66, 67, 68, 69, 70,
	0, 98, 0, 49, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 106, 0,
	94, 0, 0, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 0, 0, 0, 0, 0,
	58, 59, 60, 61, 62, 0, 0, 0, 57, 72,
	73, 0, 74, 0, 0, 0, 529, 97, 0, 90,
	86, 87, 88, 83, 84, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 0, 0, 119, 89, 85, 101,
	0, 56, 0, 0, 0, 52, 53, 92, 95, 0,
	0, 54, 0, 55, 50, 51, 63, 64, 65, 66,
	67, 68, 69, 70, 0, 98, 0, 49, 0, 139,
	141, 140, 124, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 106, 455, 94, 0, 0, 0, 0, 163,
	99, 164, 137, 138, 142, 144, 143, 156, 157, 154,
	155, 158, 159, 160, 161, 162, 152, 153, 146, 147,
	145, 148, 150, 151, 58, 59, 60, 61, 62, 0,
	0, 0, 57, 72, 73, 0, 74, 149, 0, 0,
	0, 97, 0, 90, 86, 87, 88, 83, 84, 0,
	0, 0, 0, 0, 0, 91, 0, 342, 0, 0,
	119, 89, 85, 101, 0, 56, 0, 0, 0, 52,
	53, 92, 95, 0, 0, 54, 0, 55, 50, 51,
	63, 64, 65, 66, 67, 68, 69, 70, 0, 98,
	0, 49, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 81, 82, 106, 0, 94, 0,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 0, 0, 0, 0, 0, 58, 59,
	60, 61, 62, 0, 0, 0, 57, 72, 73, 0,
	74, 0, 0, 0, 0, 97, 0, 90, 86, 87,
	88, 83, 84, 0, 0, 318, 0, 0, 0, 91,
	0, 0, 0, 0, 119, 89, 85, 101, 0, 56,
	0, 0, 0, 52, 53, 92, 95, 0, 0, 54,
	0, 55, 50, 51, 63, 64, 65, 66, 67, 68,
	69, 70, 0, 98, 0, 49, 0, 139, 141, 140,
	124, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	106, 0, 94, 0, 0, 0, 0, 163, 99, 164,
	137, 138, 142, 144, 143, 156, 157, 154, 155, 158,
	159, 160, 161, 162, 152, 153, 146, 147, 145, 148,
	150, 151, 58, 59, 60, 61, 62, 0, 0, 0,
	57, 72, 73, 0, 74, 149, 0, 0, 0, 97,
	0, 90, 86, 87, 88, 83, 84, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 119, 89,
	85, 101, 0, 56, 0, 0, 0, 52, 53, 92,
	95, 0, 0, 54, 0, 55, 50, 51, 63, 64,
	65, 66, 67, 68, 69, 70, 0, 98, 0, 49,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 106, 0, 94, 0, 0, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 90, 86, 87, 88, 83,
	84, 0, 0, 0, 0, 0, 0, 91, 139, 141,
	140, 0, 119, 89, 85, 101, 0, 56, 0, 0,
	0, 0, 0, 92, 95, 0, 0, 0, 163, 697,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 139, 141, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 163, 0, 164, 137, 138, 142, 144,
	143, 156, 157, 154, 155, 158, 159, 160, 161, 162,
	152, 153, 146, 147, 145, 148, 150, 151, 139, 141,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 163, 0,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 139, 141, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 698,
	0, 0, 0, 163, 0, 164, 137, 138, 142, 144,
	143, 156, 157, 154, 155, 158, 159, 160, 161, 162,
	152, 153, 146, 147, 145, 148, 150, 151, 139, 141,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 328, 0, 0, 0, 163, 0,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 139, 141, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 136,
	0, 0, 0, 163, 0, 164, 137, 138, 142, 144,
	143, 156, 157, 154, 155, 158, 159, 160, 161, 162,
	152, 153, 146, 147, 145, 148, 150, 151, 139, 141,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 610, 0, 0, 0, 0, 163, 0,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 139, 141, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 591, 0,
	0, 0, 0, 163, 0, 164, 137, 138, 142, 144,
	143, 156, 157, 154, 155, 158, 159, 160, 161, 162,
	152, 153, 146, 147, 145, 148, 150, 151, 139, 141,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 590, 0, 0, 0, 0, 163, 0,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 139, 141, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 512, 0,
	0, 0, 0, 163, 0, 164, 137, 138, 142, 144,
	143, 156, 157, 154, 155, 158, 159, 160, 161, 162,
	152, 153, 146, 147, 145, 148, 150, 151, 139, 141,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 511, 0, 0, 0, 0, 163, 0,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 139, 141, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 510, 0,
	0, 0, 0, 163, 0, 164, 137, 138, 142, 144,
	143, 156, 157, 154, 155, 158, 159, 160, 161, 162,
	152, 153, 146, 147, 145, 148, 150, 151, 139, 141,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 508, 0, 0, 0, 0, 163, 0,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 139, 141, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 483, 0,
	0, 0, 0, 163, 0, 164, 137, 138, 142, 144,
	143, 156, 157, 154, 155, 158, 159, 160, 161, 162,
	152, 153, 146, 147, 145, 148, 150, 151, 139, 141,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 479, 0, 0, 0, 0, 163, 488,
	164, 137, 138, 142, 144, 143, 156, 157, 154, 155,
	158, 159, 160, 161, 162, 152, 153, 146, 147, 145,
	148, 150, 151, 0, 139, 141, 140, 0, 492, 462,
	0, 0, 0, 0, 0, 0, 149, 0, 363, 0,
	0, 0, 0, 0, 163, 0, 164, 137, 138, 142,
	144, 143, 156, 157, 154, 155, 158, 159, 160, 161,
	162, 152, 153, 146, 147, 145, 148, 150, 151, 139,
	141, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 163,
	0, 164, 137, 138, 142, 144, 143, 156, 157, 154,
	155, 158, 159, 160, 161, 162, 152, 153, 146, 147,
	145, 148, 150, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149,
}
var yyPact = [...]int{

	-1000, -1000, 1488, -1000, -1000, -1000, -1000, -1000, -1000, 258,
	18, 266, -1000, -1000, -1000, 249, 4422, 219, 218, 5438,
	5438, 5438, -36, 391, 5438, -1000, 5668, 211, 201, 195,
	-1000, 41, 5438, 461, 540, 518, 367, 459, 450, 449,
	489, 475, 2317, -1000, -1000, 191, -1000, -1000, 220, 5438,
	514, 514, 5438, 5438, 5438, 5438, 5438, 188, 5438, 5438,
	187, 5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438,
	5438, -1000, 5438, 5438, 5438, -1000, -1000, -1000, 285, 284,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 368, 379, -1000, -1000, -39, -1000, 185, 4868, -1000,
	274, 394, 153, 394, -56, -1000, -1000, 120, 344, 214,
	327, 394, -1000, -1000, -1000, -1000, 3281, 5438, 363, 272,
	5438, 5438, 113, 6299, -1000, 109, 108, 213, -1000, -1000,
	207, -1000, 565, 200, -1000, 6299, -1000, 5438, 5438, 5438,
	5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438,
	5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438, 5438,
	5438, 5438, 5438, 5324, 5438, 514, 5438, 399, -1000, 5623,
	100, -1000, 448, -1000, 443, -1000, 17, 11, 311, 182,
	4422, 181, 99, 539, 5210, 5438, 5438, 5438, 5438, 5438,
	5438, 5438, 5438, 5438, 5438, 5438, 5438, -1000, -1000, 5438,
	12, -1000, -1000, 283, 282, 5438, -1000, -1000, -1000, 485,
	485, 485, 485, 6118, 5438, 6299, 6299, 5438, 6299, 6299,
	485, 485, 485, 485, 485, 485, 485, 485, 1336, 1190,
	1336, 734, 734, 361, -1000, 358, -1000, 372, 5096, 514,
	89, 388, 5438, -1000, 4868, -88, 606, -1000, -1000, 6254,
	514, 173, 435, 274, 98, 274, -1000, -1000, 1041, -1000,
	97, 196, 321, 394, -1000, 342, 86, 429, 314, -1000,
	-1000, -1000, -1000, -1000, -1000, 6073, 169, 96, 602, 6299,
	6028, -1000, -1000, -1000, -1000, -36, -1000, 391, 5438, -1000,
	5438, 1634, 866, 4574, 1336, 1026, 1797, 2119, 1957, 585,
	585, 585, 485, 485, 485, 485, 1437, 1437, 1202, 1202,
	1202, 1202, 1202, 1344, 1344, 1344, 1344, 6208, 5438, 1476,
	598, -1000, -1000, 6163, 247, -1000, 562, 3118, -1000, -1000,
	162, -25, -1000, -1000, -27, 270, 5438, -1000, 5438, -1000,
	-1000, 1336, 5438, 1336, 1336, 1336, 1336, 1336, 1336, 1336,
	1336, 1336, 1336, 1336, 1336, 5983, -1000, -1000, 5438, -1000,
	-36, -36, 5938, -1000, 5893, 5848, 5438, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 492, 421, 5387, 8, -54, -1000, 5159, 152,
	-1000, 4868, 4982, -1000, 4868, -1000, -1000, 878, -1000, -1000,
	-1000, 48, 313, -1000, 394, 268, 373, -1000, 40, 4259,
	5438, 5438, 5438, 82, -1000, -1000, 6299, -1000, 5438, 1476,
	151, 514, 144, 4096, 399, 5438, -1000, 194, -1000, 334,
	246, -1000, 578, -1000, 5803, 5758, 2955, 2119, 3933, 4931,
	-1000, -1000, -1000, 1336, -103, -1000, -1000, 369, -1000, -1000,
	-1000, -1000, 5438, -1000, -1000, -1000, -1000, 6299, 514, 159,
	148, -1000, 394, 21, 584, -1000, -1000, 394, 373, -1000,
	-1000, -1000, 5713, 94, 6299, -1000, 92, 91, 1476, 88,
	-1000, 256, -1000, 514, 158, 4868, -1000, -1000, -1000, -1000,
	6299, 335, 147, 597, -1000, 521, -1000, -1000, 286, -1000,
	-1000, -1000, 186, -1000, -1000, 376, 355, 270, 715, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13, 270,
	4422, 538, 81, -1000, -1000, -1000, -1000, -1000, 352, -1000,
	4868, -1000, 579, -1000, 394, -55, 373, -1000, 584, 2792,
	76, 5438, 6, -1000, 385, -1000, -1000, 3607, 144, -1000,
	4868, -113, 2629, -1000, 157, -42, 534, 194, 197, -1000,
	-1000, -1000, 115, -1000, 560, 4585, 518, 72, -1000, -1000,
	-1000, -1000, -1000, -1000, 3444, -75, 142, -78, 394, 579,
	-1000, -1000, -81, 70, -1000, 135, -1000, 5438, 177, 3,
	67, 366, -1000, -1000, -1000, 130, 128, -1000, 66, 270,
	-1000, -43, 194, -1000, 389, -1000, -1000, 376, 5438, 107,
	-1000, 559, 4585, -1000, -1000, 1343, 3444, -1000, -1000, -1000,
	-1000, -84, -1000, -1000, 3770, 5578, -1000, -1000, -1000, -1000,
	-1000, 64, 2466, 3607, -1000, -1000, 479, -1000, 2303, -1000,
	-1000, 558, -1000, 6299, -1000, 4585, 5438, 156, -1000, 1204,
	-1000, 56, 53, 326, 350, 192, -1000, 272, -1000, -1000,
	-1000, -1000, -1000, -1000, 3444, -1000, 51, -1000, 127, 270,
	-1000, 2140, 5438, -1000, 6299, 194, -1000, -1000, -1000, -1000,
	270, 4724, 4585, 1977, 3444, -1000, -52, -1000, -1000, 6299,
	87, 578, -1000, -1000, 4585, -1000, 46, -1000, 534, -1000,
	-1000, 1814, -59, -1000, -1000, -1000, -1000, 1651, -1000,
}
var yyPgo = [...]int{

	0, 566, 737, 736, 15, 8, 733, 3, 732, 117,
	35, 78, 23, 731, 1, 730, 38, 34, 729, 2,
	14, 28, 4, 720, 17, 0, 719, 716, 199, 72,
	715, 713, 712, 710, 709, 18, 706, 704, 703, 43,
	605, 702, 47, 701, 46, 700, 44, 697, 30, 16,
	39, 36, 696, 695, 10, 694, 31, 693, 688, 685,
	684, 42, 683, 682, 681, 5, 678, 12, 677, 9,
	676, 7, 675, 674, 6, 670, 667, 665, 661, 648,
	647, 466, 58, 646, 643, 80, 45, 642, 32, 636,
	633, 598, 629, 624, 29, 27, 448, 24, 13, 48,
	623, 619, 617, 616, 19, 11,
}
var yyR1 = [...]int{

	0, 103, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 7, 7, 9, 9,
	10, 10, 10, 11, 11, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 91, 91,
	92, 92, 93, 93, 94, 94, 95, 95, 96, 96,
	97, 97, 98, 98, 99, 99, 14, 14, 13, 13,
	13, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 58, 58, 59, 59, 60,
	60, 55, 55, 56, 57, 57, 30, 30, 31, 31,
	32, 32, 33, 33, 34, 34, 35, 35, 36, 36,
	38, 38, 38, 38, 39, 39, 39, 105, 105, 37,
	37, 49, 49, 49, 49, 50, 51, 51, 52, 52,
	53, 53, 53, 53, 53, 53, 54, 54, 41, 41,
	42, 43, 43, 44, 44, 45, 45, 46, 47, 47,
	48, 104, 104, 16, 16, 15, 15, 1, 1, 100,
	101, 102, 102, 61, 61, 62, 62, 62, 62, 71,
	71, 72, 72, 72, 73, 73, 74, 74, 75, 76,
	76, 76, 76, 77, 77, 78, 79, 79, 63, 63,
	68, 68, 69, 70, 70, 64, 64, 65, 65, 65,
	65, 65, 65, 66, 66, 67, 67, 17, 22, 22,
	23, 23, 24, 24, 18, 18, 4, 4, 2, 2,
	3, 3, 20, 20, 21, 21, 21, 19, 19, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 81, 81,
	81, 81, 82, 82, 82, 82, 82, 82, 82, 83,
	83, 83, 83, 84, 84, 84, 85, 85, 86, 87,
	87, 87, 88, 88, 88, 25, 25, 40, 40, 27,
	28, 28, 28, 90, 90, 90, 29, 29, 29, 89,
	89,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 2, 0, 1, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 3, 4, 1, 1,
	6, 7, 6, 7, 3, 1, 3, 1, 3, 1,
	1, 2, 1, 3, 1, 2, 2, 0, 1, 1,
	1, 3, 1, 1, 5, 7, 9, 5, 3, 3,
	3, 3, 3, 3, 1, 2, 6, 7, 9, 5,
	1, 6, 3, 3, 2, 0, 9, 1, 3, 0,
	4, 3, 1, 3, 1, 4, 5, 6, 1, 3,
	6, 7, 3, 6, 1, 4, 0, 1, 3, 1,
	3, 4, 4, 5, 0, 5, 4, 1, 1, 1,
	4, 1, 2, 4, 3, 1, 0, 1, 3, 1,
	3, 1, 4, 2, 6, 4, 1, 4, 3, 1,
	1, 3, 1, 1, 3, 3, 1, 1, 1, 3,
	1, 0, 1, 6, 5, 1, 2, 1, 1, 5,
	6, 0, 2, 2, 0, 3, 4, 3, 9, 1,
	3, 1, 2, 3, 1, 2, 2, 2, 3, 3,
	3, 4, 3, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 3, 0, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 3, 10, 1, 0,
	1, 3, 4, 6, 0, 1, 0, 1, 0, 1,
	0, 1, 1, 2, 1, 1, 1, 0, 2, 3,
	4, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	4, 3, 4, 2, 2, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 1, 2,
	4, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 3, 3, 1, 1, 2, 2,
	1, 2, 1, 4, 3, 3, 3, 6, 3, 1,
	1, 2, 1, 1, 3, 3, 1, 1, 1, 1,
	3, 1, 4, 3, 1, 1, 1, 0, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 4, 2, 3,
	3,
}
var yyChk = [...]int{

	-1000, -103, -11, -8, -12, -17, -16, -100, -101, 127,
	154, 120, 162, -31, -33, 97, 96, 99, 106, 110,
	111, 115, 122, 76, 95, 90, -25, 124, 101, 103,
	161, 116, 119, 112, 86, 113, -15, 128, 129, 130,
	-30, -32, -28, -26, -1, 83, -27, -89, -87, 71,
	58, 59, 49, 50, 55, 57, 159, 126, 4, 5,
	6, 7, 8, 60, 61, 62, 63, 64, 65, 66,
	67, -80, 13, 14, 16, 77, 78, -29, -85, -86,
	-88, 84, 85, 141, 142, 156, 138, 139, 140, 155,
	137, 149, 165, -84, 88, 166, -10, 135, 69, 94,
	-9, 157, 159, 157, -9, 162, 86, -93, -91, -96,
	-9, 157, 113, 114, -99, -98, -14, 159, -12, 154,
	159, 159, -40, -25, 76, -40, -40, -41, -42, -29,
	-43, -44, 88, -45, -46, -25, 161, 33, 34, 10,
	12, 11, 35, 37, 36, 51, 49, 50, 52, 68,
	53, 54, 47, 48, 40, 41, 38, 39, 42, 43,
	44, 45, 46, 30, 32, 159, 159, 159, 162, -25,
	86, 31, -4, 37, 128, -1, 86, 86, 86, 73,
	74, 73, 75, 74, 17, 18, 19, 20, 29, 21,
	22, 23, 24, 25, 26, 27, 28, 58, 59, 159,
	133, -25, -28, -85, -86, 159, -88, -10, -28, -25,
	-25, -25, -25, -25, 159, -25, -25, 159, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, 153, 153, 93, 150, -81, -82, 88, 151, 152,
	-81, 93, 162, -29, 159, -50, -52, -51, -53, -25,
	37, 134, 157, -9, 160, -9, 161, 162, -11, 161,
	-92, -96, -9, 157, 161, 9, 157, 105, -9, -98,
	-13, 163, -12, -17, -16, -25, 97, -35, -36, -25,
	-25, 161, 161, 161, 161, 9, 161, 9, 17, 161,
	9, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, 31, -25,
	-47, -48, -28, -25, -55, -56, 86, -14, 161, 161,
	86, 86, 162, 162, -102, 131, 159, -12, 159, 161,
	31, -25, 37, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -90, 86, 162, -29,
	153, 153, -25, 160, -25, -25, 15, -7, -29, 86,
	-6, -5, 76, 77, 78, 79, 80, 81, 4, 5,
	6, 7, 8, 10, 11, 12, 56, 70, 71, 82,
	83, 73, 74, 75, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 111, 112, 113, 114,
	115, 13, 14, 134, 106, 107, 108, 109, 110, 135,
	136, 131, 132, 154, 129, 130, 128, 137, 138, 140,
	139, 141, 142, 156, 155, -7, -29, 150, -82, 150,
	-82, 93, 69, 133, -25, 87, -28, 165, -25, -50,
	164, 9, 15, -28, 159, 86, 161, -11, 163, 161,
	161, 157, -9, -99, 157, -9, 162, 86, 157, 160,
	159, 161, 9, 160, -42, -44, -25, -46, 31, -25,
	-104, 9, 105, 160, 9, 17, 163, 159, 162, -61,
	-61, 162, -71, -10, -25, -25, -14, -25, 160, -25,
	160, 160, 160, -25, -83, 86, 89, 50, 88, 86,
	163, 163, 69, 163, 163, 160, -51, -25, 37, 134,
	-50, 163, 162, 157, -94, -97, -98, -91, 162, -34,
	-12, 31, -25, -35, -25, -38, 162, 31, -25, 160,
	-48, -49, -28, 37, 134, 69, -57, -12, 31, -56,
	-25, -58, -22, -23, -24, -18, -20, -21, 30, -10,
	135, 136, -61, 163, -62, -63, -70, 120, -64, 123,
	-65, 81, 80, 79, 76, 77, 78, 163, -61, 9,
	160, 160, 75, -12, 31, 163, 164, 89, -25, -28,
	159, 160, -95, -98, 162, -104, 9, -98, -94, -14,
	160, 161, -39, 161, -39, 161, 161, 160, 15, -28,
	159, -50, -14, -60, 117, 118, 160, 9, -2, 37,
	-21, 163, -66, -67, 88, 114, 113, -71, -65, 163,
	-10, -12, 31, 161, -14, 164, -50, -104, 9, -95,
	163, -97, -104, 98, 161, -35, 163, 108, 109, -39,
	107, -39, -54, -12, 31, -49, -50, 164, 104, 159,
	162, -19, 31, -24, -3, 158, 161, 9, 17, -68,
	-69, -7, -4, -72, 161, 162, -14, 163, 160, 163,
	-98, -104, 163, 161, 160, -25, -105, 31, 161, 163,
	161, 107, -14, 160, 160, 161, -59, -10, -14, 162,
	-20, 88, -67, -25, 161, 9, 17, -7, 163, -73,
	-74, -75, -76, -78, -77, -10, -7, 154, 86, 163,
	-37, -12, 31, -105, -14, 161, 102, -54, 88, 35,
	163, -14, 17, -69, -25, 159, 163, -74, 161, 161,
	121, 105, 153, -14, -14, 161, 160, -10, 163, -25,
	-22, -71, 86, -5, -65, -7, 100, 162, 160, -7,
	161, -14, -19, 163, -79, 161, 162, -14, 163,
}
var yyDef = [...]int{

	84, -2, 1, 83, 85, 86, 87, 88, 89, 0,
	0, 0, 117, 122, 123, 0, 0, 0, 0, 407,
	407, 407, 0, 396, 0, 134, 0, 0, 0, 0,
	140, 0, 0, 0, 78, 276, 0, 0, 0, 0,
	158, 0, -2, 406, 215, 0, 410, 411, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 358, 0, 217, 218, 409, 0, 0,
	-2, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 0, 0, 377, 416, 0, -2, 0, 186, 404,
	80, 0, 0, 0, 0, 84, 78, 0, 0, 0,
	112, 0, 98, 99, 109, 114, 0, 0, 0, 0,
	166, 0, 0, 408, 396, 0, 0, 0, 199, 200,
	0, 202, 203, 0, 206, 207, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 144, 0, 277, 0, 216, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 306, 0,
	0, 291, -2, 0, 0, 0, 401, 397, -2, 325,
	326, 327, 328, 0, 0, 343, 344, 0, 346, 347,
	348, 349, 350, 351, 352, 353, 354, 355, 357, 359,
	361, 0, 0, 0, 373, 0, 380, 382, 0, 0,
	0, 0, 0, 418, 186, 0, 185, 189, 187, 191,
	0, 0, 0, 81, 0, 82, 91, 84, 0, 94,
	0, 0, 112, 0, 96, 0, 0, 0, 112, 115,
	116, 121, 118, 119, 120, 0, 0, 0, 167, 169,
	0, 128, 129, 130, 131, 0, 132, 0, 0, 133,
	0, 308, 309, 310, 311, 312, 313, 314, 315, 316,
	317, 318, 319, 320, 321, 322, 323, 324, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 0, 341,
	211, 208, -2, 0, 0, 152, 0, 0, 142, 143,
	0, 0, 224, 224, 0, 0, 0, 159, 0, 162,
	117, 289, 0, 292, 293, 294, 295, 296, 297, 298,
	299, 300, 301, 302, 303, 0, 412, 413, 0, 415,
	0, 0, 0, -2, 0, 0, 0, 394, 419, 76,
	77, 69, 70, 71, 72, 73, 74, 75, 2, 3,
	4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
	14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 395, 420, 372, 381, 375,
	378, 379, 0, 0, 0, 0, 399, 374, 0, 0,
	403, 186, 0, -2, 186, 79, 90, 0, 93, 95,
	97, 0, 112, 108, 0, 112, 0, 113, 0, 0,
	0, 166, 0, 0, 198, 201, 204, 205, 0, 340,
	0, 212, 0, 0, 0, 0, 145, -2, 224, 253,
	253, 224, 222, 229, 0, 0, 0, 290, 0, 0,
	400, 342, 345, 360, 0, 389, 390, 0, 392, 384,
	385, 386, 0, 388, 417, 402, 188, 190, 0, 0,
	0, 92, 0, 0, 211, 105, 110, 0, 0, 124,
	164, 117, 0, 0, 168, 127, 174, 174, 339, 0,
	209, 0, -2, 0, 0, 186, 139, 154, 117, 151,
	153, 149, 0, 268, 270, 278, 275, 282, 0, 284,
	285, 286, 253, 214, 223, 0, 0, 0, -2, 249,
	255, 257, 258, 259, 260, 261, 262, 219, 253, 0,
	0, 0, 0, 156, 117, 414, 383, 391, 0, -2,
	186, 195, 211, 107, 0, 0, 212, 111, 211, 0,
	0, 166, 0, 174, 0, 174, 136, 0, 0, -2,
	186, 0, 0, 141, 0, 0, 287, 274, 280, 279,
	283, 213, 0, 264, 265, 0, 276, 0, 256, 220,
	230, 157, 117, 163, 160, 0, 0, 0, 212, 211,
	102, 104, 0, 0, 125, 0, 170, 0, 0, 0,
	0, 0, 137, 196, 117, 0, 0, -2, 0, 0,
	117, 0, 0, 271, 0, 281, 225, 0, 0, 0,
	251, 0, 0, 227, 231, 0, 161, 387, 194, 100,
	106, 0, 103, 165, 0, 0, 117, 177, 178, 171,
	172, 0, 0, 0, 183, 155, 0, 147, 0, 117,
	288, 272, 263, 266, 226, 0, 0, 0, 232, 0,
	234, 0, 0, 244, 0, 0, 243, 57, -2, 101,
	126, 179, 117, 117, 176, 173, 0, 138, 0, 0,
	150, 0, 0, 250, 252, -2, 233, 235, 236, 237,
	0, 0, 0, 0, 175, 197, 0, 148, 267, 273,
	0, 238, 239, 240, 242, 245, 0, 117, 287, 241,
	180, 0, 0, 146, 228, 246, 117, 0, 247,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 55, 165, 3, 166, 54, 37, 3,
	159, 160, 52, 49, 9, 50, 51, 53, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 31, 161,
	43, 17, 45, 30, 67, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 69, 3, 164, 36, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 35, 163, 57,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 10, 11, 12,
	13, 14, 15, 16, 18, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 32, 33, 34, 38,
	39, 40, 41, 42, 44, 46, 47, 48, 56, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 68, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			fmt.Println(yyDollar[1].node)
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.value = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.value = yyDollar[1].value
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.value = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.value = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.value = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.value = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.value = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.value = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:320
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].token)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].value)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.node = Node("NamespaceParts").append(Node(yyDollar[1].token))
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:326
		{
			yyVAL.node = yyDollar[1].node.append(Node(yyDollar[3].token))
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:330
		{
			yyVAL.node = Node("Name").append(yyDollar[1].node)
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:331
		{
			yyVAL.node = Node("Name").append(yyDollar[2].node).attribute("FullyQualified", "true")
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:332
		{
			yyVAL.node = Node("Name").append(yyDollar[3].node).attribute("Relative", "true")
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:336
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:337
		{
			yyVAL.node = Node("Statements")
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:341
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:342
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:344
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:346
		{
			yyVAL.node = Node("THaltCompiler")
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:347
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node)
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:349
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:350
		{
			yyVAL.node = Node("Namespace").append(yyDollar[3].node)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:351
		{
			yyVAL.node = yyDollar[2].node
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:352
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[2].node)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:353
		{
			yyVAL.node = yyDollar[2].node
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:354
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[2].node)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:358
		{
			yyVAL.node = Node("FuncUseType")
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:359
		{
			yyVAL.node = Node("ConstUseType")
		}
	case 100:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:364
		{
			yyVAL.node = Node("GroupUse").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 101:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:366
		{
			yyVAL.node = Node("GroupUse").append(yyDollar[2].node).append(yyDollar[5].node)
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:371
		{
			yyVAL.node = Node("MixedGroupUse").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:373
		{
			yyVAL.node = Node("MixedGroupUse").append(yyDollar[2].node).append(yyDollar[5].node)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:378
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:379
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:383
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:384
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:387
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:388
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:391
		{
			yyVAL.node = yyDollar[1].node
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:392
		{
			yyVAL.node = yyDollar[2].node.append(yyDollar[1].node)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:395
		{
			yyVAL.node = Node("UseElem").append(yyDollar[1].node)
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:396
		{
			yyVAL.node = Node("UseElem").append(yyDollar[1].node).append(Node("as").attribute("value", yyDollar[3].token))
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:399
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:400
		{
			yyVAL.node = yyDollar[2].node
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:404
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:405
		{
			yyVAL.node = Node("stmt")
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:409
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:410
		{
			yyVAL.node = yyDollar[1].node
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.node = yyDollar[1].node
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:414
		{
			yyVAL.node = yyDollar[2].node
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:415
		{
			yyVAL.node = yyDollar[1].node
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:416
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:418
		{
			yyVAL.node = Node("While").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("stmt").append(yyDollar[5].node))
		}
	case 125:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:424
		{
			yyVAL.node = Node("DoWhile").
				append(Node("expr").append(yyDollar[5].node)).
				append(Node("stmt").append(yyDollar[2].node))
		}
	case 126:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:430
		{
			yyVAL.node = Node("For").
				append(Node("expr1").append(yyDollar[3].node)).
				append(Node("expr2").append(yyDollar[5].node)).
				append(Node("expr3").append(yyDollar[7].node)).
				append(Node("stmt").append(yyDollar[9].node))
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:437
		{
			yyVAL.node = Node("Switch").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:438
		{
			yyVAL.node = Node("Break").append(yyDollar[2].node)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:439
		{
			yyVAL.node = Node("Continue").append(yyDollar[2].node)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:440
		{
			yyVAL.node = Node("Return").append(yyDollar[2].node)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:441
		{
			yyVAL.node = yyDollar[2].node
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:442
		{
			yyVAL.node = yyDollar[2].node
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:443
		{
			yyVAL.node = yyDollar[2].node
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:444
		{
			yyVAL.node = Node("Echo").append(Node("InlineHtml").attribute("value", yyDollar[1].token))
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:445
		{
			yyVAL.node = yyDollar[1].node
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:447
		{
			yyVAL.node = Node("Unset").append(yyDollar[3].node)
		}
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:449
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachVariable").append(yyDollar[5].node)).
				append(yyDollar[7].node)
		}
	case 138:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:456
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachKey").append(yyDollar[5].node)).
				append(Node("ForeachVariable").append(yyDollar[7].node)).
				append(yyDollar[9].node)
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:463
		{
			yyVAL.node = Node("Declare").append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:464
		{
			yyVAL.node = Node("")
		}
	case 141:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:466
		{
			yyVAL.node = Node("Try").
				append(yyDollar[3].node).
				append(yyDollar[5].node).
				append(yyDollar[6].node)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:472
		{
			yyVAL.node = Node("Throw").append(yyDollar[2].node)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:473
		{
			yyVAL.node = Node("GoTo").attribute("Label", yyDollar[2].token)
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:474
		{
			yyVAL.node = Node("Label").attribute("name", yyDollar[1].token)
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:477
		{
			yyVAL.node = Node("CatchList")
		}
	case 146:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:479
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[4].node).append(Node("Variable").attribute("name", yyDollar[5].token)).append(yyDollar[8].node)
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:482
		{
			yyVAL.node = Node("CatchNameList").append(yyDollar[1].node)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:483
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:487
		{
			yyVAL.node = Node("")
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:488
		{
			yyVAL.node = Node("Finnaly").append(yyDollar[3].node)
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:492
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:497
		{
			yyVAL.node = Node("Const").attribute("name", yyDollar[1].token).append(yyDollar[3].node)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:501
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:502
		{
			yyVAL.node = yyDollar[2].node
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:507
		{
			yyVAL.node = Node("If").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[5].node))
		}
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:511
		{
			yyVAL.node = yyDollar[1].node.append(Node("ElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[6].node)))
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:517
		{
			yyVAL.node = yyDollar[1].node
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:519
		{
			yyVAL.node = yyDollar[1].node.append(Node("Else").append(Node("stmt").append(yyDollar[3].node)))
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:526
		{
			yyVAL.node = Node("AltIf").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[6].node))
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:530
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[7].node)))
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:536
		{
			yyVAL.node = yyDollar[1].node
		}
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:538
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElse").append(Node("stmt").append(yyDollar[4].node)))
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:544
		{
			yyVAL.node = yyDollar[1].node
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:545
		{
			yyVAL.node = yyDollar[2].node
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:549
		{
			yyVAL.node = Node("")
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:550
		{
			yyVAL.node = yyDollar[1].node
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:553
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:554
		{
			yyVAL.node = Node("ExpressionList").append(yyDollar[1].node)
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:558
		{
			yyVAL.node = yyDollar[2].node
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:559
		{
			yyVAL.node = yyDollar[3].node
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:560
		{
			yyVAL.node = yyDollar[2].node
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:561
		{
			yyVAL.node = yyDollar[3].node
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:565
		{
			yyVAL.node = Node("CaseList")
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:567
		{
			yyVAL.node = yyDollar[1].node.append(Node("Case").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node))
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:571
		{
			yyVAL.node = yyDollar[1].node.append(Node("Default").append(yyDollar[4].node))
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:582
		{
			yyVAL.node = yyDollar[1].node
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:583
		{
			yyVAL.node = yyDollar[2].node
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:587
		{
			yyVAL.node = yyDollar[1].node
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:588
		{
			yyVAL.node = Node("Ref").append(yyDollar[2].node)
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:589
		{
			yyVAL.node = Node("List").append(yyDollar[3].node)
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:590
		{
			yyVAL.node = Node("ShortList").append(yyDollar[2].node)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:594
		{ /* TODO: allow single trailing comma */
			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:598
		{
			yyVAL.node = Node("")
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:599
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:604
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:605
		{
			yyVAL.node = Node("ArrayPairList").append(yyDollar[1].node)
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:609
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:610
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:611
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(Node("Ref").append(yyDollar[4].node))
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:612
		{
			yyVAL.node = Node("ArrayElement").append(Node("Ref").append(yyDollar[2].node))
		}
	case 194:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:614
		{
			yyVAL.node = Node("ArrayElement").
				append(yyDollar[1].node).
				append(Node("ArrayList").append(yyDollar[5].node))
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:620
		{
			yyVAL.node = Node("ArrayElement").
				append(Node("ArrayList").append(yyDollar[3].node))
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:627
		{
			yyVAL.node = yyDollar[1].node
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:628
		{
			yyVAL.node = yyDollar[2].node
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:632
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:633
		{
			yyVAL.node = Node("GlobalVarList").append(yyDollar[1].node)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:637
		{
			yyVAL.node = yyDollar[1].node
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:641
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:642
		{
			yyVAL.node = Node("StaticVarList").append(yyDollar[1].node)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:646
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:647
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token).append(Node("expr").append(yyDollar[3].node))
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:651
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:652
		{
			yyVAL.node = Node("EchoList").append(yyDollar[1].node)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:656
		{
			yyVAL.node = Node("Echo").append(yyDollar[1].node)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:660
		{
			yyVAL.node = Node("UnsetVariablesList").append(yyDollar[1].node)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:661
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:665
		{
			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:675
		{
			yyVAL.node = yyDollar[1].node.attribute("name", yyDollar[3].token).append(yyDollar[5].node)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:676
		{
			yyVAL.node = Node("Class").attribute("name", yyDollar[2].token).append(yyDollar[4].node)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:680
		{
			yyVAL.node = Node("Class").attribute(yyDollar[1].value, "true")
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:681
		{
			yyVAL.node = yyDollar[1].node.attribute(yyDollar[2].value, "true")
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:685
		{
			yyVAL.value = "abstract"
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:686
		{
			yyVAL.value = "final"
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:690
		{
			yyVAL.node = Node("Trait").attribute("name", yyDollar[2].token).append(yyDollar[4].node)
		}
	case 220:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:695
		{
			yyVAL.node = Node("Interface").
				attribute("name", yyDollar[2].token).
				append(Node("Extends").append(yyDollar[3].node)).
				append(yyDollar[5].node)
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:704
		{
			yyVAL.node = Node("")
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:705
		{
			yyVAL.node = yyDollar[2].node
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:709
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:710
		{
			yyVAL.node = Node("Stmt")
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:714
		{
			yyVAL.node = yyDollar[2].node.append(yyDollar[1].node)
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:715
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[1].node)
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:716
		{
			yyVAL.node = Node("Use").append(yyDollar[2].node).append(yyDollar[3].node)
		}
	case 228:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:719
		{
			yyVAL.node = Node("Function").
				append(yyDollar[1].node).
				append(Node("name").append(yyDollar[4].node)).
				attribute("returns_ref", yyDollar[3].value).
				append(yyDollar[6].node).
				append(yyDollar[8].node).
				append(yyDollar[9].node)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:731
		{
			yyVAL.node = Node("NameList").append(yyDollar[1].node)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:732
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:736
		{
			yyVAL.node = Node("")
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:737
		{
			yyVAL.node = Node("")
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:738
		{
			yyVAL.node = yyDollar[2].node
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:742
		{
			yyVAL.node = Node("TraitAdaptionList").append(yyDollar[1].node)
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:743
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:747
		{
			yyVAL.node = yyDollar[1].node
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:748
		{
			yyVAL.node = yyDollar[1].node
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:753
		{
			yyVAL.node = Node("TraitPrecedence").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:757
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").attribute("value", yyDollar[3].token))
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:759
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").append(Node("reservedNonModifiers")))
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:761
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node).append(yyDollar[4].node)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:762
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:765
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:766
		{
			yyVAL.node = yyDollar[1].node
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:770
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:774
		{
			yyVAL.node = Node("")
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:775
		{
			yyVAL.node = yyDollar[2].node
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:779
		{
			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:780
		{
			yyVAL.node = Node("VarMemberModifier")
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:784
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:785
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:789
		{
			yyVAL.node = Node("Const").append(yyDollar[3].node)
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:793
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:794
		{
			yyVAL.node = yyDollar[1].node
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:797
		{
			yyVAL.node = yyDollar[1].node
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:798
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:801
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:802
		{
			yyVAL.node = Node("ProtectedMemberModifier")
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:803
		{
			yyVAL.node = Node("PrivateMemberModifier")
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:804
		{
			yyVAL.node = Node("StaticMemberModifier")
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:805
		{
			yyVAL.node = Node("AbstractMemberModifier")
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:806
		{
			yyVAL.node = Node("FinalMemberModifier")
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:810
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:811
		{
			yyVAL.node = Node("PropertyList").append(yyDollar[1].node)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:814
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:815
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token).append(Node("Default").append(yyDollar[3].node))
		}
	case 267:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:820
		{
			yyVAL.node = Node("Function").
				attribute("name", yyDollar[3].token).
				attribute("returns_ref", yyDollar[2].value).
				append(yyDollar[5].node).
				append(yyDollar[7].node).
				append(yyDollar[9].node)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:831
		{
			yyVAL.node = yyDollar[1].node
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:832
		{
			yyVAL.node = Node("Parameter list")
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:835
		{
			yyVAL.node = Node("Parameter list").append(yyDollar[1].node)
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:836
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:840
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token)
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:848
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token).
				append(yyDollar[6].node)
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:859
		{
			yyVAL.node = Node("No type")
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:860
		{
			yyVAL.node = yyDollar[1].node
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:864
		{
			yyVAL.value = "false"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:865
		{
			yyVAL.value = "true"
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:869
		{
			yyVAL.value = "false"
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:870
		{
			yyVAL.value = "true"
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:874
		{
			yyVAL.value = "false"
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:875
		{
			yyVAL.value = "true"
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:879
		{
			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:880
		{
			yyVAL.node = yyDollar[2].node
			yyVAL.node.attribute("nullable", "true")
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:884
		{
			yyVAL.node = yyDollar[1].node
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:885
		{
			yyVAL.node = Node("array type")
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:886
		{
			yyVAL.node = Node("callable type")
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:890
		{
			yyVAL.node = Node("No return type")
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:891
		{
			yyVAL.node = yyDollar[2].node
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:895
		{
			yyVAL.node = Node("Assign").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:896
		{
			yyVAL.node = Node("AssignRef").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:897
		{
			yyVAL.node = Node("Clone").append(yyDollar[2].node)
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:898
		{
			yyVAL.node = Node("AssignAdd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:899
		{
			yyVAL.node = Node("AssignSub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:900
		{
			yyVAL.node = Node("AssignMul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:901
		{
			yyVAL.node = Node("AssignPow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:902
		{
			yyVAL.node = Node("AssignDiv").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:903
		{
			yyVAL.node = Node("AssignConcat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:904
		{
			yyVAL.node = Node("AssignMod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:905
		{
			yyVAL.node = Node("AssignAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:906
		{
			yyVAL.node = Node("AssignOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:907
		{
			yyVAL.node = Node("AssignXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:908
		{
			yyVAL.node = Node("AssignShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:909
		{
			yyVAL.node = Node("AssignShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:910
		{
			yyVAL.node = Node("PostIncrement").append(yyDollar[1].node)
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:911
		{
			yyVAL.node = Node("PreIncrement").append(yyDollar[2].node)
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:912
		{
			yyVAL.node = Node("PostDecrement").append(yyDollar[1].node)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:913
		{
			yyVAL.node = Node("PreDecrement").append(yyDollar[2].node)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:914
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:915
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:916
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:917
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:918
		{
			yyVAL.node = Node("Xor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:919
		{
			yyVAL.node = Node("BitwiseOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:920
		{
			yyVAL.node = Node("BitwiseAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:921
		{
			yyVAL.node = Node("BitwiseXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:922
		{
			yyVAL.node = Node("Concat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:923
		{
			yyVAL.node = Node("Add").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:924
		{
			yyVAL.node = Node("Sub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:925
		{
			yyVAL.node = Node("Mul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:926
		{
			yyVAL.node = Node("Pow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:927
		{
			yyVAL.node = Node("Div").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:928
		{
			yyVAL.node = Node("Mod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:929
		{
			yyVAL.node = Node("ShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:930
		{
			yyVAL.node = Node("ShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:931
		{
			yyVAL.node = Node("UnaryPlus").append(yyDollar[2].node)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:932
		{
			yyVAL.node = Node("UnaryMinus").append(yyDollar[2].node)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:933
		{
			yyVAL.node = Node("BooleanNot").append(yyDollar[2].node)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:934
		{
			yyVAL.node = Node("BitwiseNot").append(yyDollar[2].node)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:935
		{
			yyVAL.node = Node("Identical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:936
		{
			yyVAL.node = Node("NotIdentical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:937
		{
			yyVAL.node = Node("Equal").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:938
		{
			yyVAL.node = Node("NotEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:939
		{
			yyVAL.node = Node("Spaceship").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:940
		{
			yyVAL.node = Node("Smaller").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:941
		{
			yyVAL.node = Node("SmallerOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:942
		{
			yyVAL.node = Node("Greater").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:943
		{
			yyVAL.node = Node("GreaterOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:944
		{
			yyVAL.node = yyDollar[2].node
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:945
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:946
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:947
		{
			yyVAL.node = Node("Coalesce").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:948
		{
			yyVAL.node = Node("Empty").append(yyDollar[3].node)
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:949
		{
			yyVAL.node = Node("Include").append(yyDollar[2].node)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.node = Node("IncludeOnce").append(yyDollar[2].node)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:951
		{
			yyVAL.node = Node("Eval").append(yyDollar[3].node)
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:952
		{
			yyVAL.node = Node("Require").append(yyDollar[2].node)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:953
		{
			yyVAL.node = Node("RequireOnce").append(yyDollar[2].node)
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:954
		{
			yyVAL.node = Node("CastInt").append(yyDollar[2].node)
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:955
		{
			yyVAL.node = Node("CastDouble").append(yyDollar[2].node)
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:956
		{
			yyVAL.node = Node("CastString").append(yyDollar[2].node)
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:957
		{
			yyVAL.node = Node("CastArray").append(yyDollar[2].node)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:958
		{
			yyVAL.node = Node("CastObject").append(yyDollar[2].node)
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:959
		{
			yyVAL.node = Node("CastBool").append(yyDollar[2].node)
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:960
		{
			yyVAL.node = Node("CastUnset").append(yyDollar[2].node)
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:961
		{
			yyVAL.node = Node("Silence").append(yyDollar[2].node)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:962
		{
			yyVAL.node = yyDollar[1].node
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:963
		{
			yyVAL.node = Node("Print").append(yyDollar[2].node)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:964
		{
			yyVAL.node = Node("Yield")
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:965
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node)
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:966
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:967
		{
			yyVAL.node = Node("YieldFrom").append(yyDollar[2].node)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:971
		{
			yyVAL.node = Node("Scalar").append(Node("Lnumber").attribute("value", yyDollar[1].token))
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:972
		{
			yyVAL.node = Node("Scalar").append(Node("Dnumber").attribute("value", yyDollar[1].token))
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:973
		{
			yyVAL.node = Node("Scalar").append(Node("__LINE__"))
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:974
		{
			yyVAL.node = Node("Scalar").append(Node("__FILE__"))
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:975
		{
			yyVAL.node = Node("Scalar").append(Node("__DIR__"))
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:976
		{
			yyVAL.node = Node("Scalar").append(Node("__TRAIT__"))
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:977
		{
			yyVAL.node = Node("Scalar").append(Node("__METHOD__"))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:978
		{
			yyVAL.node = Node("Scalar").append(Node("__FUNCTION__"))
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:979
		{
			yyVAL.node = Node("Scalar").append(Node("__NAMESPACE__"))
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:980
		{
			yyVAL.node = Node("Scalar").append(Node("__CLASS__"))
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:982
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc").attribute("value", yyDollar[2].token))
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:984
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc"))
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:985
		{
			yyVAL.node = yyDollar[2].node
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:986
		{
			yyVAL.node = yyDollar[2].node
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:987
		{
			yyVAL.node = yyDollar[1].node
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:988
		{
			yyVAL.node = yyDollar[1].node
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:992
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:993
		{
			yyVAL.node = yyDollar[1].node.append(Node("String").attribute("value", yyDollar[2].token))
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:994
		{
			yyVAL.node = Node("EncapsList").append(yyDollar[1].node)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:995
		{
			yyVAL.node = Node("EncapsList").append(Node("String").attribute("value", yyDollar[1].token)).append(yyDollar[2].node)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:998
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token)
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:999
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token).append(Node("offset").append(yyDollar[3].node))
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token).append(Node("property").attribute("value", yyDollar[3].token))
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1001
		{
			yyVAL.node = Node("Variable").append(Node("expr").append(yyDollar[2].node))
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token)
		}
	case 387:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token).append(Node("offset").append(yyDollar[4].node))
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.node = yyDollar[2].node
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.node = Node("OffsetString").attribute("value", yyDollar[1].token)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.node = Node("OffsetNumString").attribute("value", yyDollar[1].token)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.node = Node("OffsetNegateNumString").attribute("value", yyDollar[2].token)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1011
		{
			yyVAL.node = Node("OffsetVariable").attribute("value", yyDollar[1].token)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1015
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1018
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.node = Node("Static")
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1023
		{
			yyVAL.node = yyDollar[1].node
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1027
		{
			yyVAL.node = yyDollar[1].node
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1031
		{
			yyVAL.node = yyDollar[1].node
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.node = yyDollar[2].node
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1033
		{
			yyVAL.node = yyDollar[1].node
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1037
		{
			yyVAL.node = yyDollar[3].node
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.node = yyDollar[2].node
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.node = Node("String").attribute("value", yyDollar[1].token)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1043
		{
			yyVAL.node = yyDollar[1].node
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.node = yyDollar[1].node
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.node = Node("")
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1049
		{
			yyVAL.node = yyDollar[1].node
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1053
		{
			yyVAL.node = yyDollar[1].node
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1057
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1059
		{
			yyVAL.node = Node("Property").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1063
		{
			yyVAL.node = Node("PropertyName").attribute("value", yyDollar[1].token)
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.node = yyDollar[2].node
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1065
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1069
		{
			yyVAL.node = Node("Variable").attribute("name", yyDollar[1].token)
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.node = Node("Variable").append(yyDollar[3].node)
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1071
		{
			yyVAL.node = Node("Variable").append(yyDollar[2].node)
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	}
	goto yystack /* stack new state and value */
}
