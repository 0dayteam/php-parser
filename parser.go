//line parser.y:2
package main

import __yyfmt__ "fmt"

//line parser.y:2
import (
	"bytes"
	"fmt"
	"io"
	"os"
)

type node struct {
	name       string
	children   []node
	attributes map[string]string
}

func (n node) String() string {
	buf := new(bytes.Buffer)
	n.print(buf, " ")
	return buf.String()
}

func (n node) print(out io.Writer, indent string) {
	if len(n.attributes) > 0 {
		fmt.Fprintf(out, "\n%v%v %s", indent, n.name, n.attributes)
	} else {
		fmt.Fprintf(out, "\n%v%v", indent, n.name)
	}
	for _, nn := range n.children {
		nn.print(out, indent+"  ")
	}
}

func Node(name string) node {
	return node{name: name, attributes: make(map[string]string)}
}

func (n node) append(nn ...node) node {
	n.children = append(n.children, nn...)
	return n
}

func (n node) attribute(key string, value string) node {
	n.attributes[key] = value
	return n
}

//line parser.y:50
type yySymType struct {
	yys   int
	node  node
	token string
	value string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EVAL = 57348
const T_REQUIRE = 57349
const T_REQUIRE_ONCE = 57350
const T_LOGICAL_OR = 57351
const T_LOGICAL_XOR = 57352
const T_LOGICAL_AND = 57353
const T_PRINT = 57354
const T_YIELD = 57355
const T_DOUBLE_ARROW = 57356
const T_YIELD_FROM = 57357
const T_PLUS_EQUAL = 57358
const T_MINUS_EQUAL = 57359
const T_MUL_EQUAL = 57360
const T_DIV_EQUAL = 57361
const T_CONCAT_EQUAL = 57362
const T_MOD_EQUAL = 57363
const T_AND_EQUAL = 57364
const T_OR_EQUAL = 57365
const T_XOR_EQUAL = 57366
const T_SL_EQUAL = 57367
const T_SR_EQUAL = 57368
const T_POW_EQUAL = 57369
const T_COALESCE = 57370
const T_BOOLEAN_OR = 57371
const T_BOOLEAN_AND = 57372
const T_IS_EQUAL = 57373
const T_IS_NOT_EQUAL = 57374
const T_IS_IDENTICAL = 57375
const T_IS_NOT_IDENTICAL = 57376
const T_SPACESHIP = 57377
const T_IS_SMALLER_OR_EQUAL = 57378
const T_IS_GREATER_OR_EQUAL = 57379
const T_SL = 57380
const T_SR = 57381
const T_INSTANCEOF = 57382
const T_INC = 57383
const T_DEC = 57384
const T_INT_CAST = 57385
const T_DOUBLE_CAST = 57386
const T_STRING_CAST = 57387
const T_ARRAY_CAST = 57388
const T_OBJECT_CAST = 57389
const T_BOOL_CAST = 57390
const T_UNSET_CAST = 57391
const T_POW = 57392
const T_NEW = 57393
const T_CLONE = 57394
const T_NOELSE = 57395
const T_ELSEIF = 57396
const T_ELSE = 57397
const T_ENDIF = 57398
const T_STATIC = 57399
const T_ABSTRACT = 57400
const T_FINAL = 57401
const T_PRIVATE = 57402
const T_PROTECTED = 57403
const T_PUBLIC = 57404
const T_EXIT = 57405
const T_IF = 57406
const T_LNUMBER = 57407
const T_DNUMBER = 57408
const T_STRING = 57409
const T_STRING_VARNAME = 57410
const T_VARIABLE = 57411
const T_NUM_STRING = 57412
const T_INLINE_HTML = 57413
const T_CHARACTER = 57414
const T_BAD_CHARACTER = 57415
const T_ENCAPSED_AND_WHITESPACE = 57416
const T_CONSTANT_ENCAPSED_STRING = 57417
const T_ECHO = 57418
const T_DO = 57419
const T_WHILE = 57420
const T_ENDWHILE = 57421
const T_FOR = 57422
const T_ENDFOR = 57423
const T_FOREACH = 57424
const T_ENDFOREACH = 57425
const T_DECLARE = 57426
const T_ENDDECLARE = 57427
const T_AS = 57428
const T_SWITCH = 57429
const T_ENDSWITCH = 57430
const T_CASE = 57431
const T_DEFAULT = 57432
const T_BREAK = 57433
const T_CONTINUE = 57434
const T_GOTO = 57435
const T_FUNCTION = 57436
const T_CONST = 57437
const T_RETURN = 57438
const T_TRY = 57439
const T_CATCH = 57440
const T_FINALLY = 57441
const T_THROW = 57442
const T_USE = 57443
const T_INSTEADOF = 57444
const T_GLOBAL = 57445
const T_VAR = 57446
const T_UNSET = 57447
const T_ISSET = 57448
const T_EMPTY = 57449
const T_HALT_COMPILER = 57450
const T_CLASS = 57451
const T_TRAIT = 57452
const T_INTERFACE = 57453
const T_EXTENDS = 57454
const T_IMPLEMENTS = 57455
const T_OBJECT_OPERATOR = 57456
const T_LIST = 57457
const T_ARRAY = 57458
const T_CALLABLE = 57459
const T_CLASS_C = 57460
const T_TRAIT_C = 57461
const T_METHOD_C = 57462
const T_FUNC_C = 57463
const T_LINE = 57464
const T_FILE = 57465
const T_COMMENT = 57466
const T_DOC_COMMENT = 57467
const T_OPEN_TAG = 57468
const T_OPEN_TAG_WITH_ECHO = 57469
const T_CLOSE_TAG = 57470
const T_WHITESPACE = 57471
const T_START_HEREDOC = 57472
const T_END_HEREDOC = 57473
const T_DOLLAR_OPEN_CURLY_BRACES = 57474
const T_CURLY_OPEN = 57475
const T_PAAMAYIM_NEKUDOTAYIM = 57476
const T_NAMESPACE = 57477
const T_NS_C = 57478
const T_DIR = 57479
const T_NS_SEPARATOR = 57480
const T_ELLIPSIS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"','",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_PRINT",
	"T_YIELD",
	"T_DOUBLE_ARROW",
	"T_YIELD_FROM",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"'?'",
	"':'",
	"T_COALESCE",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"'&'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_SPACESHIP",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'+'",
	"'-'",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"T_INSTANCEOF",
	"'~'",
	"T_INC",
	"T_DEC",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"'@'",
	"T_POW",
	"'['",
	"T_NEW",
	"T_CLONE",
	"T_NOELSE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"'('",
	"')'",
	"';'",
	"'{'",
	"'}'",
	"']'",
	"'\"'",
	"'$'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:1110
const src = `<?php
const A = 'foo', B = 'bar';
`

func main() {
	yyDebug = 0
	yyErrorVerbose = true
	l := newLexer(bytes.NewBufferString(src), os.Stdout, "file.name")
	yyParse(l)
}

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	133, 404,
	153, 404,
	-2, 410,
	-1, 81,
	133, 406,
	153, 406,
	-2, 381,
	-1, 97,
	153, 402,
	-2, 398,
	-1, 206,
	133, 404,
	153, 404,
	-2, 310,
	-1, 212,
	133, 404,
	153, 404,
	-2, 312,
	-1, 315,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 334,
	-1, 316,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 335,
	-1, 317,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 336,
	-1, 318,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 337,
	-1, 319,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 338,
	-1, 320,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 339,
	-1, 321,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 340,
	-1, 322,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 341,
	-1, 323,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 342,
	-1, 329,
	133, 404,
	153, 404,
	-2, 211,
	-1, 369,
	133, 405,
	153, 405,
	-2, 343,
	-1, 469,
	133, 404,
	153, 404,
	-2, 194,
	-1, 503,
	160, 274,
	-2, 279,
	-1, 560,
	133, 404,
	153, 404,
	-2, 182,
	-1, 586,
	88, 253,
	-2, 259,
	-1, 606,
	133, 404,
	153, 404,
	-2, 193,
	-1, 626,
	133, 404,
	153, 404,
	-2, 183,
	-1, 675,
	133, 408,
	153, 408,
	-2, 185,
	-1, 739,
	105, 76,
	-2, 78,
	-1, 756,
	160, 274,
	-2, 279,
}

const yyPrivate = 57344

const yyLast = 6379

var yyAct = [...]int{

	27, 120, 679, 691, 568, 731, 510, 588, 377, 670,
	690, 706, 641, 572, 498, 176, 570, 559, 508, 284,
	543, 127, 127, 127, 279, 249, 139, 4, 609, 573,
	542, 251, 505, 328, 173, 97, 280, 135, 337, 5,
	281, 138, 122, 6, 132, 81, 619, 118, 115, 95,
	95, 205, 675, 117, 213, 214, 215, 216, 217, 596,
	219, 220, 603, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 466, 232, 233, 234, 256, 78, 530,
	80, 260, 261, 79, 786, 787, 43, 211, 211, 740,
	116, 702, 699, 697, 658, 2, 531, 210, 210, 778,
	253, 363, 133, 95, 471, 555, 240, 726, 719, 687,
	678, 707, 638, 579, 509, 665, 666, 269, 101, 339,
	172, 781, 282, 246, 297, 286, 287, 96, 96, 105,
	111, 766, 208, 208, 294, 207, 207, 760, 206, 212,
	471, 759, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 311, 312, 313, 314, 315,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 326,
	709, 330, 471, 529, 332, 247, 471, 364, 665, 666,
	611, 96, 292, 592, 593, 594, 591, 590, 589, 347,
	349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
	359, 360, 262, 273, 361, 211, 746, 99, 241, 343,
	368, 694, 695, 457, 128, 210, 546, 107, 715, 370,
	710, 257, 371, 259, 107, 331, 95, 585, 266, 703,
	587, 272, 100, 664, 662, 779, 554, 651, 623, 373,
	451, 708, 622, 460, 620, 618, 489, 464, 540, 253,
	208, 767, 482, 207, 475, 472, 329, 345, 334, 725,
	275, 686, 269, 592, 593, 594, 591, 590, 589, 476,
	722, 242, 243, 98, 465, 625, 296, 486, 290, 211,
	289, 756, 288, 365, 263, 463, 293, 4, 104, 210,
	211, 275, 123, 106, 714, 102, 494, 209, 139, 5,
	210, 713, 704, 6, 96, 698, 633, 585, 608, 557,
	587, 533, 258, 677, 374, 452, 627, 607, 479, 503,
	488, 561, 470, 485, 208, 344, 497, 207, 342, 574,
	462, 248, 493, 221, 291, 208, 218, 492, 207, 495,
	203, 469, 171, 512, 454, 513, 456, 170, 514, 515,
	685, 456, 454, 563, 169, 125, 107, 473, 273, 124,
	128, 121, 103, 683, 271, 517, 107, 143, 145, 144,
	107, 133, 95, 521, 507, 504, 107, 511, 100, 592,
	593, 594, 591, 590, 589, 107, 478, 167, 481, 168,
	141, 142, 146, 148, 147, 160, 161, 158, 159, 162,
	163, 164, 165, 166, 156, 157, 150, 151, 149, 152,
	154, 155, 274, 107, 268, 271, 256, 763, 562, 98,
	624, 107, 271, 585, 123, 153, 587, 102, 592, 593,
	594, 591, 590, 589, 576, 577, 271, 480, 123, 367,
	104, 102, 501, 209, 256, 374, 452, 267, 113, 114,
	96, 271, 204, 123, 241, 366, 102, 236, 235, 457,
	241, 506, 576, 577, 338, 237, 647, 541, 253, 535,
	458, 253, 585, 341, 484, 587, 76, 77, 110, 761,
	241, 123, 631, 632, 102, 241, 644, 643, 477, 550,
	286, 552, 112, 762, 604, 241, 538, 556, 4, 534,
	245, 283, 107, 270, 107, 711, 665, 666, 750, 551,
	5, 239, 548, 580, 6, 581, 455, 242, 243, 642,
	721, 653, 238, 242, 243, 136, 565, 178, 595, 113,
	114, 605, 527, 558, 459, 211, 211, 578, 119, 575,
	525, 600, 511, 242, 243, 210, 210, 453, 242, 243,
	483, 616, 668, 665, 666, 471, 336, 612, 242, 243,
	335, 749, 182, 181, 253, 180, 174, 153, 629, 183,
	184, 273, 211, 544, 177, 636, 523, 615, 526, 524,
	208, 208, 210, 207, 207, 680, 329, 560, 265, 628,
	650, 45, 645, 346, 646, 175, 753, 211, 639, 481,
	727, 481, 621, 652, 637, 244, 688, 210, 253, 295,
	575, 592, 593, 594, 591, 590, 589, 208, 276, 286,
	207, 511, 649, 606, 655, 185, 187, 186, 253, 179,
	660, 610, 648, 654, 659, 545, 614, 544, 663, 596,
	657, 656, 208, 673, 613, 207, 634, 109, 626, 671,
	499, 681, 696, 674, 490, 467, 126, 684, 1, 481,
	692, 211, 340, 8, 481, 481, 705, 667, 7, 669,
	575, 210, 701, 108, 712, 152, 154, 155, 129, 130,
	718, 264, 150, 151, 149, 152, 154, 155, 362, 724,
	48, 153, 49, 94, 720, 522, 728, 72, 785, 737,
	723, 153, 610, 734, 544, 735, 208, 733, 745, 207,
	732, 730, 560, 717, 693, 584, 575, 744, 689, 640,
	586, 752, 583, 748, 582, 630, 716, 567, 755, 742,
	481, 736, 481, 564, 737, 252, 758, 754, 671, 250,
	327, 137, 134, 131, 553, 764, 765, 700, 741, 384,
	385, 386, 387, 388, 770, 389, 390, 391, 427, 428,
	285, 771, 547, 15, 42, 14, 736, 776, 772, 41,
	775, 774, 47, 44, 569, 481, 571, 37, 277, 780,
	782, 3, 783, 376, 682, 635, 768, 0, 0, 788,
	0, 0, 575, 0, 0, 0, 0, 511, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 0, 397, 398,
	399, 378, 379, 380, 381, 382, 383, 395, 396, 0,
	0, 375, 0, 95, 0, 0, 0, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 430, 431, 432, 433, 434, 422, 423, 424, 425,
	426, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 0, 442, 440, 441, 437, 438, 0, 429,
	435, 436, 443, 444, 446, 445, 447, 448, 0, 0,
	0, 0, 0, 59, 60, 61, 62, 63, 0, 439,
	450, 449, 73, 74, 0, 75, 0, 0, 0, 0,
	0, 96, 146, 148, 147, 160, 161, 158, 159, 162,
	163, 164, 165, 166, 156, 157, 150, 151, 149, 152,
	154, 155, 0, 0, 0, 0, 0, 0, 53, 54,
	0, 0, 0, 0, 55, 153, 56, 51, 52, 64,
	65, 66, 67, 68, 69, 70, 71, 0, 99, 0,
	50, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 0, 46, 82, 83, 35, 0, 95, 0, 26,
	0, 0, 0, 100, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 12, 22, 32, 0, 0, 33, 11,
	0, 23, 0, 28, 0, 58, 9, 38, 39, 40,
	0, 0, 0, 0, 98, 0, 91, 87, 88, 89,
	84, 85, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 10, 90, 86, 102, 0, 57, 144,
	31, 13, 539, 0, 93, 96, 59, 60, 61, 62,
	63, 0, 0, 0, 0, 73, 74, 167, 75, 168,
	141, 142, 146, 148, 147, 160, 161, 158, 159, 162,
	163, 164, 165, 166, 156, 157, 150, 151, 149, 152,
	154, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 54, 0, 0, 153, 0, 55, 0, 56,
	51, 52, 64, 65, 66, 67, 68, 69, 70, 71,
	0, 99, 0, 50, 0, 0, 0, 0, 24, 76,
	77, 0, 0, 0, 0, 46, 82, 83, 35, 0,
	95, 0, 26, 0, 0, 0, 100, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 36, 12, 22, 32, 0,
	0, 33, 11, 0, 23, 0, 28, 0, 58, 9,
	38, 39, 40, 0, 0, 0, 0, 98, 0, 91,
	87, 88, 89, 84, 85, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 10, 90, 86, 102,
	0, 57, 0, 31, 13, 474, 0, 93, 96, 59,
	60, 61, 62, 63, 0, 0, 0, 0, 73, 74,
	167, 75, 168, 141, 142, 146, 148, 147, 160, 161,
	158, 159, 162, 163, 164, 165, 166, 156, 157, 150,
	151, 149, 152, 154, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 54, 0, 0, 153, 0,
	55, 0, 56, 51, 52, 64, 65, 66, 67, 68,
	69, 70, 71, 0, 99, 0, 50, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 0, 46, 82,
	83, 35, 0, 95, 0, 26, 0, 0, 0, 100,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 12,
	22, 32, 0, 0, 33, 11, 0, 23, 0, 28,
	0, 58, 9, 38, 39, 40, 0, 0, 0, 0,
	98, 0, 91, 87, 88, 89, 84, 85, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 10,
	90, 86, 102, 0, 57, 0, 31, 13, 145, 144,
	93, 96, 384, 385, 386, 387, 388, 0, 389, 390,
	391, 427, 428, 0, 0, 0, 0, 167, 0, 168,
	141, 142, 146, 148, 147, 160, 161, 158, 159, 162,
	163, 164, 165, 166, 156, 157, 150, 151, 149, 152,
	154, 155, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 392, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 393, 394,
	0, 397, 398, 399, 378, 379, 380, 381, 382, 383,
	395, 396, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 430, 431, 432, 433, 434, 422,
	423, 424, 425, 426, 411, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 0, 442, 440, 441, 437,
	438, 0, 429, 435, 436, 443, 444, 446, 445, 447,
	448, 384, 385, 386, 387, 388, 0, 389, 390, 391,
	427, 428, 738, 450, 449, 102, 0, 0, 0, 0,
	0, 757, 168, 141, 142, 146, 148, 147, 160, 161,
	158, 159, 162, 163, 164, 165, 166, 156, 157, 150,
	151, 149, 152, 154, 155, 156, 157, 150, 151, 149,
	152, 154, 155, 392, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 153, 393, 394, 0,
	397, 398, 399, 378, 379, 380, 381, 382, 383, 395,
	396, 0, 0, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 430, 431, 432, 433, 434, 422, 423,
	424, 425, 426, 411, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 0, 442, 440, 441, 437, 438,
	0, 429, 435, 436, 443, 444, 446, 445, 447, 448,
	0, 0, 0, 0, 0, 0, 59, 60, 61, 62,
	63, 738, 450, 449, 102, 73, 74, 0, 75, 0,
	729, 142, 146, 148, 147, 160, 161, 158, 159, 162,
	163, 164, 165, 166, 156, 157, 150, 151, 149, 152,
	154, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 54, 0, 0, 153, 0, 55, 0, 56,
	51, 52, 64, 65, 66, 67, 68, 69, 70, 71,
	0, 99, 0, 50, 0, 0, 0, 0, 24, 76,
	77, 0, 0, 0, 0, 46, 82, 83, 35, 0,
	95, 0, 26, 0, 0, 0, 100, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 36, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 0, 58, 0,
	38, 0, 0, 0, 0, 0, 0, 98, 0, 91,
	87, 88, 89, 84, 85, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 123, 90, 86, 102,
	0, 57, 0, 31, 13, 789, 0, 93, 96, 59,
	60, 61, 62, 63, 0, 0, 0, 0, 73, 74,
	0, 75, 0, 0, 148, 147, 160, 161, 158, 159,
	162, 163, 164, 165, 166, 156, 157, 150, 151, 149,
	152, 154, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 54, 153, 0, 0, 0,
	55, 0, 56, 51, 52, 64, 65, 66, 67, 68,
	69, 70, 71, 0, 99, 0, 50, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 0, 46, 82,
	83, 35, 0, 95, 0, 26, 0, 0, 0, 100,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	0, 58, 0, 38, 0, 0, 0, 0, 0, 0,
	98, 0, 91, 87, 88, 89, 84, 85, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 123,
	90, 86, 102, 0, 57, 0, 31, 13, 784, 0,
	93, 96, 59, 60, 61, 62, 63, 0, 0, 0,
	0, 73, 74, 0, 75, 147, 160, 161, 158, 159,
	162, 163, 164, 165, 166, 156, 157, 150, 151, 149,
	152, 154, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 53, 54, 0,
	0, 0, 0, 55, 0, 56, 51, 52, 64, 65,
	66, 67, 68, 69, 70, 71, 0, 99, 0, 50,
	0, 0, 0, 0, 24, 76, 77, 0, 0, 0,
	0, 46, 82, 83, 35, 0, 95, 0, 26, 0,
	0, 0, 100, 25, 17, 16, 0, 18, 777, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 36, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 0, 58, 0, 38, 0, 0, 0,
	0, 0, 0, 98, 0, 91, 87, 88, 89, 84,
	85, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 123, 90, 86, 102, 0, 57, 0, 31,
	13, 372, 0, 93, 96, 59, 60, 61, 62, 63,
	0, 0, 0, 0, 73, 74, 167, 75, 168, 141,
	142, 146, 148, 147, 160, 161, 158, 159, 162, 163,
	164, 165, 166, 156, 157, 150, 151, 149, 152, 154,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 54, 0, 0, 153, 0, 55, 0, 56, 51,
	52, 64, 65, 66, 67, 68, 69, 70, 71, 0,
	99, 0, 50, 0, 0, 0, 0, 24, 76, 77,
	0, 0, 0, 0, 46, 82, 83, 35, 0, 95,
	0, 26, 0, 0, 0, 100, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 0, 58, 0, 38,
	0, 0, 0, 0, 0, 0, 98, 0, 91, 87,
	88, 89, 84, 85, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 123, 90, 86, 102, 0,
	57, 0, 31, 13, 769, 0, 93, 96, 59, 60,
	61, 62, 63, 0, 0, 0, 0, 73, 74, 0,
	75, 160, 161, 158, 159, 162, 163, 164, 165, 166,
	156, 157, 150, 151, 149, 152, 154, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 53, 54, 0, 0, 0, 0, 55,
	0, 56, 51, 52, 64, 65, 66, 67, 68, 69,
	70, 71, 0, 99, 0, 50, 0, 0, 0, 0,
	24, 76, 77, 0, 0, 0, 0, 46, 82, 83,
	35, 0, 95, 0, 26, 0, 0, 0, 100, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 36, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 0,
	58, 0, 38, 0, 0, 0, 0, 0, 0, 98,
	0, 91, 87, 88, 89, 84, 85, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 123, 90,
	86, 102, 0, 57, 0, 31, 13, 751, 0, 93,
	96, 59, 60, 61, 62, 63, 0, 0, 0, 0,
	73, 74, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	190, 191, 193, 194, 195, 196, 197, 198, 199, 200,
	192, 0, 0, 0, 0, 0, 53, 54, 0, 0,
	0, 0, 55, 0, 56, 51, 52, 64, 65, 66,
	67, 68, 69, 70, 71, 0, 99, 0, 50, 201,
	202, 0, 0, 24, 76, 77, 0, 0, 0, 0,
	46, 82, 83, 35, 0, 95, 0, 26, 0, 0,
	0, 100, 25, 17, 16, 0, 18, 0, 29, 747,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 0, 58, 0, 38, 0, 0, 0, 0,
	0, 0, 98, 0, 91, 87, 88, 89, 84, 85,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 123, 90, 86, 102, 0, 57, 0, 31, 13,
	0, 0, 93, 96, 59, 60, 61, 62, 63, 0,
	0, 0, 0, 73, 74, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	54, 0, 0, 0, 0, 55, 0, 56, 51, 52,
	64, 65, 66, 67, 68, 69, 70, 71, 0, 99,
	0, 50, 0, 0, 0, 0, 24, 76, 77, 0,
	0, 0, 0, 46, 82, 83, 35, 0, 95, 0,
	26, 0, 0, 0, 100, 25, 17, 16, 0, 18,
	0, 29, 0, 30, 676, 0, 19, 0, 0, 0,
	20, 21, 34, 36, 0, 22, 32, 0, 0, 33,
	0, 0, 23, 0, 28, 0, 58, 0, 38, 0,
	0, 0, 0, 0, 0, 98, 0, 91, 87, 88,
	89, 84, 85, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 123, 90, 86, 102, 0, 57,
	0, 31, 13, 0, 0, 93, 96, 59, 60, 61,
	62, 63, 0, 0, 0, 0, 73, 74, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 54, 0, 0, 0, 0, 55, 0,
	56, 51, 52, 64, 65, 66, 67, 68, 69, 70,
	71, 0, 99, 0, 50, 0, 0, 0, 0, 24,
	76, 77, 0, 0, 0, 0, 46, 82, 83, 35,
	0, 95, 0, 26, 0, 0, 0, 100, 25, 17,
	16, 661, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 0, 58,
	0, 38, 0, 0, 0, 0, 0, 0, 98, 0,
	91, 87, 88, 89, 84, 85, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 123, 90, 86,
	102, 0, 57, 0, 31, 13, 0, 0, 93, 96,
	59, 60, 61, 62, 63, 0, 0, 0, 0, 73,
	74, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 54, 0, 0, 0,
	0, 55, 0, 56, 51, 52, 64, 65, 66, 67,
	68, 69, 70, 71, 0, 99, 0, 50, 0, 0,
	0, 599, 24, 76, 77, 0, 0, 0, 0, 46,
	82, 83, 35, 0, 95, 0, 26, 0, 0, 0,
	100, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 36,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 0, 58, 0, 38, 0, 0, 0, 0, 0,
	0, 98, 0, 91, 87, 88, 89, 84, 85, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	123, 90, 86, 102, 0, 57, 0, 31, 13, 0,
	0, 93, 96, 59, 60, 61, 62, 63, 0, 0,
	0, 0, 73, 74, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 54,
	0, 0, 0, 0, 55, 0, 56, 51, 52, 64,
	65, 66, 67, 68, 69, 70, 71, 0, 99, 0,
	50, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 0, 46, 82, 83, 35, 0, 95, 0, 26,
	0, 0, 0, 100, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 0, 58, 0, 38, 0, 0,
	0, 0, 0, 0, 98, 0, 91, 87, 88, 89,
	84, 85, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 123, 90, 86, 102, 0, 57, 0,
	31, 13, 502, 0, 93, 96, 59, 60, 61, 62,
	63, 0, 0, 0, 0, 73, 74, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 54, 0, 0, 0, 0, 55, 0, 56,
	51, 52, 64, 65, 66, 67, 68, 69, 70, 71,
	0, 99, 0, 50, 0, 0, 0, 0, 24, 76,
	77, 0, 0, 0, 0, 46, 82, 83, 35, 0,
	95, 0, 26, 0, 0, 0, 100, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 36, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 0, 58, 0,
	38, 0, 0, 0, 0, 0, 0, 98, 0, 91,
	87, 88, 89, 84, 85, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 123, 90, 86, 102,
	0, 57, 0, 31, 13, 278, 0, 93, 96, 59,
	60, 61, 62, 63, 0, 0, 0, 0, 73, 74,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 54, 0, 0, 0, 0,
	55, 0, 56, 51, 52, 64, 65, 66, 67, 68,
	69, 70, 71, 0, 99, 0, 50, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 0, 46, 82,
	83, 35, 0, 95, 0, 26, 0, 0, 0, 100,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	0, 58, 0, 38, 0, 0, 0, 0, 0, 0,
	98, 0, 91, 87, 88, 89, 84, 85, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 123,
	90, 86, 102, 0, 57, 0, 31, 13, 0, 0,
	93, 96, 59, 60, 61, 62, 63, 0, 0, 0,
	0, 73, 74, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 54, 0,
	0, 0, 0, 55, 0, 56, 51, 52, 64, 65,
	66, 67, 68, 69, 70, 71, 0, 99, 0, 50,
	0, 0, 0, 0, 24, 0, 0, 0, 0, 0,
	0, 46, 82, 83, 35, 0, 95, 0, 26, 0,
	0, 0, 100, 25, 17, 16, 0, 18, 0, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 0, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 0, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 91, 87, 88, 89, 84,
	85, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 123, 90, 86, 102, 0, 57, 0, 31,
	13, 0, 0, 93, 96, 59, 60, 61, 62, 63,
	0, 0, 0, 0, 73, 74, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 54, 0, 0, 0, 0, 55, 0, 56, 51,
	52, 64, 65, 66, 67, 68, 69, 70, 71, 0,
	99, 0, 50, 0, 0, 0, 0, 24, 0, 0,
	0, 0, 0, 0, 46, 82, 83, 35, 0, 95,
	0, 26, 0, 0, 0, 100, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 0, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 0, 58, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 91, 87,
	88, 89, 84, 85, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 123, 90, 86, 102, 0,
	57, 0, 31, 13, 0, 0, 93, 96, 59, 60,
	61, 62, 63, 0, 0, 0, 0, 73, 74, 0,
	75, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 54, 0, 0, 0, 0, 55,
	0, 56, 51, 52, 64, 65, 66, 67, 68, 69,
	70, 71, 0, 99, 0, 50, 0, 0, 0, 0,
	24, 0, 0, 0, 0, 0, 0, 46, 82, 83,
	35, 0, 95, 0, 26, 0, 0, 0, 100, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 0, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 0,
	58, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 91, 87, 88, 89, 84, 85, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 123, 90,
	86, 102, 0, 57, 0, 31, 13, 0, 0, 93,
	96, 59, 60, 61, 62, 63, 0, 0, 0, 0,
	73, 74, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 53, 54, 0, 0,
	0, 0, 55, 0, 56, 51, 52, 64, 65, 66,
	67, 68, 69, 70, 71, 0, 99, 0, 50, 0,
	0, 0, 0, 24, 0, 0, 0, 0, 0, 0,
	46, 82, 83, 35, 0, 95, 0, 26, 0, 0,
	0, 100, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	0, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 0, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 0, 91, 87, 88, 89, 84, 85,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 123, 90, 86, 102, 0, 57, 0, 31, 13,
	0, 0, 93, 96, 59, 60, 61, 62, 63, 0,
	0, 0, 0, 73, 74, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	54, 0, 0, 0, 0, 55, 0, 56, 51, 52,
	64, 65, 66, 67, 68, 69, 70, 71, 0, 99,
	0, 50, 0, 0, 0, 0, 24, 0, 0, 0,
	0, 0, 0, 46, 82, 83, 35, 0, 95, 0,
	26, 0, 0, 0, 100, 25, 17, 16, 0, 18,
	0, 29, 0, 30, 0, 0, 19, 0, 0, 0,
	20, 21, 34, 0, 0, 22, 32, 0, 0, 33,
	0, 0, 23, 0, 28, 0, 58, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 0, 91, 87, 88,
	89, 84, 85, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 123, 90, 86, 102, 0, 57,
	0, 31, 13, 0, 0, 93, 96, 59, 60, 61,
	62, 63, 0, 0, 0, 0, 73, 74, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 54, 0, 0, 0, 0, 55, 0,
	56, 51, 52, 64, 65, 66, 67, 68, 69, 70,
	71, 0, 99, 0, 50, 0, 0, 0, 0, 24,
	0, 0, 0, 0, 0, 0, 46, 82, 83, 35,
	0, 95, 0, 26, 0, 0, 0, 100, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 0, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 0, 58,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 0,
	91, 87, 88, 89, 84, 85, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 123, 90, 86,
	102, 0, 57, 0, 31, 13, 0, 0, 93, 96,
	384, 385, 386, 387, 388, 0, 389, 390, 391, 427,
	428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 0, 397,
	398, 399, 378, 379, 380, 381, 382, 383, 395, 396,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 430, 431, 432, 433, 434, 422, 423, 424,
	425, 426, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 0, 442, 440, 441, 437, 438, 0,
	429, 435, 436, 443, 444, 446, 445, 447, 448, 384,
	385, 386, 387, 388, 0, 389, 390, 391, 427, 428,
	439, 450, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 0, 397, 398,
	399, 592, 593, 594, 591, 590, 589, 395, 396, 0,
	0, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 430, 431, 432, 433, 434, 422, 423, 424, 425,
	426, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 0, 442, 440, 441, 437, 438, 0, 429,
	435, 436, 443, 444, 446, 445, 447, 448, 0, 0,
	0, 0, 0, 59, 60, 61, 62, 63, 0, 439,
	450, 449, 73, 74, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 54,
	0, 0, 0, 0, 55, 0, 56, 51, 52, 64,
	65, 66, 67, 68, 69, 70, 71, 0, 99, 0,
	50, 0, 143, 145, 144, 128, 0, 0, 0, 0,
	0, 0, 0, 82, 83, 107, 0, 95, 0, 0,
	0, 0, 167, 100, 168, 141, 142, 146, 148, 147,
	160, 161, 158, 159, 162, 163, 164, 165, 166, 156,
	157, 150, 151, 149, 152, 154, 155, 59, 60, 61,
	62, 63, 0, 0, 0, 58, 73, 74, 0, 75,
	153, 0, 0, 255, 98, 0, 91, 87, 88, 89,
	84, 85, 0, 0, 0, 0, 0, 0, 92, 0,
	536, 0, 0, 123, 90, 86, 102, 0, 57, 0,
	0, 0, 53, 54, 93, 96, 0, 0, 55, 0,
	56, 51, 52, 64, 65, 66, 67, 68, 69, 70,
	71, 0, 99, 0, 50, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 82, 83, 107,
	0, 95, 0, 0, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 0,
	0, 59, 60, 61, 62, 63, 0, 0, 0, 58,
	73, 74, 0, 75, 0, 0, 0, 537, 98, 0,
	91, 87, 88, 89, 84, 85, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 123, 90, 86,
	102, 0, 57, 0, 0, 0, 53, 54, 93, 96,
	0, 0, 55, 0, 56, 51, 52, 64, 65, 66,
	67, 68, 69, 70, 71, 0, 99, 0, 50, 0,
	143, 145, 144, 128, 0, 0, 0, 0, 0, 0,
	0, 82, 83, 107, 461, 95, 0, 0, 0, 0,
	167, 100, 168, 141, 142, 146, 148, 147, 160, 161,
	158, 159, 162, 163, 164, 165, 166, 156, 157, 150,
	151, 149, 152, 154, 155, 59, 60, 61, 62, 63,
	0, 0, 0, 58, 73, 74, 0, 75, 153, 0,
	0, 0, 98, 0, 91, 87, 88, 89, 84, 85,
	0, 0, 0, 0, 0, 0, 92, 0, 348, 0,
	0, 123, 90, 86, 102, 0, 57, 0, 0, 0,
	53, 54, 93, 96, 0, 0, 55, 0, 56, 51,
	52, 64, 65, 66, 67, 68, 69, 70, 71, 0,
	99, 0, 50, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 82, 83, 107, 0, 95,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 0, 59,
	60, 61, 62, 63, 0, 0, 0, 58, 73, 74,
	0, 75, 0, 0, 0, 0, 98, 0, 91, 87,
	88, 89, 84, 85, 0, 0, 325, 0, 0, 0,
	92, 0, 0, 0, 0, 123, 90, 86, 102, 0,
	57, 0, 0, 0, 53, 54, 93, 96, 0, 0,
	55, 0, 56, 51, 52, 64, 65, 66, 67, 68,
	69, 70, 71, 0, 99, 0, 50, 0, 143, 145,
	144, 128, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 107, 0, 95, 0, 0, 0, 0, 167, 100,
	168, 141, 142, 146, 148, 147, 160, 161, 158, 159,
	162, 163, 164, 165, 166, 156, 157, 150, 151, 149,
	152, 154, 155, 59, 60, 61, 62, 63, 0, 0,
	0, 58, 73, 74, 0, 75, 153, 0, 0, 0,
	98, 0, 91, 87, 88, 89, 84, 85, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 123,
	90, 86, 102, 0, 57, 0, 0, 0, 53, 54,
	93, 96, 0, 0, 55, 0, 56, 51, 52, 64,
	65, 66, 67, 68, 69, 70, 71, 0, 99, 0,
	50, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 82, 83, 107, 0, 95, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 91, 87, 88, 89,
	84, 85, 0, 0, 0, 0, 0, 0, 92, 143,
	145, 144, 0, 123, 90, 86, 102, 0, 57, 0,
	0, 0, 0, 0, 93, 96, 0, 0, 0, 167,
	707, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 143, 145, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 167, 0, 168, 141, 142, 146,
	148, 147, 160, 161, 158, 159, 162, 163, 164, 165,
	166, 156, 157, 150, 151, 149, 152, 154, 155, 143,
	145, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 167,
	0, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 143, 145, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	708, 0, 0, 0, 167, 0, 168, 141, 142, 146,
	148, 147, 160, 161, 158, 159, 162, 163, 164, 165,
	166, 156, 157, 150, 151, 149, 152, 154, 155, 143,
	145, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 333, 0, 0, 0, 167,
	0, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 143, 145, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	140, 0, 0, 0, 167, 0, 168, 141, 142, 146,
	148, 147, 160, 161, 158, 159, 162, 163, 164, 165,
	166, 156, 157, 150, 151, 149, 152, 154, 155, 143,
	145, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 617, 0, 0, 0, 0, 167,
	0, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 143, 145, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 598,
	0, 0, 0, 0, 167, 0, 168, 141, 142, 146,
	148, 147, 160, 161, 158, 159, 162, 163, 164, 165,
	166, 156, 157, 150, 151, 149, 152, 154, 155, 143,
	145, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 597, 0, 0, 0, 0, 167,
	0, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 143, 145, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 520,
	0, 0, 0, 0, 167, 0, 168, 141, 142, 146,
	148, 147, 160, 161, 158, 159, 162, 163, 164, 165,
	166, 156, 157, 150, 151, 149, 152, 154, 155, 143,
	145, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 519, 0, 0, 0, 0, 167,
	0, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 143, 145, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 518,
	0, 0, 0, 0, 167, 0, 168, 141, 142, 146,
	148, 147, 160, 161, 158, 159, 162, 163, 164, 165,
	166, 156, 157, 150, 151, 149, 152, 154, 155, 143,
	145, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 516, 0, 0, 0, 0, 167,
	0, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 143, 145, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 491,
	0, 0, 0, 0, 167, 0, 168, 141, 142, 146,
	148, 147, 160, 161, 158, 159, 162, 163, 164, 165,
	166, 156, 157, 150, 151, 149, 152, 154, 155, 143,
	145, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 487, 0, 0, 0, 0, 167,
	496, 168, 141, 142, 146, 148, 147, 160, 161, 158,
	159, 162, 163, 164, 165, 166, 156, 157, 150, 151,
	149, 152, 154, 155, 0, 143, 145, 144, 0, 500,
	468, 0, 0, 0, 0, 0, 0, 153, 0, 369,
	0, 0, 0, 0, 0, 167, 0, 168, 141, 142,
	146, 148, 147, 160, 161, 158, 159, 162, 163, 164,
	165, 166, 156, 157, 150, 151, 149, 152, 154, 155,
	143, 145, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	167, 0, 168, 141, 142, 146, 148, 147, 160, 161,
	158, 159, 162, 163, 164, 165, 166, 156, 157, 150,
	151, 149, 152, 154, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153,
}
var yyPact = [...]int{

	-1000, -1000, 1215, -1000, -1000, -1000, -1000, -1000, -1000, 203,
	131, 335, 452, -1000, -1000, -1000, 202, 4433, 200, 196,
	5449, 5449, 5449, -38, 437, 5449, -1000, 5679, 195, 188,
	183, -1000, -42, 5449, 480, 564, 537, 399, 479, 477,
	476, 496, 552, 2491, -1000, -1000, 181, -1000, -1000, 319,
	5449, 138, 138, 5449, 5449, 5449, 5449, 5449, 177, 5449,
	5449, 174, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449,
	5449, 5449, -1000, 5449, 5449, 5449, -1000, -1000, -1000, 305,
	304, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 372, 407, -1000, -1000, -39, -1000, 172, 4879,
	-1000, 287, 418, 152, 418, -80, -1000, -1000, 123, 290,
	253, 346, 418, -1000, -1000, -1000, -1000, 251, -1000, 601,
	3292, 5449, 404, 283, 5449, 5449, 121, 6310, -1000, 119,
	117, 173, -1000, -1000, 125, -1000, 592, 115, -1000, 6310,
	-1000, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449,
	5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449,
	5449, 5449, 5449, 5449, 5449, 5449, 5449, 5335, 5449, 138,
	5449, 452, -1000, 5634, 97, -1000, 474, -1000, 470, -1000,
	333, -43, 342, 169, 4433, 166, 96, 562, 5221, 5449,
	5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449, 5449,
	5449, -1000, -1000, 5449, 15, -1000, -1000, 302, 286, 5449,
	-1000, -1000, -1000, 499, 499, 499, 499, 6129, 5449, 6310,
	6310, 5449, 6310, 6310, 499, 499, 499, 499, 499, 499,
	499, 499, 1200, 2136, 1200, 745, 745, 397, -1000, 366,
	-1000, 401, 5107, 138, 120, 392, 5449, -1000, 4879, -91,
	646, -1000, -1000, 6265, 138, 163, 469, 287, 94, 287,
	-1000, -1000, 1052, -1000, 93, 108, 331, 418, -1000, 280,
	90, 464, 317, -1000, -1000, 452, 5449, -1000, -1000, -1000,
	-1000, -1000, 6084, 161, 85, 645, 6310, 6039, -1000, -1000,
	-1000, -1000, -38, -1000, 437, 5449, -1000, 5449, 1647, 877,
	1367, 1200, 1037, 1808, 2293, 1968, 623, 623, 623, 499,
	499, 499, 499, 633, 633, 1379, 1379, 1379, 1379, 1379,
	1518, 1518, 1518, 1518, 6219, 5449, 1510, 641, -1000, -1000,
	6174, 282, 3129, -1000, -1000, 160, 333, 329, 270, -1000,
	-48, 270, 5449, -1000, 5449, -1000, -1000, 1200, 5449, 1200,
	1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
	1200, 5994, -1000, -1000, 5449, -1000, -38, -38, 5949, -1000,
	5904, 5859, 5449, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 490, 446,
	5398, 10, -67, -1000, 5170, 151, -1000, 4879, 4993, -1000,
	4879, -1000, -1000, 889, -1000, -1000, -1000, 86, 310, -1000,
	418, 259, 416, -1000, 54, -1000, 6310, 4270, 5449, 5449,
	5449, 74, -1000, -1000, 6310, -1000, 5449, 1510, 149, 138,
	284, 4107, -1000, 299, 329, -49, 270, -1000, 352, -1000,
	630, -1000, 5814, 5769, 2966, 2293, 3944, 4942, -1000, -1000,
	-1000, 1200, -102, -1000, -1000, 405, -1000, -1000, -1000, -1000,
	5449, -1000, -1000, -1000, -1000, 6310, 138, 158, 148, -1000,
	418, 18, 635, -1000, -1000, 418, 416, -1000, -1000, -1000,
	5724, 84, 6310, -1000, 83, 81, 1510, 77, -1000, 260,
	-1000, 138, 157, 4879, -1000, -1000, -1000, 365, 146, 637,
	-1000, 538, -1000, -1000, 327, -1000, -1000, -1000, -50, -1000,
	630, -1000, -1000, 431, 373, 270, 535, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 303, 270, 4433, 559, 76,
	-1000, -1000, -1000, -1000, -1000, 357, -1000, 4879, -1000, 632,
	-1000, 418, -69, 416, -1000, 635, 2803, 73, 5449, 70,
	-1000, 445, -1000, -1000, 3618, 284, -1000, 4879, -112, 2640,
	-1000, 154, -52, 554, 299, 205, -1000, -1000, -1000, 187,
	100, -1000, 589, 4596, 537, 50, -1000, -1000, -1000, -1000,
	-1000, -1000, 3455, -70, 145, -71, 418, 632, -1000, -1000,
	-72, 68, -1000, 142, -1000, 5449, 80, 7, 59, 398,
	-1000, -1000, -1000, 141, 134, -1000, 57, 270, -1000, -54,
	299, -1000, 432, -1000, 107, -1000, -1000, 431, 5449, 98,
	-1000, 583, 4596, -1000, -1000, 1517, 3455, -1000, -1000, -1000,
	-1000, -74, -1000, -1000, 3781, 5589, -1000, -1000, -1000, -1000,
	-1000, 45, 2477, 3618, -1000, -1000, 473, -1000, 2314, -1000,
	-1000, 579, -1000, -1000, 6310, -1000, 4596, 5449, 122, -1000,
	1378, -1000, -20, -24, 358, 388, 264, -1000, 283, -1000,
	-1000, -1000, -1000, -1000, -1000, 3455, -1000, -30, -1000, 91,
	270, -1000, 2151, 5449, -1000, 6310, 299, -1000, -1000, -1000,
	-1000, 270, 4735, 4596, 1988, 3455, -1000, -63, -1000, -1000,
	6310, 75, 630, -1000, -1000, 4596, -1000, -40, -1000, 554,
	-1000, -1000, 1825, -77, -1000, -1000, -1000, -1000, 1662, -1000,
}
var yyPgo = [...]int{

	0, 591, 785, 784, 15, 8, 783, 3, 781, 118,
	35, 95, 24, 778, 1, 777, 40, 36, 776, 2,
	13, 29, 4, 774, 16, 0, 773, 772, 86, 78,
	769, 765, 764, 763, 762, 19, 760, 748, 744, 46,
	656, 743, 44, 742, 37, 741, 41, 740, 33, 17,
	25, 31, 739, 735, 9, 53, 47, 733, 727, 726,
	725, 18, 724, 722, 720, 7, 719, 12, 718, 10,
	715, 6, 714, 711, 5, 710, 707, 705, 703, 698,
	697, 511, 106, 695, 693, 83, 80, 692, 45, 690,
	688, 635, 681, 673, 30, 28, 478, 20, 90, 48,
	668, 663, 662, 38, 32, 658, 14, 11,
}
var yyR1 = [...]int{

	0, 105, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 7, 7, 9, 9,
	10, 10, 10, 11, 11, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 91,
	91, 92, 92, 93, 93, 94, 94, 95, 95, 96,
	96, 97, 97, 98, 98, 99, 99, 14, 14, 13,
	13, 13, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 58, 58, 59, 59,
	60, 60, 55, 55, 56, 57, 57, 30, 30, 31,
	31, 32, 32, 33, 33, 34, 34, 35, 35, 36,
	36, 38, 38, 38, 38, 39, 39, 39, 107, 107,
	37, 37, 49, 49, 49, 49, 50, 51, 51, 52,
	52, 53, 53, 53, 53, 53, 53, 54, 54, 41,
	41, 42, 43, 43, 44, 44, 45, 45, 46, 47,
	47, 48, 106, 106, 16, 16, 15, 15, 1, 1,
	100, 101, 103, 103, 102, 102, 104, 104, 61, 61,
	62, 62, 62, 62, 71, 71, 72, 72, 72, 73,
	73, 74, 74, 75, 76, 76, 76, 76, 77, 77,
	78, 79, 79, 63, 63, 68, 68, 69, 70, 70,
	64, 64, 65, 65, 65, 65, 65, 65, 66, 66,
	67, 67, 17, 22, 22, 23, 23, 24, 24, 18,
	18, 4, 4, 2, 2, 3, 3, 20, 20, 21,
	21, 21, 19, 19, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 81, 81, 81, 81, 82, 82, 82,
	82, 82, 82, 82, 83, 83, 83, 83, 84, 84,
	84, 85, 85, 86, 87, 87, 87, 88, 88, 88,
	25, 25, 40, 40, 27, 28, 28, 28, 90, 90,
	90, 29, 29, 29, 89, 89,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 2, 0, 1, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 3, 4, 3, 1,
	1, 6, 7, 6, 7, 3, 1, 3, 1, 3,
	1, 1, 2, 1, 3, 1, 2, 2, 0, 1,
	1, 1, 3, 1, 1, 5, 7, 9, 5, 3,
	3, 3, 3, 3, 3, 1, 2, 6, 7, 9,
	5, 1, 6, 3, 3, 2, 0, 9, 1, 3,
	0, 4, 3, 1, 3, 1, 4, 5, 6, 1,
	3, 6, 7, 3, 6, 1, 4, 0, 1, 3,
	1, 3, 4, 4, 5, 0, 5, 4, 1, 1,
	1, 4, 1, 2, 4, 3, 1, 0, 1, 3,
	1, 3, 1, 4, 2, 6, 4, 1, 4, 3,
	1, 1, 3, 1, 1, 3, 3, 1, 1, 1,
	3, 1, 0, 1, 8, 7, 1, 2, 1, 1,
	5, 6, 0, 2, 0, 2, 0, 2, 2, 0,
	3, 4, 3, 9, 1, 3, 1, 2, 3, 1,
	2, 2, 2, 3, 3, 3, 4, 3, 1, 1,
	3, 1, 3, 1, 1, 3, 1, 3, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 3, 10, 1, 0, 1, 3, 4, 6, 0,
	1, 0, 1, 0, 1, 0, 1, 1, 2, 1,
	1, 1, 0, 2, 3, 4, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 4, 3, 4, 2, 2,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 1, 2, 4, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 3,
	3, 1, 1, 2, 2, 1, 2, 1, 4, 3,
	3, 3, 6, 3, 1, 1, 2, 1, 1, 3,
	3, 1, 1, 1, 1, 3, 1, 4, 3, 1,
	1, 1, 0, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 4, 2, 3, 3,
}
var yyChk = [...]int{

	-1000, -105, -11, -8, -12, -17, -16, -100, -101, 127,
	154, 120, 114, 162, -31, -33, 97, 96, 99, 106,
	110, 111, 115, 122, 76, 95, 90, -25, 124, 101,
	103, 161, 116, 119, 112, 86, 113, -15, 128, 129,
	130, -30, -32, -28, -26, -1, 83, -27, -89, -87,
	71, 58, 59, 49, 50, 55, 57, 159, 126, 4,
	5, 6, 7, 8, 60, 61, 62, 63, 64, 65,
	66, 67, -80, 13, 14, 16, 77, 78, -29, -85,
	-86, -88, 84, 85, 141, 142, 156, 138, 139, 140,
	155, 137, 149, 165, -84, 88, 166, -10, 135, 69,
	94, -9, 157, 159, 157, -9, 162, 86, -93, -91,
	-96, -9, 157, 113, 114, -99, -98, -55, -56, 86,
	-14, 159, -12, 154, 159, 159, -40, -25, 76, -40,
	-40, -41, -42, -29, -43, -44, 88, -45, -46, -25,
	161, 33, 34, 10, 12, 11, 35, 37, 36, 51,
	49, 50, 52, 68, 53, 54, 47, 48, 40, 41,
	38, 39, 42, 43, 44, 45, 46, 30, 32, 159,
	159, 159, 162, -25, 86, 31, -4, 37, 128, -1,
	86, 86, 86, 73, 74, 73, 75, 74, 17, 18,
	19, 20, 29, 21, 22, 23, 24, 25, 26, 27,
	28, 58, 59, 159, 133, -25, -28, -85, -86, 159,
	-88, -10, -28, -25, -25, -25, -25, -25, 159, -25,
	-25, 159, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, 153, 153, 93, 150, -81,
	-82, 88, 151, 152, -81, 93, 162, -29, 159, -50,
	-52, -51, -53, -25, 37, 134, 157, -9, 160, -9,
	161, 162, -11, 161, -92, -96, -9, 157, 161, 9,
	157, 105, -9, -98, 161, 9, 17, -13, 163, -12,
	-17, -16, -25, 97, -35, -36, -25, -25, 161, 161,
	161, 161, 9, 161, 9, 17, 161, 9, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, 31, -25, -47, -48, -28,
	-25, -55, -14, 161, 161, 86, 86, -103, 131, 162,
	-102, 131, 159, -12, 159, 161, 31, -25, 37, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -90, 86, 162, -29, 153, 153, -25, 160,
	-25, -25, 15, -7, -29, 86, -6, -5, 76, 77,
	78, 79, 80, 81, 4, 5, 6, 7, 8, 10,
	11, 12, 56, 70, 71, 82, 83, 73, 74, 75,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 111, 112, 113, 114, 115, 13, 14, 134,
	106, 107, 108, 109, 110, 135, 136, 131, 132, 154,
	129, 130, 128, 137, 138, 140, 139, 141, 142, 156,
	155, -7, -29, 150, -82, 150, -82, 93, 69, 133,
	-25, 87, -28, 165, -25, -50, 164, 9, 15, -28,
	159, 86, 161, -11, 163, 161, 161, 157, -9, -99,
	157, -9, 162, 86, 157, -56, -25, 160, 159, 161,
	9, 160, -42, -44, -25, -46, 31, -25, -106, 9,
	105, 160, 163, 159, -103, -104, 132, -10, -61, 162,
	-71, -10, -25, -25, -14, -25, 160, -25, 160, 160,
	160, -25, -83, 86, 89, 50, 88, 86, 163, 163,
	69, 163, 163, 160, -51, -25, 37, 134, -50, 163,
	162, 157, -94, -97, -98, -91, 162, -34, -12, 31,
	-25, -35, -25, -38, 162, 31, -25, 160, -48, -49,
	-28, 37, 134, 69, -57, -12, 31, -58, -22, -23,
	-24, -18, -20, -21, 30, -10, 135, 136, -104, 162,
	-71, 163, -62, -63, -70, 120, -64, 123, -65, 81,
	80, 79, 76, 77, 78, -61, 9, 160, 160, 75,
	-12, 31, 163, 164, 89, -25, -28, 159, 160, -95,
	-98, 162, -106, 9, -98, -94, -14, 160, 161, -39,
	161, -39, 161, 161, 160, 15, -28, 159, -50, -14,
	-60, 117, 118, 160, 9, -2, 37, -21, 162, -61,
	-66, -67, 88, 114, 113, -71, -65, 163, -10, -12,
	31, 161, -14, 164, -50, -106, 9, -95, 163, -97,
	-106, 98, 161, -35, 163, 108, 109, -39, 107, -39,
	-54, -12, 31, -49, -50, 164, 104, 159, 162, -19,
	31, -24, -3, 158, -61, 163, 161, 9, 17, -68,
	-69, -7, -4, -72, 161, 162, -14, 163, 160, 163,
	-98, -106, 163, 161, 160, -25, -107, 31, 161, 163,
	161, 107, -14, 160, 160, 161, -59, -10, -14, 162,
	-20, 88, 163, -67, -25, 161, 9, 17, -7, 163,
	-73, -74, -75, -76, -78, -77, -10, -7, 154, 86,
	163, -37, -12, 31, -107, -14, 161, 102, -54, 88,
	35, 163, -14, 17, -69, -25, 159, 163, -74, 161,
	161, 121, 105, 153, -14, -14, 161, 160, -10, 163,
	-25, -22, -71, 86, -5, -65, -7, 100, 162, 160,
	-7, 161, -14, -19, 163, -79, 161, 162, -14, 163,
}
var yyDef = [...]int{

	84, -2, 1, 83, 85, 86, 87, 88, 89, 0,
	0, 0, 0, 118, 123, 124, 0, 0, 0, 0,
	412, 412, 412, 0, 401, 0, 135, 0, 0, 0,
	0, 141, 0, 0, 0, 78, 281, 0, 0, 0,
	0, 159, 0, -2, 411, 216, 0, 415, 416, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 363, 0, 218, 219, 414, 0,
	0, -2, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 0, 382, 421, 0, -2, 0, 187,
	409, 80, 0, 0, 0, 0, 84, 78, 0, 0,
	0, 113, 0, 99, 100, 110, 115, 0, 153, 0,
	0, 0, 0, 0, 167, 0, 0, 413, 401, 0,
	0, 0, 200, 201, 0, 203, 204, 0, 207, 208,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 145, 0, 282, 0, 217,
	222, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 311, 0, 0, 296, -2, 0, 0, 0,
	406, 402, -2, 330, 331, 332, 333, 0, 0, 348,
	349, 0, 351, 352, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 364, 366, 0, 0, 0, 378, 0,
	385, 387, 0, 0, 0, 0, 0, 423, 187, 0,
	186, 190, 188, 192, 0, 0, 0, 81, 0, 82,
	91, 84, 0, 94, 0, 0, 113, 0, 96, 0,
	0, 0, 113, 116, 98, 0, 0, 117, 122, 119,
	120, 121, 0, 0, 0, 168, 170, 0, 129, 130,
	131, 132, 0, 133, 0, 0, 134, 0, 313, 314,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 324,
	325, 326, 327, 328, 329, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 0, 346, 212, 209, -2,
	0, 0, 0, 143, 144, 0, 222, 226, 0, 229,
	0, 0, 0, 160, 0, 163, 118, 294, 0, 297,
	298, 299, 300, 301, 302, 303, 304, 305, 306, 307,
	308, 0, 417, 418, 0, 420, 0, 0, 0, -2,
	0, 0, 0, 399, 424, 76, 77, 69, 70, 71,
	72, 73, 74, 75, 2, 3, 4, 5, 6, 7,
	8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 400, 425, 377, 386, 380, 383, 384, 0, 0,
	0, 0, 404, 379, 0, 0, 408, 187, 0, -2,
	187, 79, 90, 0, 93, 95, 97, 0, 113, 109,
	0, 113, 0, 114, 0, 152, 154, 0, 0, 167,
	0, 0, 199, 202, 205, 206, 0, 345, 0, 213,
	0, 0, 146, -2, 226, 0, 0, 223, 258, 229,
	225, 234, 0, 0, 0, 295, 0, 0, 405, 347,
	350, 365, 0, 394, 395, 0, 397, 389, 390, 391,
	0, 393, 422, 407, 189, 191, 0, 0, 0, 92,
	0, 0, 212, 106, 111, 0, 0, 125, 165, 118,
	0, 0, 169, 128, 175, 175, 344, 0, 210, 0,
	-2, 0, 0, 187, 140, 155, 118, 150, 0, 273,
	275, 283, 280, 287, 0, 289, 290, 291, 0, 229,
	227, 220, 228, 0, 0, 0, -2, 254, 260, 262,
	263, 264, 265, 266, 267, 258, 0, 0, 0, 0,
	157, 118, 419, 388, 396, 0, -2, 187, 196, 212,
	108, 0, 0, 213, 112, 212, 0, 0, 167, 0,
	175, 0, 175, 137, 0, 0, -2, 187, 0, 0,
	142, 0, 0, 292, 279, 285, 284, 288, 229, 258,
	0, 269, 270, 0, 281, 0, 261, 221, 235, 158,
	118, 164, 161, 0, 0, 0, 213, 212, 103, 105,
	0, 0, 126, 0, 171, 0, 0, 0, 0, 0,
	138, 197, 118, 0, 0, -2, 0, 0, 118, 0,
	0, 276, 0, 286, 258, 215, 230, 0, 0, 0,
	256, 0, 0, 232, 236, 0, 162, 392, 195, 101,
	107, 0, 104, 166, 0, 0, 118, 178, 179, 172,
	173, 0, 0, 0, 184, 156, 0, 148, 0, 118,
	293, 277, 214, 268, 271, 231, 0, 0, 0, 237,
	0, 239, 0, 0, 249, 0, 0, 248, 57, -2,
	102, 127, 180, 118, 118, 177, 174, 0, 139, 0,
	0, 151, 0, 0, 255, 257, -2, 238, 240, 241,
	242, 0, 0, 0, 0, 176, 198, 0, 149, 272,
	278, 0, 243, 244, 245, 247, 250, 0, 118, 292,
	246, 181, 0, 0, 147, 233, 251, 118, 0, 252,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 55, 165, 3, 166, 54, 37, 3,
	159, 160, 52, 49, 9, 50, 51, 53, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 31, 161,
	43, 17, 45, 30, 67, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 69, 3, 164, 36, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 35, 163, 57,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 10, 11, 12,
	13, 14, 15, 16, 18, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 32, 33, 34, 38,
	39, 40, 41, 42, 44, 46, 47, 48, 56, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 68, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			fmt.Println(yyDollar[1].node)
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.value = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.value = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.value = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.value = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.value = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.value = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.value = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.value = yyDollar[1].value
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.value = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.value = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.value = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.value = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.value = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.value = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:322
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].token)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].value)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.node = Node("NamespaceParts").append(Node(yyDollar[1].token))
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:328
		{
			yyVAL.node = yyDollar[1].node.append(Node(yyDollar[3].token))
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.node = Node("Name").append(yyDollar[1].node)
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:333
		{
			yyVAL.node = Node("Name").append(yyDollar[2].node).attribute("FullyQualified", "true")
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:334
		{
			yyVAL.node = Node("Name").append(yyDollar[3].node).attribute("Relative", "true")
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:338
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:339
		{
			yyVAL.node = Node("Statements")
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:344
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:346
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:347
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:348
		{
			yyVAL.node = Node("THaltCompiler")
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:349
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node)
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:351
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:352
		{
			yyVAL.node = Node("Namespace").append(yyDollar[3].node)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:353
		{
			yyVAL.node = yyDollar[2].node
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:354
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[2].node)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:355
		{
			yyVAL.node = yyDollar[2].node
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:356
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[2].node)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:357
		{
			yyVAL.node = yyDollar[2].node
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:361
		{
			yyVAL.node = Node("FuncUseType")
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:362
		{
			yyVAL.node = Node("ConstUseType")
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:367
		{
			yyVAL.node = Node("GroupUse").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 102:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:369
		{
			yyVAL.node = Node("GroupUse").append(yyDollar[2].node).append(yyDollar[5].node)
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:374
		{
			yyVAL.node = Node("MixedGroupUse").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:376
		{
			yyVAL.node = Node("MixedGroupUse").append(yyDollar[2].node).append(yyDollar[5].node)
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:381
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:382
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:386
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:390
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:391
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:394
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:395
		{
			yyVAL.node = yyDollar[2].node.append(yyDollar[1].node)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:398
		{
			yyVAL.node = Node("UseElem").append(yyDollar[1].node)
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:399
		{
			yyVAL.node = Node("UseElem").append(yyDollar[1].node).append(Node("as").attribute("value", yyDollar[3].token))
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:402
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:403
		{
			yyVAL.node = yyDollar[2].node
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:407
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:408
		{
			yyVAL.node = Node("stmt")
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:412
		{
			yyVAL.node = yyDollar[1].node
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:413
		{
			yyVAL.node = yyDollar[1].node
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:414
		{
			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:417
		{
			yyVAL.node = yyDollar[2].node
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:418
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:419
		{
			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:421
		{
			yyVAL.node = Node("While").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("stmt").append(yyDollar[5].node))
		}
	case 126:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:427
		{
			yyVAL.node = Node("DoWhile").
				append(Node("expr").append(yyDollar[5].node)).
				append(Node("stmt").append(yyDollar[2].node))
		}
	case 127:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:433
		{
			yyVAL.node = Node("For").
				append(Node("expr1").append(yyDollar[3].node)).
				append(Node("expr2").append(yyDollar[5].node)).
				append(Node("expr3").append(yyDollar[7].node)).
				append(Node("stmt").append(yyDollar[9].node))
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:440
		{
			yyVAL.node = Node("Switch").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:441
		{
			yyVAL.node = Node("Break").append(yyDollar[2].node)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:442
		{
			yyVAL.node = Node("Continue").append(yyDollar[2].node)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:443
		{
			yyVAL.node = Node("Return").append(yyDollar[2].node)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:444
		{
			yyVAL.node = yyDollar[2].node
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:445
		{
			yyVAL.node = yyDollar[2].node
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:446
		{
			yyVAL.node = yyDollar[2].node
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:447
		{
			yyVAL.node = Node("Echo").append(Node("InlineHtml").attribute("value", yyDollar[1].token))
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:448
		{
			yyVAL.node = yyDollar[1].node
		}
	case 137:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:450
		{
			yyVAL.node = Node("Unset").append(yyDollar[3].node)
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:452
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachVariable").append(yyDollar[5].node)).
				append(yyDollar[7].node)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:459
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachKey").append(yyDollar[5].node)).
				append(Node("ForeachVariable").append(yyDollar[7].node)).
				append(yyDollar[9].node)
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:466
		{
			yyVAL.node = Node("Declare").append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.node = Node("")
		}
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:469
		{
			yyVAL.node = Node("Try").
				append(yyDollar[3].node).
				append(yyDollar[5].node).
				append(yyDollar[6].node)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:475
		{
			yyVAL.node = Node("Throw").append(yyDollar[2].node)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:476
		{
			yyVAL.node = Node("GoTo").attribute("Label", yyDollar[2].token)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:477
		{
			yyVAL.node = Node("Label").attribute("name", yyDollar[1].token)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:480
		{
			yyVAL.node = Node("CatchList")
		}
	case 147:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:482
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[4].node).append(Node("Variable").attribute("name", yyDollar[5].token)).append(yyDollar[8].node)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:485
		{
			yyVAL.node = Node("CatchNameList").append(yyDollar[1].node)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:486
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:490
		{
			yyVAL.node = Node("")
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:491
		{
			yyVAL.node = Node("Finnaly").append(yyDollar[3].node)
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:495
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:496
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:500
		{
			yyVAL.node = Node("Const").attribute("name", yyDollar[1].token).append(yyDollar[3].node)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:504
		{
			yyVAL.node = yyDollar[1].node
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:505
		{
			yyVAL.node = yyDollar[2].node
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:510
		{
			yyVAL.node = Node("If").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[5].node))
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:514
		{
			yyVAL.node = yyDollar[1].node.append(Node("ElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[6].node)))
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:520
		{
			yyVAL.node = yyDollar[1].node
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:522
		{
			yyVAL.node = yyDollar[1].node.append(Node("Else").append(Node("stmt").append(yyDollar[3].node)))
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:529
		{
			yyVAL.node = Node("AltIf").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[6].node))
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:533
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[7].node)))
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:539
		{
			yyVAL.node = yyDollar[1].node
		}
	case 164:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:541
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElse").append(Node("stmt").append(yyDollar[4].node)))
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:547
		{
			yyVAL.node = yyDollar[1].node
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:548
		{
			yyVAL.node = yyDollar[2].node
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:552
		{
			yyVAL.node = Node("")
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.node = yyDollar[1].node
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:556
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.node = Node("ExpressionList").append(yyDollar[1].node)
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:561
		{
			yyVAL.node = yyDollar[2].node
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:562
		{
			yyVAL.node = yyDollar[3].node
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:563
		{
			yyVAL.node = yyDollar[2].node
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:564
		{
			yyVAL.node = yyDollar[3].node
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:568
		{
			yyVAL.node = Node("CaseList")
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:570
		{
			yyVAL.node = yyDollar[1].node.append(Node("Case").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node))
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:574
		{
			yyVAL.node = yyDollar[1].node.append(Node("Default").append(yyDollar[4].node))
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:585
		{
			yyVAL.node = yyDollar[1].node
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:586
		{
			yyVAL.node = yyDollar[2].node
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:590
		{
			yyVAL.node = yyDollar[1].node
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:591
		{
			yyVAL.node = Node("Ref").append(yyDollar[2].node)
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:592
		{
			yyVAL.node = Node("List").append(yyDollar[3].node)
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:593
		{
			yyVAL.node = Node("ShortList").append(yyDollar[2].node)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:597
		{ /* TODO: allow single trailing comma */
			yyVAL.node = yyDollar[1].node
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:601
		{
			yyVAL.node = Node("")
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:602
		{
			yyVAL.node = yyDollar[1].node
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:607
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:608
		{
			yyVAL.node = Node("ArrayPairList").append(yyDollar[1].node)
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:612
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:613
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node)
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:614
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(Node("Ref").append(yyDollar[4].node))
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:615
		{
			yyVAL.node = Node("ArrayElement").append(Node("Ref").append(yyDollar[2].node))
		}
	case 195:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:617
		{
			yyVAL.node = Node("ArrayElement").
				append(yyDollar[1].node).
				append(Node("ArrayList").append(yyDollar[5].node))
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:623
		{
			yyVAL.node = Node("ArrayElement").
				append(Node("ArrayList").append(yyDollar[3].node))
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:630
		{
			yyVAL.node = yyDollar[1].node
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:631
		{
			yyVAL.node = yyDollar[2].node
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:635
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:636
		{
			yyVAL.node = Node("GlobalVarList").append(yyDollar[1].node)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:640
		{
			yyVAL.node = yyDollar[1].node
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:644
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:645
		{
			yyVAL.node = Node("StaticVarList").append(yyDollar[1].node)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:649
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token)
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:650
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token).append(Node("expr").append(yyDollar[3].node))
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:654
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:655
		{
			yyVAL.node = Node("EchoList").append(yyDollar[1].node)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:659
		{
			yyVAL.node = Node("Echo").append(yyDollar[1].node)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:663
		{
			yyVAL.node = Node("UnsetVariablesList").append(yyDollar[1].node)
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:664
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:668
		{
			yyVAL.node = yyDollar[1].node
		}
	case 214:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:678
		{
			yyVAL.node = Node("Class").
				attribute("name", yyDollar[3].token).
				append(yyDollar[1].node).
				append(Node("Extends").append(yyDollar[4].node)).
				append(Node("Implements").append(yyDollar[5].node)).
				append(yyDollar[7].node)
		}
	case 215:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:687
		{
			yyVAL.node = Node("Class").
				attribute("name", yyDollar[2].token).
				append(Node("Extends").append(yyDollar[3].node)).
				append(Node("Implements").append(yyDollar[4].node)).
				append(yyDollar[6].node)
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:697
		{
			yyVAL.node = Node("Class").attribute(yyDollar[1].value, "true")
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:698
		{
			yyVAL.node = yyDollar[1].node.attribute(yyDollar[2].value, "true")
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:702
		{
			yyVAL.value = "abstract"
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:703
		{
			yyVAL.value = "final"
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:707
		{
			yyVAL.node = Node("Trait").attribute("name", yyDollar[2].token).append(yyDollar[4].node)
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:712
		{
			yyVAL.node = Node("Interface").
				attribute("name", yyDollar[2].token).
				append(Node("Extends").append(yyDollar[3].node)).
				append(yyDollar[5].node)
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:721
		{
			yyVAL.node = Node("")
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:722
		{
			yyVAL.node = yyDollar[2].node
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:726
		{
			yyVAL.node = Node("")
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:727
		{
			yyVAL.node = yyDollar[2].node
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:731
		{
			yyVAL.node = Node("")
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:732
		{
			yyVAL.node = yyDollar[2].node
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:736
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:737
		{
			yyVAL.node = Node("Stmt")
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:741
		{
			yyVAL.node = yyDollar[2].node.append(yyDollar[1].node)
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:742
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[1].node)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:743
		{
			yyVAL.node = Node("Use").append(yyDollar[2].node).append(yyDollar[3].node)
		}
	case 233:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:746
		{
			yyVAL.node = Node("Function").
				append(yyDollar[1].node).
				append(Node("name").append(yyDollar[4].node)).
				attribute("returns_ref", yyDollar[3].value).
				append(yyDollar[6].node).
				append(yyDollar[8].node).
				append(yyDollar[9].node)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:758
		{
			yyVAL.node = Node("NameList").append(yyDollar[1].node)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:759
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:763
		{
			yyVAL.node = Node("")
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:764
		{
			yyVAL.node = Node("")
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:765
		{
			yyVAL.node = yyDollar[2].node
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:769
		{
			yyVAL.node = Node("TraitAdaptionList").append(yyDollar[1].node)
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:770
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:774
		{
			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:775
		{
			yyVAL.node = yyDollar[1].node
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:780
		{
			yyVAL.node = Node("TraitPrecedence").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:784
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").attribute("value", yyDollar[3].token))
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:786
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").append(Node("reservedNonModifiers")))
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:788
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node).append(yyDollar[4].node)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:789
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:792
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:793
		{
			yyVAL.node = yyDollar[1].node
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:797
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:801
		{
			yyVAL.node = Node("")
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:802
		{
			yyVAL.node = yyDollar[2].node
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:806
		{
			yyVAL.node = yyDollar[1].node
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:807
		{
			yyVAL.node = Node("VarMemberModifier")
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:811
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:812
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:816
		{
			yyVAL.node = Node("Const").append(yyDollar[3].node)
		}
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:820
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:821
		{
			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:824
		{
			yyVAL.node = yyDollar[1].node
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:825
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:828
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:829
		{
			yyVAL.node = Node("ProtectedMemberModifier")
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:830
		{
			yyVAL.node = Node("PrivateMemberModifier")
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:831
		{
			yyVAL.node = Node("StaticMemberModifier")
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:832
		{
			yyVAL.node = Node("AbstractMemberModifier")
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:833
		{
			yyVAL.node = Node("FinalMemberModifier")
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:837
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:838
		{
			yyVAL.node = Node("PropertyList").append(yyDollar[1].node)
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:841
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token)
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:842
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token).append(Node("Default").append(yyDollar[3].node))
		}
	case 272:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:847
		{
			yyVAL.node = Node("Function").
				attribute("name", yyDollar[3].token).
				attribute("returns_ref", yyDollar[2].value).
				append(yyDollar[5].node).
				append(yyDollar[7].node).
				append(yyDollar[9].node)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:858
		{
			yyVAL.node = yyDollar[1].node
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:859
		{
			yyVAL.node = Node("Parameter list")
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:862
		{
			yyVAL.node = Node("Parameter list").append(yyDollar[1].node)
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:863
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:867
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token)
		}
	case 278:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:875
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token).
				append(yyDollar[6].node)
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:886
		{
			yyVAL.node = Node("No type")
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:887
		{
			yyVAL.node = yyDollar[1].node
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:891
		{
			yyVAL.value = "false"
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:892
		{
			yyVAL.value = "true"
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:896
		{
			yyVAL.value = "false"
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:897
		{
			yyVAL.value = "true"
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:901
		{
			yyVAL.value = "false"
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:902
		{
			yyVAL.value = "true"
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:906
		{
			yyVAL.node = yyDollar[1].node
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:907
		{
			yyVAL.node = yyDollar[2].node
			yyVAL.node.attribute("nullable", "true")
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:911
		{
			yyVAL.node = yyDollar[1].node
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:912
		{
			yyVAL.node = Node("array type")
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:913
		{
			yyVAL.node = Node("callable type")
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:917
		{
			yyVAL.node = Node("No return type")
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:918
		{
			yyVAL.node = yyDollar[2].node
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:922
		{
			yyVAL.node = Node("Assign").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:923
		{
			yyVAL.node = Node("AssignRef").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:924
		{
			yyVAL.node = Node("Clone").append(yyDollar[2].node)
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:925
		{
			yyVAL.node = Node("AssignAdd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:926
		{
			yyVAL.node = Node("AssignSub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:927
		{
			yyVAL.node = Node("AssignMul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:928
		{
			yyVAL.node = Node("AssignPow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:929
		{
			yyVAL.node = Node("AssignDiv").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:930
		{
			yyVAL.node = Node("AssignConcat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:931
		{
			yyVAL.node = Node("AssignMod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:932
		{
			yyVAL.node = Node("AssignAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:933
		{
			yyVAL.node = Node("AssignOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:934
		{
			yyVAL.node = Node("AssignXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:935
		{
			yyVAL.node = Node("AssignShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:936
		{
			yyVAL.node = Node("AssignShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:937
		{
			yyVAL.node = Node("PostIncrement").append(yyDollar[1].node)
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:938
		{
			yyVAL.node = Node("PreIncrement").append(yyDollar[2].node)
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:939
		{
			yyVAL.node = Node("PostDecrement").append(yyDollar[1].node)
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:940
		{
			yyVAL.node = Node("PreDecrement").append(yyDollar[2].node)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:941
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:942
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:943
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:944
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:945
		{
			yyVAL.node = Node("Xor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:946
		{
			yyVAL.node = Node("BitwiseOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:947
		{
			yyVAL.node = Node("BitwiseAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:948
		{
			yyVAL.node = Node("BitwiseXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:949
		{
			yyVAL.node = Node("Concat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:950
		{
			yyVAL.node = Node("Add").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:951
		{
			yyVAL.node = Node("Sub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:952
		{
			yyVAL.node = Node("Mul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:953
		{
			yyVAL.node = Node("Pow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:954
		{
			yyVAL.node = Node("Div").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:955
		{
			yyVAL.node = Node("Mod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:956
		{
			yyVAL.node = Node("ShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:957
		{
			yyVAL.node = Node("ShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:958
		{
			yyVAL.node = Node("UnaryPlus").append(yyDollar[2].node)
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:959
		{
			yyVAL.node = Node("UnaryMinus").append(yyDollar[2].node)
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:960
		{
			yyVAL.node = Node("BooleanNot").append(yyDollar[2].node)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:961
		{
			yyVAL.node = Node("BitwiseNot").append(yyDollar[2].node)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:962
		{
			yyVAL.node = Node("Identical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:963
		{
			yyVAL.node = Node("NotIdentical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:964
		{
			yyVAL.node = Node("Equal").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:965
		{
			yyVAL.node = Node("NotEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:966
		{
			yyVAL.node = Node("Spaceship").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:967
		{
			yyVAL.node = Node("Smaller").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:968
		{
			yyVAL.node = Node("SmallerOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:969
		{
			yyVAL.node = Node("Greater").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:970
		{
			yyVAL.node = Node("GreaterOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:971
		{
			yyVAL.node = yyDollar[2].node
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:972
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:973
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:974
		{
			yyVAL.node = Node("Coalesce").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:975
		{
			yyVAL.node = Node("Empty").append(yyDollar[3].node)
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:976
		{
			yyVAL.node = Node("Include").append(yyDollar[2].node)
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:977
		{
			yyVAL.node = Node("IncludeOnce").append(yyDollar[2].node)
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:978
		{
			yyVAL.node = Node("Eval").append(yyDollar[3].node)
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:979
		{
			yyVAL.node = Node("Require").append(yyDollar[2].node)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:980
		{
			yyVAL.node = Node("RequireOnce").append(yyDollar[2].node)
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:981
		{
			yyVAL.node = Node("CastInt").append(yyDollar[2].node)
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:982
		{
			yyVAL.node = Node("CastDouble").append(yyDollar[2].node)
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:983
		{
			yyVAL.node = Node("CastString").append(yyDollar[2].node)
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:984
		{
			yyVAL.node = Node("CastArray").append(yyDollar[2].node)
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:985
		{
			yyVAL.node = Node("CastObject").append(yyDollar[2].node)
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:986
		{
			yyVAL.node = Node("CastBool").append(yyDollar[2].node)
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:987
		{
			yyVAL.node = Node("CastUnset").append(yyDollar[2].node)
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:988
		{
			yyVAL.node = Node("Silence").append(yyDollar[2].node)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:989
		{
			yyVAL.node = yyDollar[1].node
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:990
		{
			yyVAL.node = Node("Print").append(yyDollar[2].node)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:991
		{
			yyVAL.node = Node("Yield")
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:992
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node)
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:993
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:994
		{
			yyVAL.node = Node("YieldFrom").append(yyDollar[2].node)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:998
		{
			yyVAL.node = Node("Scalar").append(Node("Lnumber").attribute("value", yyDollar[1].token))
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:999
		{
			yyVAL.node = Node("Scalar").append(Node("Dnumber").attribute("value", yyDollar[1].token))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.node = Node("Scalar").append(Node("__LINE__"))
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1001
		{
			yyVAL.node = Node("Scalar").append(Node("__FILE__"))
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.node = Node("Scalar").append(Node("__DIR__"))
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1003
		{
			yyVAL.node = Node("Scalar").append(Node("__TRAIT__"))
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.node = Node("Scalar").append(Node("__METHOD__"))
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.node = Node("Scalar").append(Node("__FUNCTION__"))
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.node = Node("Scalar").append(Node("__NAMESPACE__"))
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1007
		{
			yyVAL.node = Node("Scalar").append(Node("__CLASS__"))
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc").attribute("value", yyDollar[2].token))
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1011
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc"))
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.node = yyDollar[2].node
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1013
		{
			yyVAL.node = yyDollar[2].node
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.node = yyDollar[1].node
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1015
		{
			yyVAL.node = yyDollar[1].node
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1019
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.node = yyDollar[1].node.append(Node("String").attribute("value", yyDollar[2].token))
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1021
		{
			yyVAL.node = Node("EncapsList").append(yyDollar[1].node)
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.node = Node("EncapsList").append(Node("String").attribute("value", yyDollar[1].token)).append(yyDollar[2].node)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1025
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token)
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token).append(Node("offset").append(yyDollar[3].node))
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1027
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token).append(Node("property").attribute("value", yyDollar[3].token))
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.node = Node("Variable").append(Node("expr").append(yyDollar[2].node))
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1029
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token)
		}
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1031
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token).append(Node("offset").append(yyDollar[4].node))
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.node = yyDollar[2].node
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1035
		{
			yyVAL.node = Node("OffsetString").attribute("value", yyDollar[1].token)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.node = Node("OffsetNumString").attribute("value", yyDollar[1].token)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1037
		{
			yyVAL.node = Node("OffsetNegateNumString").attribute("value", yyDollar[2].token)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.node = Node("OffsetVariable").attribute("value", yyDollar[1].token)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1043
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1045
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1049
		{
			yyVAL.node = Node("Static")
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.node = yyDollar[1].node
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.node = yyDollar[1].node
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.node = yyDollar[1].node
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1059
		{
			yyVAL.node = yyDollar[2].node
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1060
		{
			yyVAL.node = yyDollar[1].node
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.node = yyDollar[3].node
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1065
		{
			yyVAL.node = yyDollar[2].node
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1066
		{
			yyVAL.node = Node("String").attribute("value", yyDollar[1].token)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1071
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1075
		{
			yyVAL.node = Node("")
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.node = yyDollar[1].node
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.node = yyDollar[1].node
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1085
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1086
		{
			yyVAL.node = Node("Property").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.node = Node("PropertyName").attribute("value", yyDollar[1].token)
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1091
		{
			yyVAL.node = yyDollar[2].node
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.node = Node("Variable").attribute("name", yyDollar[1].token)
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1097
		{
			yyVAL.node = Node("Variable").append(yyDollar[3].node)
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.node = Node("Variable").append(yyDollar[2].node)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1103
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1105
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	}
	goto yystack /* stack new state and value */
}
