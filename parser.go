//line parser.y:2
package main

import __yyfmt__ "fmt"

//line parser.y:2
import (
	"bytes"
	"fmt"
	"io"
	"os"
)

type node struct {
	name       string
	children   []node
	attributes map[string]string
}

func (n node) String() string {
	buf := new(bytes.Buffer)
	n.print(buf, " ")
	return buf.String()
}

func (n node) print(out io.Writer, indent string) {
	if len(n.attributes) > 0 {
		fmt.Fprintf(out, "\n%v%v %s", indent, n.name, n.attributes)
	} else {
		fmt.Fprintf(out, "\n%v%v", indent, n.name)
	}
	for _, nn := range n.children {
		nn.print(out, indent+"  ")
	}
}

func Node(name string) node {
	return node{name: name, attributes: make(map[string]string)}
}

func (n node) append(nn ...node) node {
	n.children = append(n.children, nn...)
	return n
}

func (n node) attribute(key string, value string) node {
	n.attributes[key] = value
	return n
}

//line parser.y:50
type yySymType struct {
	yys   int
	node  node
	token string
	value string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EVAL = 57348
const T_REQUIRE = 57349
const T_REQUIRE_ONCE = 57350
const T_LOGICAL_OR = 57351
const T_LOGICAL_XOR = 57352
const T_LOGICAL_AND = 57353
const T_PRINT = 57354
const T_YIELD = 57355
const T_DOUBLE_ARROW = 57356
const T_YIELD_FROM = 57357
const T_PLUS_EQUAL = 57358
const T_MINUS_EQUAL = 57359
const T_MUL_EQUAL = 57360
const T_DIV_EQUAL = 57361
const T_CONCAT_EQUAL = 57362
const T_MOD_EQUAL = 57363
const T_AND_EQUAL = 57364
const T_OR_EQUAL = 57365
const T_XOR_EQUAL = 57366
const T_SL_EQUAL = 57367
const T_SR_EQUAL = 57368
const T_POW_EQUAL = 57369
const T_COALESCE = 57370
const T_BOOLEAN_OR = 57371
const T_BOOLEAN_AND = 57372
const T_IS_EQUAL = 57373
const T_IS_NOT_EQUAL = 57374
const T_IS_IDENTICAL = 57375
const T_IS_NOT_IDENTICAL = 57376
const T_SPACESHIP = 57377
const T_IS_SMALLER_OR_EQUAL = 57378
const T_IS_GREATER_OR_EQUAL = 57379
const T_SL = 57380
const T_SR = 57381
const T_INSTANCEOF = 57382
const T_INC = 57383
const T_DEC = 57384
const T_INT_CAST = 57385
const T_DOUBLE_CAST = 57386
const T_STRING_CAST = 57387
const T_ARRAY_CAST = 57388
const T_OBJECT_CAST = 57389
const T_BOOL_CAST = 57390
const T_UNSET_CAST = 57391
const T_POW = 57392
const T_NEW = 57393
const T_CLONE = 57394
const T_NOELSE = 57395
const T_ELSEIF = 57396
const T_ELSE = 57397
const T_ENDIF = 57398
const T_STATIC = 57399
const T_ABSTRACT = 57400
const T_FINAL = 57401
const T_PRIVATE = 57402
const T_PROTECTED = 57403
const T_PUBLIC = 57404
const T_EXIT = 57405
const T_IF = 57406
const T_LNUMBER = 57407
const T_DNUMBER = 57408
const T_STRING = 57409
const T_STRING_VARNAME = 57410
const T_VARIABLE = 57411
const T_NUM_STRING = 57412
const T_INLINE_HTML = 57413
const T_CHARACTER = 57414
const T_BAD_CHARACTER = 57415
const T_ENCAPSED_AND_WHITESPACE = 57416
const T_CONSTANT_ENCAPSED_STRING = 57417
const T_ECHO = 57418
const T_DO = 57419
const T_WHILE = 57420
const T_ENDWHILE = 57421
const T_FOR = 57422
const T_ENDFOR = 57423
const T_FOREACH = 57424
const T_ENDFOREACH = 57425
const T_DECLARE = 57426
const T_ENDDECLARE = 57427
const T_AS = 57428
const T_SWITCH = 57429
const T_ENDSWITCH = 57430
const T_CASE = 57431
const T_DEFAULT = 57432
const T_BREAK = 57433
const T_CONTINUE = 57434
const T_GOTO = 57435
const T_FUNCTION = 57436
const T_CONST = 57437
const T_RETURN = 57438
const T_TRY = 57439
const T_CATCH = 57440
const T_FINALLY = 57441
const T_THROW = 57442
const T_USE = 57443
const T_INSTEADOF = 57444
const T_GLOBAL = 57445
const T_VAR = 57446
const T_UNSET = 57447
const T_ISSET = 57448
const T_EMPTY = 57449
const T_HALT_COMPILER = 57450
const T_CLASS = 57451
const T_TRAIT = 57452
const T_INTERFACE = 57453
const T_EXTENDS = 57454
const T_IMPLEMENTS = 57455
const T_OBJECT_OPERATOR = 57456
const T_LIST = 57457
const T_ARRAY = 57458
const T_CALLABLE = 57459
const T_CLASS_C = 57460
const T_TRAIT_C = 57461
const T_METHOD_C = 57462
const T_FUNC_C = 57463
const T_LINE = 57464
const T_FILE = 57465
const T_COMMENT = 57466
const T_DOC_COMMENT = 57467
const T_OPEN_TAG = 57468
const T_OPEN_TAG_WITH_ECHO = 57469
const T_CLOSE_TAG = 57470
const T_WHITESPACE = 57471
const T_START_HEREDOC = 57472
const T_END_HEREDOC = 57473
const T_DOLLAR_OPEN_CURLY_BRACES = 57474
const T_CURLY_OPEN = 57475
const T_PAAMAYIM_NEKUDOTAYIM = 57476
const T_NAMESPACE = 57477
const T_NS_C = 57478
const T_DIR = 57479
const T_NS_SEPARATOR = 57480
const T_ELLIPSIS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"','",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_PRINT",
	"T_YIELD",
	"T_DOUBLE_ARROW",
	"T_YIELD_FROM",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"'?'",
	"':'",
	"T_COALESCE",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"'&'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_SPACESHIP",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'+'",
	"'-'",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"T_INSTANCEOF",
	"'~'",
	"T_INC",
	"T_DEC",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"'@'",
	"T_POW",
	"'['",
	"T_NEW",
	"T_CLONE",
	"T_NOELSE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"'('",
	"')'",
	"';'",
	"'{'",
	"'}'",
	"']'",
	"'\"'",
	"'$'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:1007
const src = `<?php
namespace test {
    $a = [
        'test' => [
            'a' => 'b',
        ]
    ];
}

`

func main() {
	yyDebug = 0
	yyErrorVerbose = true
	l := newLexer(bytes.NewBufferString(src), os.Stdout, "file.name")
	yyParse(l)
}

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 37,
	133, 372,
	153, 372,
	-2, 378,
	-1, 75,
	133, 374,
	153, 374,
	-2, 349,
	-1, 91,
	153, 370,
	-2, 366,
	-1, 187,
	133, 372,
	153, 372,
	-2, 278,
	-1, 193,
	133, 372,
	153, 372,
	-2, 280,
	-1, 282,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 302,
	-1, 283,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 303,
	-1, 284,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 304,
	-1, 285,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 305,
	-1, 286,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 306,
	-1, 287,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 307,
	-1, 288,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 308,
	-1, 289,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 309,
	-1, 290,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 310,
	-1, 296,
	133, 372,
	153, 372,
	-2, 187,
	-1, 334,
	133, 373,
	153, 373,
	-2, 311,
	-1, 434,
	133, 372,
	153, 372,
	-2, 170,
	-1, 458,
	160, 242,
	-2, 247,
	-1, 502,
	133, 372,
	153, 372,
	-2, 158,
	-1, 528,
	88, 221,
	-2, 227,
	-1, 546,
	133, 372,
	153, 372,
	-2, 169,
	-1, 559,
	133, 372,
	153, 372,
	-2, 159,
	-1, 600,
	133, 376,
	153, 376,
	-2, 161,
	-1, 659,
	105, 76,
	-2, 78,
	-1, 675,
	160, 242,
	-2, 247,
}

const yyPrivate = 57344

const yyLast = 6293

var yyAct = [...]int{

	23, 103, 614, 604, 530, 512, 342, 651, 577, 613,
	595, 626, 573, 516, 514, 159, 251, 110, 110, 110,
	501, 460, 122, 517, 230, 295, 299, 72, 232, 121,
	156, 247, 246, 552, 5, 4, 91, 248, 118, 115,
	6, 590, 591, 75, 89, 186, 105, 116, 194, 195,
	196, 197, 198, 2, 200, 201, 600, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 543, 213, 214,
	215, 431, 479, 74, 705, 706, 221, 621, 480, 617,
	497, 697, 192, 192, 328, 645, 89, 89, 639, 191,
	191, 241, 242, 627, 234, 610, 629, 603, 590, 591,
	459, 306, 155, 264, 700, 249, 685, 679, 253, 254,
	261, 678, 534, 535, 536, 533, 532, 531, 228, 189,
	189, 73, 90, 665, 635, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 285, 286, 287, 288, 289,
	290, 291, 293, 589, 297, 243, 527, 301, 102, 529,
	329, 227, 630, 37, 90, 90, 478, 188, 188, 259,
	312, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	323, 324, 325, 623, 587, 326, 582, 558, 556, 192,
	555, 333, 553, 551, 455, 442, 191, 698, 308, 571,
	335, 437, 310, 336, 303, 257, 256, 503, 255, 187,
	193, 496, 686, 330, 634, 633, 624, 518, 622, 338,
	416, 566, 675, 628, 425, 548, 189, 499, 429, 99,
	234, 618, 619, 482, 101, 239, 602, 644, 560, 505,
	547, 458, 441, 222, 339, 417, 111, 609, 422, 435,
	309, 307, 93, 608, 430, 263, 102, 102, 89, 111,
	99, 192, 260, 447, 94, 122, 229, 202, 191, 102,
	199, 89, 192, 102, 188, 5, 4, 94, 184, 191,
	154, 6, 153, 152, 108, 107, 104, 116, 98, 238,
	682, 332, 331, 450, 448, 419, 438, 421, 189, 445,
	446, 217, 421, 419, 504, 92, 223, 224, 461, 189,
	462, 216, 222, 463, 464, 102, 296, 422, 92, 185,
	428, 258, 520, 521, 106, 106, 222, 96, 96, 190,
	466, 226, 557, 680, 423, 574, 90, 106, 470, 681,
	96, 106, 190, 250, 96, 454, 188, 564, 565, 90,
	534, 535, 536, 533, 532, 531, 544, 188, 95, 339,
	417, 576, 575, 222, 520, 521, 222, 100, 218, 631,
	590, 591, 300, 641, 420, 223, 224, 222, 669, 119,
	126, 128, 127, 106, 70, 71, 96, 220, 427, 223,
	224, 593, 590, 591, 527, 476, 436, 529, 424, 434,
	150, 305, 151, 124, 125, 129, 131, 130, 143, 144,
	141, 142, 145, 146, 147, 148, 149, 139, 140, 133,
	134, 132, 135, 137, 138, 219, 223, 224, 418, 223,
	224, 668, 304, 234, 484, 161, 234, 523, 136, 102,
	223, 224, 492, 253, 494, 163, 157, 474, 164, 165,
	498, 166, 168, 167, 160, 237, 136, 510, 240, 493,
	487, 483, 534, 535, 536, 533, 532, 531, 569, 605,
	5, 4, 581, 490, 311, 225, 6, 158, 500, 672,
	545, 522, 509, 472, 646, 475, 473, 507, 611, 192,
	192, 39, 456, 549, 262, 519, 191, 191, 540, 617,
	133, 134, 132, 135, 137, 138, 234, 135, 137, 138,
	562, 139, 140, 133, 134, 132, 135, 137, 138, 136,
	109, 567, 192, 136, 452, 162, 189, 189, 443, 191,
	561, 554, 136, 579, 584, 432, 451, 1, 112, 113,
	192, 327, 570, 583, 42, 43, 88, 191, 234, 471,
	66, 704, 253, 654, 655, 519, 653, 652, 650, 189,
	616, 234, 526, 612, 578, 572, 528, 525, 588, 524,
	580, 563, 585, 636, 188, 188, 511, 189, 506, 598,
	298, 233, 606, 620, 231, 599, 294, 592, 120, 594,
	596, 625, 615, 117, 114, 192, 495, 660, 252, 632,
	489, 11, 191, 36, 519, 638, 10, 188, 35, 41,
	38, 513, 643, 515, 33, 244, 296, 502, 647, 640,
	97, 3, 657, 642, 341, 188, 607, 568, 664, 0,
	0, 0, 189, 0, 0, 0, 0, 663, 0, 637,
	0, 671, 519, 0, 667, 0, 0, 674, 0, 546,
	0, 0, 0, 657, 648, 673, 656, 661, 677, 0,
	0, 0, 0, 0, 683, 684, 596, 559, 349, 350,
	351, 352, 353, 689, 354, 355, 356, 392, 393, 0,
	188, 690, 0, 0, 0, 695, 694, 656, 693, 691,
	0, 0, 0, 0, 0, 0, 0, 699, 0, 701,
	0, 0, 702, 0, 0, 0, 687, 0, 707, 0,
	0, 0, 519, 0, 0, 0, 0, 578, 0, 0,
	357, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 359, 0, 362, 363, 364,
	343, 344, 345, 346, 347, 348, 360, 361, 0, 0,
	340, 0, 89, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	395, 396, 397, 398, 399, 387, 388, 389, 390, 391,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 407, 405, 406, 402, 403, 0, 394, 400,
	401, 408, 409, 411, 410, 412, 413, 349, 350, 351,
	352, 353, 0, 354, 355, 356, 392, 393, 404, 415,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	90, 151, 124, 125, 129, 131, 130, 143, 144, 141,
	142, 145, 146, 147, 148, 149, 139, 140, 133, 134,
	132, 135, 137, 138, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 358, 359, 0, 362, 363, 364, 343,
	344, 345, 346, 347, 348, 360, 361, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 395,
	396, 397, 398, 399, 387, 388, 389, 390, 391, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 407, 405, 406, 402, 403, 0, 394, 400, 401,
	408, 409, 411, 410, 412, 413, 349, 350, 351, 352,
	353, 127, 354, 355, 356, 392, 393, 658, 415, 414,
	96, 0, 0, 0, 0, 0, 676, 0, 0, 150,
	0, 151, 124, 125, 129, 131, 130, 143, 144, 141,
	142, 145, 146, 147, 148, 149, 139, 140, 133, 134,
	132, 135, 137, 138, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 358, 359, 0, 362, 363, 364, 343, 344,
	345, 346, 347, 348, 360, 361, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 395, 396,
	397, 398, 399, 387, 388, 389, 390, 391, 376, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	407, 405, 406, 402, 403, 0, 394, 400, 401, 408,
	409, 411, 410, 412, 413, 0, 0, 0, 0, 0,
	0, 53, 54, 55, 56, 57, 658, 415, 414, 96,
	67, 68, 0, 69, 0, 649, 0, 151, 124, 125,
	129, 131, 130, 143, 144, 141, 142, 145, 146, 147,
	148, 149, 139, 140, 133, 134, 132, 135, 137, 138,
	0, 0, 0, 0, 0, 0, 47, 48, 0, 0,
	0, 0, 49, 136, 50, 45, 46, 58, 59, 60,
	61, 62, 63, 64, 65, 0, 93, 0, 44, 0,
	0, 0, 0, 20, 70, 71, 0, 0, 0, 0,
	40, 76, 77, 31, 0, 89, 0, 22, 0, 0,
	0, 94, 21, 13, 12, 0, 14, 0, 25, 0,
	26, 0, 0, 15, 0, 0, 0, 16, 17, 30,
	32, 0, 18, 28, 0, 0, 29, 0, 0, 19,
	0, 24, 0, 52, 7, 34, 0, 0, 0, 0,
	0, 0, 92, 0, 85, 81, 82, 83, 78, 79,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 8, 84, 80, 96, 0, 51, 0, 27, 9,
	488, 0, 87, 90, 53, 54, 55, 56, 57, 0,
	0, 0, 0, 67, 68, 0, 69, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	48, 136, 0, 0, 0, 49, 0, 50, 45, 46,
	58, 59, 60, 61, 62, 63, 64, 65, 0, 93,
	0, 44, 0, 0, 0, 0, 20, 70, 71, 0,
	0, 0, 0, 40, 76, 77, 31, 0, 89, 0,
	22, 0, 0, 0, 94, 21, 13, 12, 0, 14,
	0, 25, 0, 26, 0, 0, 15, 0, 0, 0,
	16, 17, 30, 32, 0, 18, 28, 0, 0, 29,
	0, 0, 19, 0, 24, 0, 52, 7, 34, 0,
	0, 0, 0, 0, 0, 92, 0, 85, 81, 82,
	83, 78, 79, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 8, 84, 80, 96, 0, 51,
	0, 27, 9, 439, 0, 87, 90, 53, 54, 55,
	56, 57, 0, 0, 0, 0, 67, 68, 0, 69,
	0, 129, 131, 130, 143, 144, 141, 142, 145, 146,
	147, 148, 149, 139, 140, 133, 134, 132, 135, 137,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 48, 136, 0, 0, 0, 49, 0,
	50, 45, 46, 58, 59, 60, 61, 62, 63, 64,
	65, 0, 93, 0, 44, 0, 0, 0, 0, 20,
	70, 71, 0, 0, 0, 0, 40, 76, 77, 31,
	0, 89, 0, 22, 0, 0, 0, 94, 21, 13,
	12, 0, 14, 0, 25, 0, 26, 0, 0, 15,
	0, 0, 0, 16, 17, 30, 32, 0, 18, 28,
	0, 0, 29, 0, 0, 19, 0, 24, 0, 52,
	0, 34, 0, 0, 0, 0, 0, 0, 92, 0,
	85, 81, 82, 83, 78, 79, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 106, 84, 80,
	96, 0, 51, 0, 27, 9, 708, 0, 87, 90,
	53, 54, 55, 56, 57, 0, 0, 0, 0, 67,
	68, 0, 69, 0, 0, 131, 130, 143, 144, 141,
	142, 145, 146, 147, 148, 149, 139, 140, 133, 134,
	132, 135, 137, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 48, 136, 0, 0,
	0, 49, 0, 50, 45, 46, 58, 59, 60, 61,
	62, 63, 64, 65, 0, 93, 0, 44, 0, 0,
	0, 0, 20, 70, 71, 0, 0, 0, 0, 40,
	76, 77, 31, 0, 89, 0, 22, 0, 0, 0,
	94, 21, 13, 12, 0, 14, 0, 25, 0, 26,
	0, 0, 15, 0, 0, 0, 16, 17, 30, 32,
	0, 18, 28, 0, 0, 29, 0, 0, 19, 0,
	24, 0, 52, 0, 34, 0, 0, 0, 0, 0,
	0, 92, 0, 85, 81, 82, 83, 78, 79, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	106, 84, 80, 96, 0, 51, 0, 27, 9, 703,
	0, 87, 90, 53, 54, 55, 56, 57, 0, 0,
	0, 0, 67, 68, 0, 69, 130, 143, 144, 141,
	142, 145, 146, 147, 148, 149, 139, 140, 133, 134,
	132, 135, 137, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 47, 48,
	0, 0, 0, 0, 49, 0, 50, 45, 46, 58,
	59, 60, 61, 62, 63, 64, 65, 0, 93, 0,
	44, 0, 0, 0, 0, 20, 70, 71, 0, 0,
	0, 0, 40, 76, 77, 31, 0, 89, 0, 22,
	0, 0, 0, 94, 21, 13, 12, 0, 14, 696,
	25, 0, 26, 0, 0, 15, 0, 0, 0, 16,
	17, 30, 32, 0, 18, 28, 0, 0, 29, 0,
	0, 19, 0, 24, 0, 52, 0, 34, 0, 0,
	0, 0, 0, 0, 92, 0, 85, 81, 82, 83,
	78, 79, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 106, 84, 80, 96, 0, 51, 0,
	27, 9, 337, 0, 87, 90, 53, 54, 55, 56,
	57, 0, 0, 0, 0, 67, 68, 150, 69, 151,
	124, 125, 129, 131, 130, 143, 144, 141, 142, 145,
	146, 147, 148, 149, 139, 140, 133, 134, 132, 135,
	137, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 48, 0, 0, 136, 0, 49, 0, 50,
	45, 46, 58, 59, 60, 61, 62, 63, 64, 65,
	0, 93, 0, 44, 0, 0, 0, 0, 20, 70,
	71, 0, 0, 0, 0, 40, 76, 77, 31, 0,
	89, 0, 22, 0, 0, 0, 94, 21, 13, 12,
	0, 14, 0, 25, 0, 26, 0, 0, 15, 0,
	0, 0, 16, 17, 30, 32, 0, 18, 28, 0,
	0, 29, 0, 0, 19, 0, 24, 0, 52, 0,
	34, 0, 0, 0, 0, 0, 0, 92, 0, 85,
	81, 82, 83, 78, 79, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 106, 84, 80, 96,
	0, 51, 0, 27, 9, 688, 0, 87, 90, 53,
	54, 55, 56, 57, 0, 0, 0, 0, 67, 68,
	0, 69, 143, 144, 141, 142, 145, 146, 147, 148,
	149, 139, 140, 133, 134, 132, 135, 137, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 47, 48, 0, 0, 0, 0,
	49, 0, 50, 45, 46, 58, 59, 60, 61, 62,
	63, 64, 65, 0, 93, 0, 44, 0, 0, 0,
	0, 20, 70, 71, 0, 0, 0, 0, 40, 76,
	77, 31, 0, 89, 0, 22, 0, 0, 0, 94,
	21, 13, 12, 0, 14, 0, 25, 0, 26, 0,
	0, 15, 0, 0, 0, 16, 17, 30, 32, 0,
	18, 28, 0, 0, 29, 0, 0, 19, 0, 24,
	0, 52, 0, 34, 0, 0, 0, 0, 0, 0,
	92, 0, 85, 81, 82, 83, 78, 79, 0, 0,
	0, 0, 0, 0, 86, 0, 0, 0, 0, 106,
	84, 80, 96, 0, 51, 0, 27, 9, 670, 0,
	87, 90, 53, 54, 55, 56, 57, 0, 0, 0,
	0, 67, 68, 0, 69, 146, 147, 148, 149, 139,
	140, 133, 134, 132, 135, 137, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 47, 48, 0,
	0, 0, 0, 49, 0, 50, 45, 46, 58, 59,
	60, 61, 62, 63, 64, 65, 0, 93, 0, 44,
	0, 0, 0, 0, 20, 70, 71, 0, 0, 0,
	0, 40, 76, 77, 31, 0, 89, 0, 22, 0,
	0, 0, 94, 21, 13, 12, 0, 14, 0, 25,
	666, 26, 0, 0, 15, 0, 0, 0, 16, 17,
	30, 32, 0, 18, 28, 0, 0, 29, 0, 0,
	19, 0, 24, 0, 52, 0, 34, 0, 0, 0,
	0, 0, 0, 92, 0, 85, 81, 82, 83, 78,
	79, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 106, 84, 80, 96, 0, 51, 0, 27,
	9, 0, 0, 87, 90, 53, 54, 55, 56, 57,
	0, 0, 0, 0, 67, 68, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 170, 171, 172, 174, 175, 176, 177,
	178, 179, 180, 181, 173, 0, 0, 0, 0, 0,
	47, 48, 0, 0, 0, 0, 49, 0, 50, 45,
	46, 58, 59, 60, 61, 62, 63, 64, 65, 0,
	93, 0, 44, 182, 183, 0, 0, 20, 70, 71,
	0, 0, 0, 0, 40, 76, 77, 31, 0, 89,
	0, 22, 0, 0, 0, 94, 21, 13, 12, 0,
	14, 0, 25, 0, 26, 601, 0, 15, 0, 0,
	0, 16, 17, 30, 32, 0, 18, 28, 0, 0,
	29, 0, 0, 19, 0, 24, 0, 52, 0, 34,
	0, 0, 0, 0, 0, 0, 92, 0, 85, 81,
	82, 83, 78, 79, 0, 0, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 106, 84, 80, 96, 0,
	51, 0, 27, 9, 0, 0, 87, 90, 53, 54,
	55, 56, 57, 0, 0, 0, 0, 67, 68, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 47, 48, 0, 0, 0, 0, 49,
	0, 50, 45, 46, 58, 59, 60, 61, 62, 63,
	64, 65, 0, 93, 0, 44, 0, 0, 0, 0,
	20, 70, 71, 0, 0, 0, 0, 40, 76, 77,
	31, 0, 89, 0, 22, 0, 0, 0, 94, 21,
	13, 12, 586, 14, 0, 25, 0, 26, 0, 0,
	15, 0, 0, 0, 16, 17, 30, 32, 0, 18,
	28, 0, 0, 29, 0, 0, 19, 0, 24, 0,
	52, 0, 34, 0, 0, 0, 0, 0, 0, 92,
	0, 85, 81, 82, 83, 78, 79, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 106, 84,
	80, 96, 0, 51, 0, 27, 9, 0, 0, 87,
	90, 53, 54, 55, 56, 57, 0, 0, 0, 0,
	67, 68, 0, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 47, 48, 0, 0,
	0, 0, 49, 0, 50, 45, 46, 58, 59, 60,
	61, 62, 63, 64, 65, 0, 93, 0, 44, 0,
	0, 0, 539, 20, 70, 71, 0, 0, 0, 0,
	40, 76, 77, 31, 0, 89, 0, 22, 0, 0,
	0, 94, 21, 13, 12, 0, 14, 0, 25, 0,
	26, 0, 0, 15, 0, 0, 0, 16, 17, 30,
	32, 0, 18, 28, 0, 0, 29, 0, 0, 19,
	0, 24, 0, 52, 0, 34, 0, 0, 0, 0,
	0, 0, 92, 0, 85, 81, 82, 83, 78, 79,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 106, 84, 80, 96, 0, 51, 0, 27, 9,
	0, 0, 87, 90, 53, 54, 55, 56, 57, 0,
	0, 0, 0, 67, 68, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	48, 0, 0, 0, 0, 49, 0, 50, 45, 46,
	58, 59, 60, 61, 62, 63, 64, 65, 0, 93,
	0, 44, 0, 0, 0, 0, 20, 70, 71, 0,
	0, 0, 0, 40, 76, 77, 31, 0, 89, 0,
	22, 0, 0, 0, 94, 21, 13, 12, 0, 14,
	0, 25, 0, 26, 0, 0, 15, 0, 0, 0,
	16, 17, 30, 32, 0, 18, 28, 0, 0, 29,
	0, 0, 19, 0, 24, 0, 52, 0, 34, 0,
	0, 0, 0, 0, 0, 92, 0, 85, 81, 82,
	83, 78, 79, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 106, 84, 80, 96, 0, 51,
	0, 27, 9, 457, 0, 87, 90, 53, 54, 55,
	56, 57, 0, 0, 0, 0, 67, 68, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 48, 0, 0, 0, 0, 49, 0,
	50, 45, 46, 58, 59, 60, 61, 62, 63, 64,
	65, 0, 93, 0, 44, 0, 0, 0, 0, 20,
	70, 71, 0, 0, 0, 0, 40, 76, 77, 31,
	0, 89, 0, 22, 0, 0, 0, 94, 21, 13,
	12, 0, 14, 0, 25, 0, 26, 0, 0, 15,
	0, 0, 0, 16, 17, 30, 32, 0, 18, 28,
	0, 0, 29, 0, 0, 19, 0, 24, 0, 52,
	0, 34, 0, 0, 0, 0, 0, 0, 92, 0,
	85, 81, 82, 83, 78, 79, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 106, 84, 80,
	96, 0, 51, 0, 27, 9, 245, 0, 87, 90,
	53, 54, 55, 56, 57, 0, 0, 0, 0, 67,
	68, 0, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 48, 0, 0, 0,
	0, 49, 0, 50, 45, 46, 58, 59, 60, 61,
	62, 63, 64, 65, 0, 93, 0, 44, 0, 0,
	0, 0, 20, 70, 71, 0, 0, 0, 0, 40,
	76, 77, 31, 0, 89, 0, 22, 0, 0, 0,
	94, 21, 13, 12, 0, 14, 0, 25, 0, 26,
	0, 0, 15, 0, 0, 0, 16, 17, 30, 32,
	0, 18, 28, 0, 0, 29, 0, 0, 19, 0,
	24, 0, 52, 7, 34, 0, 0, 0, 0, 0,
	0, 92, 0, 85, 81, 82, 83, 78, 79, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	8, 84, 80, 96, 0, 51, 0, 27, 9, 0,
	0, 87, 90, 53, 54, 55, 56, 57, 0, 0,
	0, 0, 67, 68, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 48,
	0, 0, 0, 0, 49, 0, 50, 45, 46, 58,
	59, 60, 61, 62, 63, 64, 65, 0, 93, 0,
	44, 0, 0, 0, 0, 20, 70, 71, 0, 0,
	0, 0, 40, 76, 77, 31, 0, 89, 0, 22,
	0, 0, 0, 94, 21, 13, 12, 0, 14, 0,
	25, 0, 26, 0, 0, 15, 0, 0, 0, 16,
	17, 30, 32, 0, 18, 28, 0, 0, 29, 0,
	0, 19, 0, 24, 0, 52, 0, 34, 0, 0,
	0, 0, 0, 0, 92, 0, 85, 81, 82, 83,
	78, 79, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 106, 84, 80, 96, 0, 51, 0,
	27, 9, 0, 0, 87, 90, 53, 54, 55, 56,
	57, 0, 0, 0, 0, 67, 68, 0, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 48, 0, 0, 0, 0, 49, 0, 50,
	45, 46, 58, 59, 60, 61, 62, 63, 64, 65,
	0, 93, 0, 44, 0, 0, 0, 0, 20, 0,
	0, 0, 0, 0, 0, 40, 76, 77, 31, 0,
	89, 0, 22, 0, 0, 0, 94, 21, 13, 12,
	0, 14, 0, 25, 0, 26, 0, 0, 15, 0,
	0, 0, 16, 17, 30, 0, 0, 18, 28, 0,
	0, 29, 0, 0, 19, 0, 24, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 0, 85,
	81, 82, 83, 78, 79, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 106, 84, 80, 96,
	0, 51, 0, 27, 9, 0, 0, 87, 90, 53,
	54, 55, 56, 57, 0, 0, 0, 0, 67, 68,
	0, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 48, 0, 0, 0, 0,
	49, 0, 50, 45, 46, 58, 59, 60, 61, 62,
	63, 64, 65, 0, 93, 0, 44, 0, 0, 0,
	0, 20, 0, 0, 0, 0, 0, 0, 40, 76,
	77, 31, 0, 89, 0, 22, 0, 0, 0, 94,
	21, 13, 12, 0, 14, 0, 25, 0, 26, 0,
	0, 15, 0, 0, 0, 16, 17, 30, 0, 0,
	18, 28, 0, 0, 29, 0, 0, 19, 0, 24,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 0, 85, 81, 82, 83, 78, 79, 0, 0,
	0, 0, 0, 0, 86, 0, 0, 0, 0, 106,
	84, 80, 96, 0, 51, 0, 27, 9, 0, 0,
	87, 90, 53, 54, 55, 56, 57, 0, 0, 0,
	0, 67, 68, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 47, 48, 0,
	0, 0, 0, 49, 0, 50, 45, 46, 58, 59,
	60, 61, 62, 63, 64, 65, 0, 93, 0, 44,
	0, 0, 0, 0, 20, 0, 0, 0, 0, 0,
	0, 40, 76, 77, 31, 0, 89, 0, 22, 0,
	0, 0, 94, 21, 13, 12, 0, 14, 0, 25,
	0, 26, 0, 0, 15, 0, 0, 0, 16, 17,
	30, 0, 0, 18, 28, 0, 0, 29, 0, 0,
	19, 0, 24, 0, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 0, 85, 81, 82, 83, 78,
	79, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 106, 84, 80, 96, 0, 51, 0, 27,
	9, 0, 0, 87, 90, 53, 54, 55, 56, 57,
	0, 0, 0, 0, 67, 68, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	47, 48, 0, 0, 0, 0, 49, 0, 50, 45,
	46, 58, 59, 60, 61, 62, 63, 64, 65, 0,
	93, 0, 44, 0, 0, 0, 0, 20, 0, 0,
	0, 0, 0, 0, 40, 76, 77, 31, 0, 89,
	0, 22, 0, 0, 0, 94, 21, 13, 12, 0,
	14, 0, 25, 0, 26, 0, 0, 15, 0, 0,
	0, 16, 17, 30, 0, 0, 18, 28, 0, 0,
	29, 0, 0, 19, 0, 24, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 0, 85, 81,
	82, 83, 78, 79, 0, 0, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 106, 84, 80, 96, 0,
	51, 0, 27, 9, 0, 0, 87, 90, 53, 54,
	55, 56, 57, 0, 0, 0, 0, 67, 68, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 47, 48, 0, 0, 0, 0, 49,
	0, 50, 45, 46, 58, 59, 60, 61, 62, 63,
	64, 65, 0, 93, 0, 44, 0, 0, 0, 0,
	20, 0, 0, 0, 0, 0, 0, 40, 76, 77,
	31, 0, 89, 0, 22, 0, 0, 0, 94, 21,
	13, 12, 0, 14, 0, 25, 0, 26, 0, 0,
	15, 0, 0, 0, 16, 17, 30, 0, 0, 18,
	28, 0, 0, 29, 0, 0, 19, 0, 24, 0,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	0, 85, 81, 82, 83, 78, 79, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 106, 84,
	80, 96, 0, 51, 0, 27, 9, 0, 0, 87,
	90, 53, 54, 55, 56, 57, 0, 0, 0, 0,
	67, 68, 0, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 47, 48, 0, 0,
	0, 0, 49, 0, 50, 45, 46, 58, 59, 60,
	61, 62, 63, 64, 65, 0, 93, 0, 44, 0,
	0, 0, 0, 20, 0, 0, 0, 0, 0, 0,
	40, 76, 77, 31, 0, 89, 0, 22, 0, 0,
	0, 94, 21, 13, 12, 0, 14, 0, 25, 0,
	26, 0, 0, 15, 0, 0, 0, 16, 17, 30,
	0, 0, 18, 28, 0, 0, 29, 0, 0, 19,
	0, 24, 0, 52, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 85, 81, 82, 83, 78, 79,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 106, 84, 80, 96, 0, 51, 0, 27, 9,
	128, 127, 87, 90, 349, 350, 351, 352, 353, 0,
	354, 355, 356, 392, 393, 0, 0, 0, 0, 150,
	0, 151, 124, 125, 129, 131, 130, 143, 144, 141,
	142, 145, 146, 147, 148, 149, 139, 140, 133, 134,
	132, 135, 137, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 359, 0, 362, 363, 364, 343, 344, 345, 346,
	347, 348, 360, 361, 0, 0, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 395, 396, 397, 398,
	399, 387, 388, 389, 390, 391, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 407, 405,
	406, 402, 403, 0, 394, 400, 401, 408, 409, 411,
	410, 412, 413, 349, 350, 351, 352, 353, 0, 354,
	355, 356, 392, 393, 404, 415, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	359, 0, 362, 363, 364, 534, 535, 536, 533, 532,
	531, 360, 361, 0, 0, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 395, 396, 397, 398, 399,
	387, 388, 389, 390, 391, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 407, 405, 406,
	402, 403, 0, 394, 400, 401, 408, 409, 411, 410,
	412, 413, 0, 0, 0, 0, 0, 53, 54, 55,
	56, 57, 0, 404, 415, 414, 67, 68, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 48, 0, 0, 0, 0, 49, 0,
	50, 45, 46, 58, 59, 60, 61, 62, 63, 64,
	65, 0, 93, 0, 44, 0, 126, 128, 127, 111,
	0, 0, 0, 0, 0, 0, 0, 76, 77, 102,
	0, 89, 0, 0, 0, 0, 150, 94, 151, 124,
	125, 129, 131, 130, 143, 144, 141, 142, 145, 146,
	147, 148, 149, 139, 140, 133, 134, 132, 135, 137,
	138, 53, 54, 55, 56, 57, 0, 0, 0, 52,
	67, 68, 0, 69, 136, 0, 0, 236, 92, 0,
	85, 81, 82, 83, 78, 79, 0, 0, 0, 0,
	0, 0, 86, 0, 485, 0, 0, 106, 84, 80,
	96, 0, 51, 0, 0, 0, 47, 48, 87, 90,
	0, 0, 49, 0, 50, 45, 46, 58, 59, 60,
	61, 62, 63, 64, 65, 0, 93, 0, 44, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 76, 77, 102, 0, 89, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 53, 54, 55, 56, 57,
	0, 0, 0, 52, 67, 68, 0, 69, 0, 0,
	0, 486, 92, 0, 85, 81, 82, 83, 78, 79,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 106, 84, 80, 96, 0, 51, 0, 0, 0,
	47, 48, 87, 90, 0, 0, 49, 0, 50, 45,
	46, 58, 59, 60, 61, 62, 63, 64, 65, 0,
	93, 0, 44, 0, 126, 128, 127, 111, 0, 0,
	0, 0, 0, 0, 0, 76, 77, 102, 426, 89,
	0, 0, 0, 0, 150, 94, 151, 124, 125, 129,
	131, 130, 143, 144, 141, 142, 145, 146, 147, 148,
	149, 139, 140, 133, 134, 132, 135, 137, 138, 53,
	54, 55, 56, 57, 0, 0, 0, 52, 67, 68,
	0, 69, 136, 0, 0, 0, 92, 0, 85, 81,
	82, 83, 78, 79, 0, 0, 0, 0, 0, 0,
	86, 0, 313, 0, 0, 106, 84, 80, 96, 0,
	51, 0, 0, 0, 47, 48, 87, 90, 0, 0,
	49, 0, 50, 45, 46, 58, 59, 60, 61, 62,
	63, 64, 65, 0, 93, 0, 44, 0, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 76,
	77, 102, 0, 89, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 0,
	0, 0, 0, 53, 54, 55, 56, 57, 0, 0,
	0, 52, 67, 68, 0, 69, 0, 0, 0, 0,
	92, 0, 85, 81, 82, 83, 78, 79, 0, 0,
	292, 0, 0, 0, 86, 0, 0, 0, 0, 106,
	84, 80, 96, 0, 51, 0, 0, 0, 47, 48,
	87, 90, 0, 0, 49, 0, 50, 45, 46, 58,
	59, 60, 61, 62, 63, 64, 65, 0, 93, 0,
	44, 0, 126, 128, 127, 111, 0, 0, 0, 0,
	0, 0, 0, 76, 77, 102, 0, 89, 0, 0,
	0, 0, 150, 94, 151, 124, 125, 129, 131, 130,
	143, 144, 141, 142, 145, 146, 147, 148, 149, 139,
	140, 133, 134, 132, 135, 137, 138, 53, 54, 55,
	56, 57, 0, 0, 0, 52, 67, 68, 0, 69,
	136, 0, 0, 0, 92, 0, 85, 81, 82, 83,
	78, 79, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 106, 84, 80, 96, 0, 51, 0,
	0, 0, 47, 48, 87, 90, 0, 0, 49, 0,
	50, 45, 46, 58, 59, 60, 61, 62, 63, 64,
	65, 0, 93, 0, 44, 0, 0, 0, 0, 111,
	0, 0, 0, 0, 0, 0, 0, 76, 77, 102,
	0, 89, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 0,
	85, 81, 82, 83, 78, 79, 0, 0, 0, 0,
	0, 0, 86, 126, 128, 127, 0, 106, 84, 80,
	96, 0, 51, 0, 0, 0, 0, 0, 87, 90,
	0, 0, 0, 150, 627, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 126, 128,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 150, 0,
	151, 124, 125, 129, 131, 130, 143, 144, 141, 142,
	145, 146, 147, 148, 149, 139, 140, 133, 134, 132,
	135, 137, 138, 126, 128, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 150, 0, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 126, 128,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 628, 0, 0, 0, 150, 0,
	151, 124, 125, 129, 131, 130, 143, 144, 141, 142,
	145, 146, 147, 148, 149, 139, 140, 133, 134, 132,
	135, 137, 138, 126, 128, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 302,
	0, 0, 0, 150, 0, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 126, 128,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 123, 0, 0, 0, 150, 0,
	151, 124, 125, 129, 131, 130, 143, 144, 141, 142,
	145, 146, 147, 148, 149, 139, 140, 133, 134, 132,
	135, 137, 138, 126, 128, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 550, 0,
	0, 0, 0, 150, 0, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 126, 128,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 538, 0, 0, 0, 0, 150, 0,
	151, 124, 125, 129, 131, 130, 143, 144, 141, 142,
	145, 146, 147, 148, 149, 139, 140, 133, 134, 132,
	135, 137, 138, 126, 128, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 537, 0,
	0, 0, 0, 150, 0, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 126, 128,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 469, 0, 0, 0, 0, 150, 0,
	151, 124, 125, 129, 131, 130, 143, 144, 141, 142,
	145, 146, 147, 148, 149, 139, 140, 133, 134, 132,
	135, 137, 138, 126, 128, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 468, 0,
	0, 0, 0, 150, 0, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 126, 128,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 467, 0, 0, 0, 0, 150, 0,
	151, 124, 125, 129, 131, 130, 143, 144, 141, 142,
	145, 146, 147, 148, 149, 139, 140, 133, 134, 132,
	135, 137, 138, 126, 128, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 465, 0,
	0, 0, 0, 150, 0, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 126, 128,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 444, 0, 0, 0, 0, 150, 0,
	151, 124, 125, 129, 131, 130, 143, 144, 141, 142,
	145, 146, 147, 148, 149, 139, 140, 133, 134, 132,
	135, 137, 138, 126, 128, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 440, 0,
	0, 0, 0, 150, 449, 151, 124, 125, 129, 131,
	130, 143, 144, 141, 142, 145, 146, 147, 148, 149,
	139, 140, 133, 134, 132, 135, 137, 138, 0, 126,
	128, 127, 0, 453, 433, 0, 0, 0, 0, 0,
	0, 136, 0, 334, 0, 0, 0, 0, 0, 150,
	0, 151, 124, 125, 129, 131, 130, 143, 144, 141,
	142, 145, 146, 147, 148, 149, 139, 140, 133, 134,
	132, 135, 137, 138, 126, 128, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 150, 0, 151, 124, 125, 129,
	131, 130, 143, 144, 141, 142, 145, 146, 147, 148,
	149, 139, 140, 133, 134, 132, 135, 137, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136,
}
var yyPact = [...]int{

	-1000, -1000, 3206, -1000, -1000, -1000, -1000, 129, 72, -1000,
	-1000, -1000, 127, 4347, 126, 125, 5363, 5363, 5363, -44,
	291, 5363, -1000, 5593, 124, 123, 121, -1000, -60, 5363,
	360, 446, 417, 307, 359, 375, 378, 2405, -1000, -1000,
	119, -1000, -1000, 186, 5363, 183, 183, 5363, 5363, 5363,
	5363, 5363, 111, 5363, 5363, 108, 5363, 5363, 5363, 5363,
	5363, 5363, 5363, 5363, 5363, 5363, -1000, 5363, 5363, 5363,
	-1000, -1000, -1000, 158, 148, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 275, 238, -1000, -1000,
	-1, -1000, 107, 4793, -1000, -1000, 353, 132, 75, 353,
	-70, -1000, -1000, 3043, 5363, 246, 103, 5363, 5363, 47,
	6224, -1000, 45, 44, 160, -1000, -1000, 101, -1000, 477,
	94, -1000, 6224, -1000, 5363, 5363, 5363, 5363, 5363, 5363,
	5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363,
	5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363,
	5249, 5363, 183, 5363, 286, -1000, 5548, 43, -1000, 346,
	-1000, 315, -1000, -61, 92, 4347, 91, 41, 443, 5135,
	5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363, 5363,
	5363, 5363, -1000, -1000, 5363, -2, -1000, -1000, 139, 138,
	5363, -1000, -1000, -1000, 388, 388, 388, 388, 6043, 5363,
	6224, 6224, 5363, 6224, 6224, 388, 388, 388, 388, 388,
	388, 388, 388, 799, 1887, 799, 664, 664, 278, -1000,
	224, -1000, 265, 5021, 183, 155, 289, 5363, -1000, 4793,
	-93, 526, -1000, -1000, 6179, 183, 90, -1000, 310, 40,
	-1000, -1000, -1000, 1250, -1000, -1000, -1000, -1000, -1000, 5998,
	83, 34, 519, 6224, 5953, -1000, -1000, -1000, -1000, -44,
	-1000, 291, 5363, -1000, 5363, 1233, 1396, 4499, 799, 939,
	1559, 2044, 1719, 455, 455, 455, 388, 388, 388, 388,
	451, 451, 2202, 2202, 2202, 2202, 2202, 464, 464, 464,
	464, 6133, 5363, 1075, 515, -1000, -1000, 6088, 185, -1000,
	475, 2880, -1000, -1000, 82, -62, -1000, 5363, -1000, 5363,
	-1000, -1000, 799, 5363, 799, 799, 799, 799, 799, 799,
	799, 799, 799, 799, 799, 799, 5908, -1000, -1000, 5363,
	-1000, -44, -44, 5863, -1000, 5818, 5773, 5363, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 397, 309, 5312, 3, -85, -1000, 5084,
	73, -1000, 4793, 4907, -1000, 4793, -1000, -1000, 1087, -1000,
	4184, 5363, 5363, 5363, 49, -1000, -1000, 6224, -1000, 5363,
	1075, 67, 183, 170, 4021, 286, 5363, -1000, 187, -1000,
	274, 5728, 5683, 2717, 2044, 3858, 4856, -1000, -1000, -1000,
	799, -97, -1000, -1000, 267, -1000, -1000, -1000, -1000, 5363,
	-1000, -1000, -1000, -1000, 6224, 183, 81, 65, -1000, -1000,
	-1000, -1000, 5638, 32, 6224, -1000, 31, 29, 1075, 27,
	-1000, 172, -1000, 183, 79, 4793, -1000, -1000, -1000, -1000,
	6224, 230, 61, 512, -1000, 431, -1000, -1000, 229, -1000,
	-1000, -1000, 36, -1000, -1000, 247, 248, 171, 386, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4347, 441, 25,
	-1000, -1000, -1000, -1000, -1000, 370, -1000, 4793, -1000, 2554,
	23, 5363, -10, -1000, 284, -1000, -1000, 3532, 170, -1000,
	4793, -108, 2391, -1000, 77, -65, 438, 187, 95, -1000,
	-1000, -1000, 86, -1000, 471, 4510, 417, 70, -1000, -1000,
	-1000, -1000, -1000, 3369, -86, 58, 22, -1000, 56, -1000,
	5363, 62, -67, 1, 262, -1000, -1000, -1000, 55, 54,
	-1000, -37, 171, -1000, -74, 187, -1000, 285, -1000, -1000,
	247, 5363, 76, -1000, 467, 4510, -1000, 171, -1000, 942,
	3369, -1000, -1000, -1000, 3695, 5503, -1000, -1000, -1000, -1000,
	-1000, -38, 2228, 3532, -1000, -1000, 343, -1000, 2065, -1000,
	-1000, 462, -1000, 6224, -1000, 4510, 5363, 63, -1000, -1000,
	803, -1000, -50, -54, 212, 234, 137, -1000, 103, -1000,
	-1000, -1000, -1000, -1000, 3369, -1000, -55, -1000, 52, 171,
	-1000, 1902, 5363, -1000, 6224, 187, -1000, -1000, -1000, -1000,
	171, 4649, 4510, 1739, 3369, -1000, -81, -1000, -1000, 6224,
	37, 490, -1000, -1000, 4510, -1000, -57, -1000, 438, -1000,
	-1000, 1576, -87, -1000, -1000, -1000, -1000, 1413, -1000,
}
var yyPgo = [...]int{

	0, 491, 627, 626, 15, 6, 624, 2, 621, 358,
	620, 36, 53, 32, 615, 1, 614, 37, 31, 613,
	3, 13, 23, 5, 611, 14, 0, 610, 609, 163,
	27, 608, 606, 603, 601, 600, 16, 598, 597, 596,
	33, 520, 594, 39, 593, 38, 588, 29, 586, 25,
	20, 24, 28, 584, 581, 10, 580, 26, 578, 576,
	573, 571, 21, 569, 567, 566, 4, 565, 12, 563,
	9, 562, 8, 560, 558, 7, 557, 556, 554, 553,
	551, 550, 387, 76, 549, 546, 121, 73, 545, 43,
	544, 541, 537, 536, 11,
}
var yyR1 = [...]int{

	0, 92, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 7, 7, 10, 10,
	9, 11, 11, 11, 12, 12, 8, 8, 8, 8,
	8, 8, 8, 15, 15, 14, 14, 14, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 59, 59, 60, 60, 61, 61, 56, 56,
	57, 58, 58, 31, 31, 32, 32, 33, 33, 34,
	34, 35, 35, 36, 36, 37, 37, 39, 39, 39,
	39, 40, 40, 40, 94, 94, 38, 38, 50, 50,
	50, 50, 51, 52, 52, 53, 53, 54, 54, 54,
	54, 54, 54, 55, 55, 42, 42, 43, 44, 44,
	45, 45, 46, 46, 47, 48, 48, 49, 93, 93,
	17, 17, 16, 16, 1, 1, 62, 62, 63, 63,
	63, 63, 72, 72, 73, 73, 73, 74, 74, 75,
	75, 76, 77, 77, 77, 77, 78, 78, 79, 80,
	80, 64, 64, 69, 69, 70, 71, 71, 65, 65,
	66, 66, 66, 66, 66, 66, 67, 67, 68, 68,
	18, 23, 23, 24, 24, 25, 25, 19, 19, 4,
	4, 2, 2, 3, 3, 21, 21, 22, 22, 22,
	20, 20, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 82, 82, 82, 82, 83, 83, 83, 83, 83,
	83, 83, 84, 84, 84, 84, 85, 85, 85, 86,
	86, 87, 88, 88, 88, 89, 89, 89, 26, 26,
	41, 41, 28, 29, 29, 29, 91, 91, 91, 30,
	30, 30, 90, 90,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 2, 3, 2, 0, 1, 1, 1, 4,
	3, 5, 4, 2, 0, 1, 1, 1, 3, 1,
	1, 5, 7, 9, 5, 3, 3, 3, 3, 3,
	3, 1, 2, 6, 7, 9, 5, 1, 6, 3,
	3, 2, 0, 9, 1, 3, 0, 4, 3, 1,
	3, 1, 4, 5, 6, 1, 3, 6, 7, 3,
	6, 1, 4, 0, 1, 3, 1, 3, 4, 4,
	5, 0, 5, 4, 1, 1, 1, 4, 1, 2,
	4, 3, 1, 0, 1, 3, 1, 3, 1, 4,
	2, 6, 4, 1, 4, 3, 1, 1, 3, 1,
	1, 3, 3, 1, 1, 1, 3, 1, 0, 1,
	6, 5, 1, 2, 1, 1, 2, 0, 3, 4,
	3, 9, 1, 3, 1, 2, 3, 1, 2, 2,
	2, 3, 3, 3, 4, 3, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 3, 0, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 3,
	10, 1, 0, 1, 3, 4, 6, 0, 1, 0,
	1, 0, 1, 0, 1, 1, 2, 1, 1, 1,
	0, 2, 3, 4, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 4, 3, 4, 2, 2, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 1, 2, 4, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 3, 1,
	1, 2, 2, 1, 2, 1, 4, 3, 3, 3,
	6, 3, 1, 1, 2, 1, 1, 3, 3, 1,
	1, 1, 1, 3, 1, 4, 3, 1, 1, 1,
	0, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	4, 2, 3, 3,
}
var yyChk = [...]int{

	-1000, -92, -12, -8, -13, -18, -17, 127, 154, 162,
	-32, -34, 97, 96, 99, 106, 110, 111, 115, 122,
	76, 95, 90, -26, 124, 101, 103, 161, 116, 119,
	112, 86, 113, -16, 128, -31, -33, -29, -27, -1,
	83, -28, -90, -88, 71, 58, 59, 49, 50, 55,
	57, 159, 126, 4, 5, 6, 7, 8, 60, 61,
	62, 63, 64, 65, 66, 67, -81, 13, 14, 16,
	77, 78, -30, -86, -87, -89, 84, 85, 141, 142,
	156, 138, 139, 140, 155, 137, 149, 165, -85, 88,
	166, -11, 135, 69, 94, -9, 157, -10, 159, 157,
	-9, 162, 86, -15, 159, -13, 154, 159, 159, -41,
	-26, 76, -41, -41, -42, -43, -30, -44, -45, 88,
	-46, -47, -26, 161, 33, 34, 10, 12, 11, 35,
	37, 36, 51, 49, 50, 52, 68, 53, 54, 47,
	48, 40, 41, 38, 39, 42, 43, 44, 45, 46,
	30, 32, 159, 159, 159, 162, -26, 86, 31, -4,
	37, 128, -1, 86, 73, 74, 73, 75, 74, 17,
	18, 19, 20, 29, 21, 22, 23, 24, 25, 26,
	27, 28, 58, 59, 159, 133, -26, -29, -86, -87,
	159, -89, -11, -29, -26, -26, -26, -26, -26, 159,
	-26, -26, 159, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, 153, 153, 93, 150,
	-82, -83, 88, 151, 152, -82, 93, 162, -30, 159,
	-51, -53, -52, -54, -26, 37, 134, -9, 157, 160,
	-9, 161, 162, -12, -14, 163, -13, -18, -17, -26,
	97, -36, -37, -26, -26, 161, 161, 161, 161, 9,
	161, 9, 17, 161, 9, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -26, -26, -26,
	-26, -26, 31, -26, -48, -49, -29, -26, -56, -57,
	86, -15, 161, 161, 86, 86, 162, 159, -13, 159,
	161, 31, -26, 37, -26, -26, -26, -26, -26, -26,
	-26, -26, -26, -26, -26, -26, -26, -91, 86, 162,
	-30, 153, 153, -26, 160, -26, -26, 15, -7, -30,
	86, -6, -5, 76, 77, 78, 79, 80, 81, 4,
	5, 6, 7, 8, 10, 11, 12, 56, 70, 71,
	82, 83, 73, 74, 75, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 111, 112, 113,
	114, 115, 13, 14, 134, 106, 107, 108, 109, 110,
	135, 136, 131, 132, 154, 129, 130, 128, 137, 138,
	140, 139, 141, 142, 156, 155, -7, -30, 150, -83,
	150, -83, 93, 69, 133, -26, 87, -29, 165, -26,
	-51, 164, 9, 15, -29, 159, 86, 161, -12, 163,
	160, 159, 161, 9, 160, -43, -45, -26, -47, 31,
	-26, -93, 9, 105, 160, 9, 17, 163, 159, 162,
	-62, -26, -26, -15, -26, 160, -26, 160, 160, 160,
	-26, -84, 86, 89, 50, 88, 86, 163, 163, 69,
	163, 163, 160, -52, -26, 37, 134, -51, 163, -35,
	-13, 31, -26, -36, -26, -39, 162, 31, -26, 160,
	-49, -50, -29, 37, 134, 69, -58, -13, 31, -57,
	-26, -59, -23, -24, -25, -19, -21, -22, 30, -11,
	135, 136, -62, 163, -63, -64, -71, 120, -65, 123,
	-66, 81, 80, 79, 76, 77, 78, 160, 160, 75,
	-13, 31, 163, 164, 89, -26, -29, 159, 160, -15,
	160, 161, -40, 161, -40, 161, 161, 160, 15, -29,
	159, -51, -15, -61, 117, 118, 160, 9, -2, 37,
	-22, 163, -67, -68, 88, 114, 113, -72, -11, -66,
	-13, 31, 161, -15, 164, -51, 98, 161, -36, 163,
	108, 109, -40, 107, -40, -55, -13, 31, -50, -51,
	164, 104, 159, 162, -20, 31, -25, -3, 158, 161,
	9, 17, -69, -70, -7, -4, -73, 9, 161, 162,
	-15, 163, 160, 161, 160, -26, -94, 31, 161, 163,
	161, 107, -15, 160, 160, 161, -60, -11, -15, 162,
	-21, 88, -68, -26, 161, 9, 17, -7, -11, 163,
	-74, -75, -76, -77, -79, -78, -11, -7, 154, 86,
	-38, -13, 31, -94, -15, 161, 102, -55, 88, 35,
	163, -15, 17, -70, -26, 159, 163, -75, 161, 161,
	121, 105, 153, -15, -15, 161, 160, -11, 163, -26,
	-23, -72, 86, -5, -66, -7, 100, 162, 160, -7,
	161, -15, -20, 163, -80, 161, 162, -15, 163,
}
var yyDef = [...]int{

	85, -2, 1, 84, 86, 87, 88, 0, 0, 94,
	99, 100, 0, 0, 0, 0, 380, 380, 380, 0,
	369, 0, 111, 0, 0, 0, 0, 117, 0, 0,
	0, 78, 249, 0, 0, 135, 0, -2, 379, 192,
	0, 383, 384, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 331, 0,
	194, 195, 382, 0, 0, -2, 335, 336, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 350, 389,
	0, -2, 0, 163, 377, 81, 0, 80, 0, 0,
	0, 85, 78, 0, 0, 0, 0, 143, 0, 0,
	381, 369, 0, 0, 0, 176, 177, 0, 179, 180,
	0, 183, 184, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 121, 0,
	250, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 0, 0, 264, -2, 0, 0,
	0, 374, 370, -2, 298, 299, 300, 301, 0, 0,
	316, 317, 0, 319, 320, 321, 322, 323, 324, 325,
	326, 327, 328, 330, 332, 334, 0, 0, 0, 346,
	0, 353, 355, 0, 0, 0, 0, 0, 391, 163,
	0, 162, 166, 164, 168, 0, 0, 82, 0, 0,
	83, 90, 85, 0, 93, 98, 95, 96, 97, 0,
	0, 0, 144, 146, 0, 105, 106, 107, 108, 0,
	109, 0, 0, 110, 0, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 294, 295,
	296, 297, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 0, 314, 188, 185, -2, 0, 0, 129,
	0, 0, 119, 120, 0, 0, 197, 0, 136, 0,
	139, 94, 262, 0, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 0, 385, 386, 0,
	388, 0, 0, 0, -2, 0, 0, 0, 367, 392,
	76, 77, 69, 70, 71, 72, 73, 74, 75, 2,
	3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
	23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
	33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 368, 393, 345, 354,
	348, 351, 352, 0, 0, 0, 0, 372, 347, 0,
	0, 376, 163, 0, -2, 163, 79, 89, 0, 92,
	0, 0, 143, 0, 0, 175, 178, 181, 182, 0,
	313, 0, 189, 0, 0, 0, 0, 122, -2, 197,
	226, 0, 0, 0, 263, 0, 0, 373, 315, 318,
	333, 0, 362, 363, 0, 365, 357, 358, 359, 0,
	361, 390, 375, 165, 167, 0, 0, 0, 91, 101,
	141, 94, 0, 0, 145, 104, 151, 151, 312, 0,
	186, 0, -2, 0, 0, 163, 116, 131, 94, 128,
	130, 126, 0, 241, 243, 251, 248, 255, 0, 257,
	258, 259, 226, 191, 196, 0, 0, 0, -2, 222,
	228, 230, 231, 232, 233, 234, 235, 0, 0, 0,
	133, 94, 387, 356, 364, 0, -2, 163, 172, 0,
	0, 143, 0, 151, 0, 151, 113, 0, 0, -2,
	163, 0, 0, 118, 0, 0, 260, 247, 253, 252,
	256, 190, 0, 237, 238, 0, 249, 0, 202, 229,
	134, 94, 140, 137, 0, 0, 0, 102, 0, 147,
	0, 0, 0, 0, 0, 114, 173, 94, 0, 0,
	-2, 0, 0, 94, 0, 0, 244, 0, 254, 198,
	0, 0, 0, 224, 0, 0, 200, 0, 204, 0,
	138, 360, 171, 142, 0, 0, 94, 154, 155, 148,
	149, 0, 0, 0, 160, 132, 0, 124, 0, 94,
	261, 245, 236, 239, 199, 0, 0, 0, 203, 205,
	0, 207, 0, 0, 217, 0, 0, 216, 57, -2,
	103, 156, 94, 94, 153, 150, 0, 115, 0, 0,
	127, 0, 0, 223, 225, -2, 206, 208, 209, 210,
	0, 0, 0, 0, 152, 174, 0, 125, 240, 246,
	0, 211, 212, 213, 215, 218, 0, 94, 260, 214,
	157, 0, 0, 123, 201, 219, 94, 0, 220,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 55, 165, 3, 166, 54, 37, 3,
	159, 160, 52, 49, 9, 50, 51, 53, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 31, 161,
	43, 17, 45, 30, 67, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 69, 3, 164, 36, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 35, 163, 57,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 10, 11, 12,
	13, 14, 15, 16, 18, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 32, 33, 34, 38,
	39, 40, 41, 42, 44, 46, 47, 48, 56, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 68, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:290
		{
			fmt.Println(yyDollar[1].node)
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.value = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.value = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.value = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.value = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.value = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.value = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.value = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.value = yyDollar[1].value
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.value = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].token)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].value)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:314
		{
			yyVAL.node = Node("NamespaceParts").append(Node(yyDollar[1].token))
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:315
		{
			yyVAL.node = yyDollar[1].node.append(Node(yyDollar[3].token))
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.node = yyDollar[1].node
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.node = Node("Name").append(yyDollar[1].node)
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:324
		{
			yyVAL.node = Node("Name").append(yyDollar[2].node).attribute("FullyQualified", "true")
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:325
		{
			yyVAL.node = Node("Name").append(yyDollar[3].node).attribute("Relative", "true")
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:329
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:330
		{
			yyVAL.node = Node("Statements")
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:334
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:336
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:338
		{
			yyVAL.node = Node("THaltCompiler")
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:340
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node)
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:342
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:343
		{
			yyVAL.node = Node("Namespace").append(yyDollar[3].node)
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:347
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:348
		{
			yyVAL.node = Node("stmt")
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:352
		{
			yyVAL.node = yyDollar[1].node
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:353
		{
			yyVAL.node = yyDollar[1].node
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:354
		{
			yyVAL.node = yyDollar[1].node
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:357
		{
			yyVAL.node = yyDollar[2].node
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:358
		{
			yyVAL.node = yyDollar[1].node
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:359
		{
			yyVAL.node = yyDollar[1].node
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:361
		{
			yyVAL.node = Node("While").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("stmt").append(yyDollar[5].node))
		}
	case 102:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:367
		{
			yyVAL.node = Node("DoWhile").
				append(Node("expr").append(yyDollar[5].node)).
				append(Node("stmt").append(yyDollar[2].node))
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:373
		{
			yyVAL.node = Node("For").
				append(Node("expr1").append(yyDollar[3].node)).
				append(Node("expr2").append(yyDollar[5].node)).
				append(Node("expr3").append(yyDollar[7].node)).
				append(Node("stmt").append(yyDollar[9].node))
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:380
		{
			yyVAL.node = Node("Switch").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node)
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:381
		{
			yyVAL.node = Node("Break").append(yyDollar[2].node)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:382
		{
			yyVAL.node = Node("Continue").append(yyDollar[2].node)
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:383
		{
			yyVAL.node = Node("Return").append(yyDollar[2].node)
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:384
		{
			yyVAL.node = yyDollar[2].node
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:385
		{
			yyVAL.node = yyDollar[2].node
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:386
		{
			yyVAL.node = yyDollar[2].node
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.node = Node("Echo").append(Node("InlineHtml").attribute("value", yyDollar[1].token))
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:388
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:390
		{
			yyVAL.node = Node("Unset").append(yyDollar[3].node)
		}
	case 114:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:392
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachVariable").append(yyDollar[5].node)).
				append(yyDollar[7].node)
		}
	case 115:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:399
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachKey").append(yyDollar[5].node)).
				append(Node("ForeachVariable").append(yyDollar[7].node)).
				append(yyDollar[9].node)
		}
	case 116:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:406
		{
			yyVAL.node = Node("Declare").append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:407
		{
			yyVAL.node = Node("")
		}
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:409
		{
			yyVAL.node = Node("Try").
				append(yyDollar[3].node).
				append(yyDollar[5].node).
				append(yyDollar[6].node)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:415
		{
			yyVAL.node = Node("Throw").append(yyDollar[2].node)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:416
		{
			yyVAL.node = Node("GoTo").attribute("Label", yyDollar[2].token)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:417
		{
			yyVAL.node = Node("Label").attribute("name", yyDollar[1].token)
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:420
		{
			yyVAL.node = Node("CatchList")
		}
	case 123:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:422
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[4].node).append(Node("Variable").attribute("name", yyDollar[5].token)).append(yyDollar[8].node)
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:425
		{
			yyVAL.node = Node("CatchNameList").append(yyDollar[1].node)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:426
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:430
		{
			yyVAL.node = Node("")
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:431
		{
			yyVAL.node = Node("Finnaly").append(yyDollar[3].node)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:435
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:436
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:440
		{
			yyVAL.node = Node("Const").attribute("name", yyDollar[1].token).append(yyDollar[3].node)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:444
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:445
		{
			yyVAL.node = yyDollar[2].node
		}
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:450
		{
			yyVAL.node = Node("If").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[5].node))
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:454
		{
			yyVAL.node = yyDollar[1].node.append(Node("ElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[6].node)))
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:460
		{
			yyVAL.node = yyDollar[1].node
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:462
		{
			yyVAL.node = yyDollar[1].node.append(Node("Else").append(Node("stmt").append(yyDollar[3].node)))
		}
	case 137:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:469
		{
			yyVAL.node = Node("AltIf").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[6].node))
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:473
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[7].node)))
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:479
		{
			yyVAL.node = yyDollar[1].node
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:481
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElse").append(Node("stmt").append(yyDollar[4].node)))
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:487
		{
			yyVAL.node = yyDollar[1].node
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:488
		{
			yyVAL.node = yyDollar[2].node
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:492
		{
			yyVAL.node = Node("")
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.node = yyDollar[1].node
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:496
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:497
		{
			yyVAL.node = Node("ExpressionList").append(yyDollar[1].node)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:501
		{
			yyVAL.node = yyDollar[2].node
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:502
		{
			yyVAL.node = yyDollar[3].node
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:503
		{
			yyVAL.node = yyDollar[2].node
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:504
		{
			yyVAL.node = yyDollar[3].node
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:508
		{
			yyVAL.node = Node("CaseList")
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:510
		{
			yyVAL.node = yyDollar[1].node.append(Node("Case").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node))
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:514
		{
			yyVAL.node = yyDollar[1].node.append(Node("Default").append(yyDollar[4].node))
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.node = yyDollar[1].node
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:526
		{
			yyVAL.node = yyDollar[2].node
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:530
		{
			yyVAL.node = yyDollar[1].node
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:531
		{
			yyVAL.node = Node("Ref").append(yyDollar[2].node)
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:532
		{
			yyVAL.node = Node("List").append(yyDollar[3].node)
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:533
		{
			yyVAL.node = Node("ShortList").append(yyDollar[2].node)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:537
		{ /* TODO: allow single trailing comma */
			yyVAL.node = yyDollar[1].node
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:541
		{
			yyVAL.node = Node("")
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:542
		{
			yyVAL.node = yyDollar[1].node
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:547
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:548
		{
			yyVAL.node = Node("ArrayPairList").append(yyDollar[1].node)
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:552
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node)
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:554
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(Node("Ref").append(yyDollar[4].node))
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:555
		{
			yyVAL.node = Node("ArrayElement").append(Node("Ref").append(yyDollar[2].node))
		}
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:557
		{
			yyVAL.node = Node("ArrayElement").
				append(yyDollar[1].node).
				append(Node("ArrayList").append(yyDollar[5].node))
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:563
		{
			yyVAL.node = Node("ArrayElement").
				append(Node("ArrayList").append(yyDollar[3].node))
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:570
		{
			yyVAL.node = yyDollar[1].node
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:571
		{
			yyVAL.node = yyDollar[2].node
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:575
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:576
		{
			yyVAL.node = Node("GlobalVarList").append(yyDollar[1].node)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:580
		{
			yyVAL.node = yyDollar[1].node
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:584
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:585
		{
			yyVAL.node = Node("StaticVarList").append(yyDollar[1].node)
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:589
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token)
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:590
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token).append(Node("expr").append(yyDollar[3].node))
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:594
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:595
		{
			yyVAL.node = Node("EchoList").append(yyDollar[1].node)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:599
		{
			yyVAL.node = Node("Echo").append(yyDollar[1].node)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:603
		{
			yyVAL.node = Node("UnsetVariablesList").append(yyDollar[1].node)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:604
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:608
		{
			yyVAL.node = yyDollar[1].node
		}
	case 190:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:618
		{
			yyVAL.node = yyDollar[1].node.attribute("name", yyDollar[3].token).append(yyDollar[5].node)
		}
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:619
		{
			yyVAL.node = Node("Class").attribute("name", yyDollar[2].token).append(yyDollar[4].node)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:623
		{
			yyVAL.node = Node("Class").attribute(yyDollar[1].value, "true")
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:624
		{
			yyVAL.node = yyDollar[1].node.attribute(yyDollar[2].value, "true")
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:628
		{
			yyVAL.value = "abstract"
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:629
		{
			yyVAL.value = "final"
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:633
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:634
		{
			yyVAL.node = Node("Stmt")
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:638
		{
			yyVAL.node = yyDollar[2].node.append(yyDollar[1].node)
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:639
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[1].node)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:640
		{
			yyVAL.node = Node("Use").append(yyDollar[2].node).append(yyDollar[3].node)
		}
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:643
		{
			yyVAL.node = Node("Function").
				append(yyDollar[1].node).
				append(Node("name").append(yyDollar[4].node)).
				attribute("returns_ref", yyDollar[3].value).
				append(yyDollar[6].node).
				append(yyDollar[8].node).
				append(yyDollar[9].node)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:655
		{
			yyVAL.node = Node("NameList").append(yyDollar[1].node)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:656
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:660
		{
			yyVAL.node = Node("")
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:661
		{
			yyVAL.node = Node("")
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:662
		{
			yyVAL.node = yyDollar[2].node
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:666
		{
			yyVAL.node = Node("TraitAdaptionList").append(yyDollar[1].node)
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:667
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:671
		{
			yyVAL.node = yyDollar[1].node
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:672
		{
			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:677
		{
			yyVAL.node = Node("TraitPrecedence").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:681
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").attribute("value", yyDollar[3].token))
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:683
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").append(Node("reservedNonModifiers")))
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:685
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node).append(yyDollar[4].node)
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:686
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:689
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:690
		{
			yyVAL.node = yyDollar[1].node
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:694
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:698
		{
			yyVAL.node = Node("")
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:699
		{
			yyVAL.node = yyDollar[2].node
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:703
		{
			yyVAL.node = yyDollar[1].node
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:704
		{
			yyVAL.node = Node("VarMemberModifier")
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:708
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:709
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:713
		{
			yyVAL.node = Node("Const").append(yyDollar[3].node)
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:717
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:718
		{
			yyVAL.node = yyDollar[1].node
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:721
		{
			yyVAL.node = yyDollar[1].node
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:722
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:725
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:726
		{
			yyVAL.node = Node("ProtectedMemberModifier")
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:727
		{
			yyVAL.node = Node("PrivateMemberModifier")
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:728
		{
			yyVAL.node = Node("StaticMemberModifier")
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:729
		{
			yyVAL.node = Node("AbstractMemberModifier")
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:730
		{
			yyVAL.node = Node("FinalMemberModifier")
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:734
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:735
		{
			yyVAL.node = Node("PropertyList").append(yyDollar[1].node)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:738
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:739
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token).append(Node("Default").append(yyDollar[3].node))
		}
	case 240:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:744
		{
			yyVAL.node = Node("Function").
				attribute("name", yyDollar[3].token).
				attribute("returns_ref", yyDollar[2].value).
				append(yyDollar[5].node).
				append(yyDollar[7].node).
				append(yyDollar[9].node)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:755
		{
			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:756
		{
			yyVAL.node = Node("Parameter list")
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:759
		{
			yyVAL.node = Node("Parameter list").append(yyDollar[1].node)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:760
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:764
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token)
		}
	case 246:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:772
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token).
				append(yyDollar[6].node)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:783
		{
			yyVAL.node = Node("No type")
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:784
		{
			yyVAL.node = yyDollar[1].node
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:788
		{
			yyVAL.value = "false"
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:789
		{
			yyVAL.value = "true"
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:793
		{
			yyVAL.value = "false"
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:794
		{
			yyVAL.value = "true"
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:798
		{
			yyVAL.value = "false"
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:799
		{
			yyVAL.value = "true"
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:803
		{
			yyVAL.node = yyDollar[1].node
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:804
		{
			yyVAL.node = yyDollar[2].node
			yyVAL.node.attribute("nullable", "true")
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:808
		{
			yyVAL.node = yyDollar[1].node
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:809
		{
			yyVAL.node = Node("array type")
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:810
		{
			yyVAL.node = Node("callable type")
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:814
		{
			yyVAL.node = Node("void")
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:815
		{
			yyVAL.node = yyDollar[2].node
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:819
		{
			yyVAL.node = Node("Assign").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:820
		{
			yyVAL.node = Node("AssignRef").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:821
		{
			yyVAL.node = Node("Clone").append(yyDollar[2].node)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:822
		{
			yyVAL.node = Node("AssignAdd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:823
		{
			yyVAL.node = Node("AssignSub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:824
		{
			yyVAL.node = Node("AssignMul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:825
		{
			yyVAL.node = Node("AssignPow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:826
		{
			yyVAL.node = Node("AssignDiv").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:827
		{
			yyVAL.node = Node("AssignConcat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:828
		{
			yyVAL.node = Node("AssignMod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:829
		{
			yyVAL.node = Node("AssignAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:830
		{
			yyVAL.node = Node("AssignOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:831
		{
			yyVAL.node = Node("AssignXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:832
		{
			yyVAL.node = Node("AssignShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:833
		{
			yyVAL.node = Node("AssignShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:834
		{
			yyVAL.node = Node("PostIncrement").append(yyDollar[1].node)
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:835
		{
			yyVAL.node = Node("PreIncrement").append(yyDollar[2].node)
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:836
		{
			yyVAL.node = Node("PostDecrement").append(yyDollar[1].node)
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:837
		{
			yyVAL.node = Node("PreDecrement").append(yyDollar[2].node)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:838
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:839
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:840
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:841
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:842
		{
			yyVAL.node = Node("Xor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:843
		{
			yyVAL.node = Node("BitwiseOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:844
		{
			yyVAL.node = Node("BitwiseAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:845
		{
			yyVAL.node = Node("BitwiseXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:846
		{
			yyVAL.node = Node("Concat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:847
		{
			yyVAL.node = Node("Add").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:848
		{
			yyVAL.node = Node("Sub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:849
		{
			yyVAL.node = Node("Mul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:850
		{
			yyVAL.node = Node("Pow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:851
		{
			yyVAL.node = Node("Div").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:852
		{
			yyVAL.node = Node("Mod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:853
		{
			yyVAL.node = Node("ShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:854
		{
			yyVAL.node = Node("ShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:855
		{
			yyVAL.node = Node("UnaryPlus").append(yyDollar[2].node)
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:856
		{
			yyVAL.node = Node("UnaryMinus").append(yyDollar[2].node)
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:857
		{
			yyVAL.node = Node("BooleanNot").append(yyDollar[2].node)
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:858
		{
			yyVAL.node = Node("BitwiseNot").append(yyDollar[2].node)
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:859
		{
			yyVAL.node = Node("Identical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:860
		{
			yyVAL.node = Node("NotIdentical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:861
		{
			yyVAL.node = Node("Equal").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:862
		{
			yyVAL.node = Node("NotEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:863
		{
			yyVAL.node = Node("Spaceship").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:864
		{
			yyVAL.node = Node("Smaller").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:865
		{
			yyVAL.node = Node("SmallerOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:866
		{
			yyVAL.node = Node("Greater").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:867
		{
			yyVAL.node = Node("GreaterOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:868
		{
			yyVAL.node = yyDollar[2].node
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:869
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:870
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:871
		{
			yyVAL.node = Node("Coalesce").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:872
		{
			yyVAL.node = Node("Empty").append(yyDollar[3].node)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:873
		{
			yyVAL.node = Node("Include").append(yyDollar[2].node)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:874
		{
			yyVAL.node = Node("IncludeOnce").append(yyDollar[2].node)
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:875
		{
			yyVAL.node = Node("Eval").append(yyDollar[3].node)
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:876
		{
			yyVAL.node = Node("Require").append(yyDollar[2].node)
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:877
		{
			yyVAL.node = Node("RequireOnce").append(yyDollar[2].node)
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:878
		{
			yyVAL.node = Node("CastInt").append(yyDollar[2].node)
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:879
		{
			yyVAL.node = Node("CastDouble").append(yyDollar[2].node)
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:880
		{
			yyVAL.node = Node("CastString").append(yyDollar[2].node)
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:881
		{
			yyVAL.node = Node("CastArray").append(yyDollar[2].node)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:882
		{
			yyVAL.node = Node("CastObject").append(yyDollar[2].node)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:883
		{
			yyVAL.node = Node("CastBool").append(yyDollar[2].node)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:884
		{
			yyVAL.node = Node("CastUnset").append(yyDollar[2].node)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:885
		{
			yyVAL.node = Node("Silence").append(yyDollar[2].node)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:886
		{
			yyVAL.node = yyDollar[1].node
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:887
		{
			yyVAL.node = Node("Print").append(yyDollar[2].node)
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:888
		{
			yyVAL.node = Node("Yield")
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:889
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node)
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:890
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:891
		{
			yyVAL.node = Node("YieldFrom").append(yyDollar[2].node)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:895
		{
			yyVAL.node = Node("Scalar").append(Node("Lnumber").attribute("value", yyDollar[1].token))
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:896
		{
			yyVAL.node = Node("Scalar").append(Node("Dnumber").attribute("value", yyDollar[1].token))
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:897
		{
			yyVAL.node = Node("Scalar").append(Node("__LINE__"))
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:898
		{
			yyVAL.node = Node("Scalar").append(Node("__FILE__"))
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:899
		{
			yyVAL.node = Node("Scalar").append(Node("__DIR__"))
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:900
		{
			yyVAL.node = Node("Scalar").append(Node("__TRAIT__"))
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:901
		{
			yyVAL.node = Node("Scalar").append(Node("__METHOD__"))
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:902
		{
			yyVAL.node = Node("Scalar").append(Node("__FUNCTION__"))
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:903
		{
			yyVAL.node = Node("Scalar").append(Node("__NAMESPACE__"))
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:904
		{
			yyVAL.node = Node("Scalar").append(Node("__CLASS__"))
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:906
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc").attribute("value", yyDollar[2].token))
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:908
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc"))
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:909
		{
			yyVAL.node = yyDollar[2].node
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:910
		{
			yyVAL.node = yyDollar[2].node
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:911
		{
			yyVAL.node = yyDollar[1].node
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:912
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:916
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:917
		{
			yyVAL.node = yyDollar[1].node.append(Node("String").attribute("value", yyDollar[2].token))
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:918
		{
			yyVAL.node = Node("EncapsList").append(yyDollar[1].node)
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:919
		{
			yyVAL.node = Node("EncapsList").append(Node("String").attribute("value", yyDollar[1].token)).append(yyDollar[2].node)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:922
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token)
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:923
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token).append(Node("offset").append(yyDollar[3].node))
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:924
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token).append(Node("property").attribute("value", yyDollar[3].token))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:925
		{
			yyVAL.node = Node("Variable").append(Node("expr").append(yyDollar[2].node))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:926
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token)
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:928
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token).append(Node("offset").append(yyDollar[4].node))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:929
		{
			yyVAL.node = yyDollar[2].node
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:932
		{
			yyVAL.node = Node("OffsetString").attribute("value", yyDollar[1].token)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:933
		{
			yyVAL.node = Node("OffsetNumString").attribute("value", yyDollar[1].token)
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:934
		{
			yyVAL.node = Node("OffsetNegateNumString").attribute("value", yyDollar[2].token)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:935
		{
			yyVAL.node = Node("OffsetVariable").attribute("value", yyDollar[1].token)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:939
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node)
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:940
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:942
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:946
		{
			yyVAL.node = Node("Static")
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:947
		{
			yyVAL.node = yyDollar[1].node
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:951
		{
			yyVAL.node = yyDollar[1].node
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:955
		{
			yyVAL.node = yyDollar[1].node
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:956
		{
			yyVAL.node = yyDollar[2].node
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:957
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:961
		{
			yyVAL.node = yyDollar[3].node
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:962
		{
			yyVAL.node = yyDollar[2].node
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:963
		{
			yyVAL.node = Node("String").attribute("value", yyDollar[1].token)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:967
		{
			yyVAL.node = yyDollar[1].node
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:968
		{
			yyVAL.node = yyDollar[1].node
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:972
		{
			yyVAL.node = Node("")
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:973
		{
			yyVAL.node = yyDollar[1].node
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:977
		{
			yyVAL.node = yyDollar[1].node
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:981
		{
			yyVAL.node = yyDollar[1].node
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:982
		{
			yyVAL.node = yyDollar[1].node
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:983
		{
			yyVAL.node = Node("Property").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:987
		{
			yyVAL.node = Node("PropertyName").attribute("value", yyDollar[1].token)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:988
		{
			yyVAL.node = yyDollar[2].node
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:989
		{
			yyVAL.node = yyDollar[1].node
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:993
		{
			yyVAL.node = Node("Variable").attribute("name", yyDollar[1].token)
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:994
		{
			yyVAL.node = Node("Variable").append(yyDollar[3].node)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:995
		{
			yyVAL.node = Node("Variable").append(yyDollar[2].node)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	}
	goto yystack /* stack new state and value */
}
