//line parser.y:2
package main

import __yyfmt__ "fmt"

//line parser.y:2
import (
	"io"
)

var rootNode = Node("Root")

func parse(src io.Reader, fName string) node {
	rootNode = Node("Root") //reset
	yyParse(newLexer(src, fName))
	return rootNode
}

//line parser.y:18
type yySymType struct {
	yys   int
	node  node
	token token
	value string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EVAL = 57348
const T_REQUIRE = 57349
const T_REQUIRE_ONCE = 57350
const T_LOGICAL_OR = 57351
const T_LOGICAL_XOR = 57352
const T_LOGICAL_AND = 57353
const T_PRINT = 57354
const T_YIELD = 57355
const T_DOUBLE_ARROW = 57356
const T_YIELD_FROM = 57357
const T_PLUS_EQUAL = 57358
const T_MINUS_EQUAL = 57359
const T_MUL_EQUAL = 57360
const T_DIV_EQUAL = 57361
const T_CONCAT_EQUAL = 57362
const T_MOD_EQUAL = 57363
const T_AND_EQUAL = 57364
const T_OR_EQUAL = 57365
const T_XOR_EQUAL = 57366
const T_SL_EQUAL = 57367
const T_SR_EQUAL = 57368
const T_POW_EQUAL = 57369
const T_COALESCE = 57370
const T_BOOLEAN_OR = 57371
const T_BOOLEAN_AND = 57372
const T_IS_EQUAL = 57373
const T_IS_NOT_EQUAL = 57374
const T_IS_IDENTICAL = 57375
const T_IS_NOT_IDENTICAL = 57376
const T_SPACESHIP = 57377
const T_IS_SMALLER_OR_EQUAL = 57378
const T_IS_GREATER_OR_EQUAL = 57379
const T_SL = 57380
const T_SR = 57381
const T_INSTANCEOF = 57382
const T_INC = 57383
const T_DEC = 57384
const T_INT_CAST = 57385
const T_DOUBLE_CAST = 57386
const T_STRING_CAST = 57387
const T_ARRAY_CAST = 57388
const T_OBJECT_CAST = 57389
const T_BOOL_CAST = 57390
const T_UNSET_CAST = 57391
const T_POW = 57392
const T_NEW = 57393
const T_CLONE = 57394
const T_NOELSE = 57395
const T_ELSEIF = 57396
const T_ELSE = 57397
const T_ENDIF = 57398
const T_STATIC = 57399
const T_ABSTRACT = 57400
const T_FINAL = 57401
const T_PRIVATE = 57402
const T_PROTECTED = 57403
const T_PUBLIC = 57404
const T_EXIT = 57405
const T_IF = 57406
const T_LNUMBER = 57407
const T_DNUMBER = 57408
const T_STRING = 57409
const T_STRING_VARNAME = 57410
const T_VARIABLE = 57411
const T_NUM_STRING = 57412
const T_INLINE_HTML = 57413
const T_CHARACTER = 57414
const T_BAD_CHARACTER = 57415
const T_ENCAPSED_AND_WHITESPACE = 57416
const T_CONSTANT_ENCAPSED_STRING = 57417
const T_ECHO = 57418
const T_DO = 57419
const T_WHILE = 57420
const T_ENDWHILE = 57421
const T_FOR = 57422
const T_ENDFOR = 57423
const T_FOREACH = 57424
const T_ENDFOREACH = 57425
const T_DECLARE = 57426
const T_ENDDECLARE = 57427
const T_AS = 57428
const T_SWITCH = 57429
const T_ENDSWITCH = 57430
const T_CASE = 57431
const T_DEFAULT = 57432
const T_BREAK = 57433
const T_CONTINUE = 57434
const T_GOTO = 57435
const T_FUNCTION = 57436
const T_CONST = 57437
const T_RETURN = 57438
const T_TRY = 57439
const T_CATCH = 57440
const T_FINALLY = 57441
const T_THROW = 57442
const T_USE = 57443
const T_INSTEADOF = 57444
const T_GLOBAL = 57445
const T_VAR = 57446
const T_UNSET = 57447
const T_ISSET = 57448
const T_EMPTY = 57449
const T_HALT_COMPILER = 57450
const T_CLASS = 57451
const T_TRAIT = 57452
const T_INTERFACE = 57453
const T_EXTENDS = 57454
const T_IMPLEMENTS = 57455
const T_OBJECT_OPERATOR = 57456
const T_LIST = 57457
const T_ARRAY = 57458
const T_CALLABLE = 57459
const T_CLASS_C = 57460
const T_TRAIT_C = 57461
const T_METHOD_C = 57462
const T_FUNC_C = 57463
const T_LINE = 57464
const T_FILE = 57465
const T_COMMENT = 57466
const T_DOC_COMMENT = 57467
const T_OPEN_TAG = 57468
const T_OPEN_TAG_WITH_ECHO = 57469
const T_CLOSE_TAG = 57470
const T_WHITESPACE = 57471
const T_START_HEREDOC = 57472
const T_END_HEREDOC = 57473
const T_DOLLAR_OPEN_CURLY_BRACES = 57474
const T_CURLY_OPEN = 57475
const T_PAAMAYIM_NEKUDOTAYIM = 57476
const T_NAMESPACE = 57477
const T_NS_C = 57478
const T_DIR = 57479
const T_NS_SEPARATOR = 57480
const T_ELLIPSIS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"','",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_PRINT",
	"T_YIELD",
	"T_DOUBLE_ARROW",
	"T_YIELD_FROM",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"'?'",
	"':'",
	"T_COALESCE",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"'&'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_SPACESHIP",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'+'",
	"'-'",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"T_INSTANCEOF",
	"'~'",
	"T_INC",
	"T_DEC",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"'@'",
	"T_POW",
	"'['",
	"T_NEW",
	"T_CLONE",
	"T_NOELSE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"'('",
	"')'",
	"';'",
	"'{'",
	"'}'",
	"']'",
	"'`'",
	"'\"'",
	"'$'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:1172

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	69, 419,
	133, 419,
	153, 419,
	162, 419,
	-2, 414,
	-1, 47,
	159, 422,
	-2, 431,
	-1, 83,
	69, 421,
	133, 421,
	153, 421,
	159, 424,
	162, 421,
	-2, 409,
	-1, 106,
	153, 382,
	-2, 411,
	-1, 228,
	69, 419,
	133, 419,
	153, 419,
	162, 419,
	-2, 311,
	-1, 231,
	159, 424,
	-2, 421,
	-1, 234,
	69, 419,
	133, 419,
	153, 419,
	162, 419,
	-2, 313,
	-1, 352,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 335,
	-1, 353,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 336,
	-1, 354,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 337,
	-1, 355,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 338,
	-1, 356,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 339,
	-1, 357,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 340,
	-1, 358,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 341,
	-1, 359,
	43, 0,
	44, 0,
	45, 0,
	46, 0,
	-2, 342,
	-1, 360,
	38, 0,
	39, 0,
	40, 0,
	41, 0,
	42, 0,
	-2, 343,
	-1, 367,
	9, 161,
	160, 161,
	-2, 419,
	-1, 374,
	160, 211,
	-2, 216,
	-1, 411,
	9, 459,
	160, 459,
	164, 459,
	-2, 419,
	-1, 415,
	69, 420,
	133, 420,
	153, 420,
	159, 423,
	162, 420,
	-2, 345,
	-1, 429,
	159, 445,
	-2, 412,
	-1, 430,
	159, 447,
	-2, 437,
	-1, 509,
	159, 445,
	-2, 413,
	-1, 510,
	159, 447,
	-2, 438,
	-1, 558,
	160, 211,
	-2, 216,
	-1, 568,
	160, 211,
	-2, 216,
	-1, 603,
	159, 423,
	-2, 420,
	-1, 659,
	15, 181,
	160, 181,
	-2, 419,
	-1, 681,
	88, 263,
	-2, 266,
	-1, 700,
	9, 458,
	160, 458,
	164, 458,
	-2, 419,
	-1, 733,
	15, 182,
	160, 182,
	-2, 419,
	-1, 786,
	15, 184,
	160, 184,
	-2, 393,
	-1, 857,
	105, 76,
	-2, 80,
	-1, 880,
	160, 211,
	-2, 216,
}

const yyPrivate = 57344

const yyLast = 7392

var yyAct = [...]int{

	27, 129, 790, 802, 585, 683, 434, 569, 836, 849,
	801, 781, 818, 749, 106, 125, 573, 658, 741, 583,
	640, 137, 137, 137, 725, 714, 150, 311, 110, 639,
	4, 320, 520, 571, 185, 530, 366, 563, 580, 114,
	120, 574, 222, 403, 220, 131, 188, 79, 149, 376,
	146, 315, 224, 227, 8, 83, 235, 236, 237, 238,
	239, 43, 136, 240, 241, 242, 243, 244, 245, 246,
	314, 249, 142, 7, 257, 258, 259, 313, 127, 312,
	6, 428, 5, 512, 139, 140, 511, 417, 272, 273,
	126, 275, 276, 691, 124, 786, 707, 253, 263, 268,
	703, 229, 229, 2, 617, 104, 404, 232, 104, 231,
	231, 81, 604, 592, 408, 228, 234, 116, 288, 104,
	104, 859, 292, 293, 913, 914, 653, 814, 614, 811,
	809, 317, 768, 615, 905, 322, 323, 305, 866, 834,
	289, 844, 291, 832, 789, 775, 776, 298, 764, 534,
	304, 746, 116, 335, 336, 337, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 319,
	362, 364, 405, 368, 105, 133, 370, 105, 111, 674,
	284, 286, 331, 268, 282, 798, 265, 78, 105, 105,
	821, 386, 388, 389, 390, 391, 392, 393, 394, 395,
	396, 397, 398, 399, 775, 776, 400, 137, 402, 294,
	224, 143, 613, 113, 382, 716, 534, 216, 115, 229,
	819, 413, 514, 584, 224, 254, 378, 231, 534, 184,
	420, 534, 301, 367, 908, 805, 806, 334, 232, 137,
	687, 688, 689, 686, 685, 684, 423, 652, 116, 891,
	104, 137, 330, 328, 407, 429, 509, 307, 301, 774,
	884, 521, 522, 229, 369, 523, 883, 361, 414, 401,
	875, 231, 269, 527, 865, 575, 531, 411, 224, 828,
	265, 218, 822, 843, 680, 815, 516, 682, 255, 256,
	267, 906, 643, 283, 229, 772, 660, 759, 732, 549,
	730, 416, 231, 526, 637, 305, 517, 545, 425, 892,
	217, 728, 4, 427, 827, 515, 133, 726, 541, 111,
	544, 724, 533, 559, 721, 150, 553, 858, 662, 105,
	307, 116, 538, 535, 508, 232, 8, 797, 384, 418,
	419, 372, 326, 325, 518, 116, 324, 104, 295, 880,
	820, 826, 816, 109, 562, 7, 808, 740, 729, 712,
	710, 702, 6, 668, 5, 418, 269, 419, 419, 418,
	656, 557, 587, 560, 588, 644, 548, 589, 590, 578,
	576, 577, 582, 793, 539, 586, 542, 536, 788, 333,
	635, 556, 605, 661, 108, 596, 595, 290, 734, 133,
	224, 599, 111, 224, 329, 327, 406, 887, 745, 306,
	300, 701, 285, 133, 568, 579, 111, 616, 230, 558,
	113, 874, 619, 374, 552, 373, 105, 550, 412, 383,
	381, 287, 154, 156, 155, 687, 688, 689, 686, 685,
	684, 116, 598, 731, 274, 271, 270, 602, 248, 430,
	510, 219, 179, 215, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 594, 178, 680,
	303, 566, 682, 687, 688, 689, 686, 685, 684, 183,
	164, 182, 687, 688, 689, 686, 685, 684, 374, 181,
	135, 116, 618, 134, 130, 137, 623, 112, 303, 133,
	116, 288, 111, 513, 262, 261, 143, 581, 116, 303,
	377, 380, 840, 634, 742, 303, 421, 680, 122, 123,
	682, 303, 288, 885, 738, 739, 680, 254, 145, 682,
	886, 119, 420, 648, 322, 650, 876, 627, 318, 305,
	624, 641, 655, 704, 4, 750, 654, 632, 626, 794,
	638, 147, 544, 578, 544, 116, 667, 622, 116, 646,
	796, 547, 121, 578, 838, 649, 675, 540, 8, 755,
	578, 543, 620, 302, 664, 708, 586, 116, 699, 299,
	422, 657, 611, 128, 690, 122, 123, 7, 546, 525,
	255, 256, 229, 229, 6, 705, 5, 672, 673, 695,
	231, 231, 752, 751, 576, 577, 367, 659, 254, 521,
	76, 77, 147, 277, 531, 837, 687, 688, 689, 686,
	685, 684, 534, 133, 870, 375, 111, 194, 229, 722,
	823, 775, 776, 715, 193, 254, 231, 145, 719, 641,
	192, 711, 700, 224, 254, 709, 544, 736, 252, 713,
	297, 544, 544, 720, 254, 186, 260, 717, 727, 420,
	680, 190, 164, 682, 578, 753, 45, 754, 195, 196,
	278, 255, 256, 189, 747, 586, 671, 869, 760, 761,
	254, 178, 224, 743, 254, 281, 756, 735, 229, 251,
	791, 621, 758, 164, 406, 625, 231, 524, 255, 256,
	757, 385, 733, 676, 191, 322, 187, 255, 256, 778,
	775, 776, 715, 698, 641, 224, 845, 255, 256, 769,
	839, 799, 767, 597, 792, 544, 762, 544, 780, 332,
	784, 777, 765, 779, 609, 308, 773, 642, 770, 782,
	807, 691, 766, 255, 256, 718, 795, 255, 256, 118,
	669, 279, 280, 197, 199, 198, 817, 633, 628, 785,
	229, 564, 812, 824, 810, 825, 554, 409, 231, 1,
	607, 831, 610, 608, 659, 544, 37, 681, 679, 803,
	842, 678, 221, 830, 223, 813, 578, 846, 833, 835,
	855, 848, 841, 687, 688, 689, 686, 685, 684, 42,
	864, 854, 167, 168, 161, 162, 160, 163, 165, 166,
	863, 178, 321, 912, 872, 804, 873, 800, 868, 748,
	877, 529, 570, 164, 861, 41, 879, 666, 829, 365,
	148, 144, 855, 141, 782, 878, 651, 15, 882, 14,
	519, 606, 266, 854, 888, 889, 48, 47, 890, 87,
	88, 89, 90, 91, 107, 49, 82, 80, 73, 74,
	250, 75, 71, 247, 896, 893, 61, 264, 897, 60,
	898, 902, 901, 900, 853, 578, 852, 163, 165, 166,
	586, 178, 851, 850, 677, 907, 44, 909, 572, 910,
	737, 663, 860, 164, 55, 56, 915, 645, 309, 117,
	57, 296, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 379, 51, 84, 52, 3, 433, 744,
	670, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 12,
	22, 32, 0, 0, 33, 11, 0, 23, 0, 28,
	85, 86, 9, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 10,
	100, 96, 111, 0, 59, 0, 31, 13, 636, 155,
	72, 103, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 0, 75, 0, 179, 0, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 0, 0, 0, 0, 55, 56,
	0, 0, 0, 0, 57, 164, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 12, 22, 32, 0, 0, 33, 11,
	0, 23, 0, 28, 85, 86, 9, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 10, 100, 96, 111, 0, 59, 0,
	31, 13, 537, 426, 72, 103, 105, 87, 88, 89,
	90, 91, 0, 0, 0, 0, 73, 74, 179, 75,
	180, 152, 153, 157, 159, 158, 171, 172, 169, 170,
	177, 173, 174, 175, 176, 167, 168, 161, 162, 160,
	163, 165, 166, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 0, 164, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 24,
	76, 77, 0, 0, 0, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 12, 22, 32,
	0, 0, 33, 11, 0, 23, 0, 28, 85, 86,
	9, 38, 39, 40, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 10, 100, 96,
	111, 0, 59, 0, 31, 13, 156, 155, 72, 103,
	105, 87, 88, 89, 90, 91, 0, 0, 0, 0,
	73, 74, 0, 75, 0, 179, 0, 180, 152, 153,
	157, 159, 158, 171, 172, 169, 170, 177, 173, 174,
	175, 176, 167, 168, 161, 162, 160, 163, 165, 166,
	0, 178, 0, 0, 0, 0, 55, 56, 0, 0,
	0, 0, 57, 164, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 24, 76, 77, 0, 0, 0, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 59, 0, 31, 13,
	916, 0, 72, 103, 105, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 73, 74, 179, 75, 180, 152,
	153, 157, 159, 158, 171, 172, 169, 170, 177, 173,
	174, 175, 176, 167, 168, 161, 162, 160, 163, 165,
	166, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 0, 0, 164, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 24, 76, 77,
	0, 0, 0, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	59, 0, 31, 13, 911, 0, 72, 103, 105, 87,
	88, 89, 90, 91, 0, 0, 0, 0, 73, 74,
	0, 75, 180, 152, 153, 157, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 0, 164, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 59, 0, 31, 13, 904, 0,
	72, 103, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 0, 75, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	164, 0, 0, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 903,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 59, 0,
	31, 13, 0, 0, 72, 103, 105, 87, 88, 89,
	90, 91, 0, 0, 0, 0, 73, 74, 0, 75,
	0, 157, 159, 158, 171, 172, 169, 170, 177, 173,
	174, 175, 176, 167, 168, 161, 162, 160, 163, 165,
	166, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 164, 0, 0, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 24,
	76, 77, 0, 0, 0, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	316, 38, 39, 40, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 59, 0, 31, 13, 895, 0, 72, 103,
	105, 87, 88, 89, 90, 91, 0, 0, 0, 0,
	73, 74, 0, 75, 0, 0, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 56, 164, 0,
	0, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 24, 76, 77, 0, 0, 0, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 59, 0, 31, 13,
	894, 0, 72, 103, 105, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 73, 74, 0, 75, 158, 171,
	172, 169, 170, 177, 173, 174, 175, 176, 167, 168,
	161, 162, 160, 163, 165, 166, 0, 178, 161, 162,
	160, 163, 165, 166, 0, 178, 0, 0, 0, 164,
	55, 56, 0, 0, 0, 0, 57, 164, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 24, 76, 77,
	0, 0, 0, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	59, 0, 31, 13, 871, 0, 72, 103, 105, 87,
	88, 89, 90, 91, 0, 0, 0, 0, 73, 74,
	0, 75, 171, 172, 169, 170, 177, 173, 174, 175,
	176, 167, 168, 161, 162, 160, 163, 165, 166, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 55, 56, 0, 0, 0, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 867, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 59, 0, 31, 13, 0, 0,
	72, 103, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 0, 75, 173, 174, 175, 176,
	167, 168, 161, 162, 160, 163, 165, 166, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 0, 0, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 787, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 59, 0,
	31, 13, 0, 0, 72, 103, 105, 87, 88, 89,
	90, 91, 0, 0, 0, 0, 73, 74, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 201, 202, 203, 205, 206,
	207, 208, 209, 210, 211, 212, 204, 0, 0, 0,
	0, 0, 55, 56, 0, 0, 0, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 213, 214, 0, 0, 24,
	76, 77, 0, 0, 0, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 771, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	316, 38, 39, 40, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 59, 0, 31, 13, 0, 0, 72, 103,
	105, 87, 88, 89, 90, 91, 0, 0, 0, 0,
	73, 74, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 56, 0, 0,
	0, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 694, 24, 76, 77, 0, 0, 0, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 59, 0, 31, 13,
	0, 0, 72, 103, 105, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 73, 74, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 0, 0, 0, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 24, 76, 77,
	0, 0, 0, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	59, 0, 31, 13, 567, 0, 72, 103, 105, 87,
	88, 89, 90, 91, 0, 0, 0, 0, 73, 74,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 0, 0, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 24, 76, 77, 0, 0, 0, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 59, 0, 31, 13, 310, 0,
	72, 103, 105, 87, 88, 89, 90, 91, 0, 0,
	0, 0, 73, 74, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 0, 0, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 24, 76, 77, 0, 0,
	0, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 59, 0,
	31, 13, 0, 0, 72, 103, 105, 441, 442, 443,
	444, 445, 0, 446, 447, 448, 484, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 451, 0, 454, 455, 456, 435,
	436, 437, 438, 439, 440, 452, 453, 0, 0, 432,
	0, 104, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 487,
	488, 489, 490, 491, 479, 480, 481, 482, 483, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 499, 497, 498, 494, 495, 0, 486, 492, 493,
	500, 501, 503, 502, 504, 505, 441, 442, 443, 444,
	445, 0, 446, 447, 448, 484, 485, 496, 507, 506,
	0, 0, 0, 0, 0, 431, 0, 0, 0, 0,
	105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 451, 0, 454, 455, 456, 435, 436,
	437, 438, 439, 440, 452, 453, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 487, 488,
	489, 490, 491, 479, 480, 481, 482, 483, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 0,
	499, 497, 498, 494, 495, 0, 486, 492, 493, 500,
	501, 503, 502, 504, 505, 0, 0, 0, 0, 0,
	0, 87, 88, 89, 90, 91, 856, 507, 506, 111,
	73, 74, 0, 75, 0, 881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 56, 0, 0,
	0, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 24, 0, 0, 0, 0, 0, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	132, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 59, 0, 31, 13,
	0, 0, 72, 103, 105, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 73, 74, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 0, 0, 0, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 24, 0, 0,
	0, 0, 0, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 132, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 0, 0,
	0, 0, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	59, 0, 31, 13, 0, 0, 72, 103, 105, 441,
	442, 443, 444, 445, 0, 446, 447, 448, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 451, 0, 454, 455,
	456, 435, 436, 437, 438, 439, 440, 452, 453, 0,
	0, 857, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 487, 488, 489, 490, 491, 479, 480, 481, 482,
	483, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 499, 497, 498, 494, 495, 0, 486,
	492, 493, 500, 501, 503, 502, 504, 505, 0, 0,
	0, 0, 0, 0, 87, 88, 89, 90, 91, 856,
	507, 506, 111, 73, 74, 0, 75, 0, 847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	56, 0, 0, 0, 0, 57, 0, 58, 53, 54,
	62, 63, 64, 65, 66, 67, 68, 70, 0, 51,
	84, 52, 0, 0, 0, 0, 24, 0, 0, 0,
	0, 0, 69, 46, 92, 93, 35, 0, 104, 0,
	26, 0, 0, 0, 109, 25, 17, 16, 0, 18,
	0, 29, 0, 30, 0, 0, 19, 0, 0, 0,
	20, 21, 34, 132, 0, 22, 32, 0, 0, 33,
	0, 0, 23, 0, 28, 85, 86, 0, 0, 0,
	0, 0, 0, 0, 50, 108, 0, 101, 97, 98,
	99, 94, 95, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 133, 100, 96, 111, 0, 59,
	0, 31, 13, 0, 0, 72, 103, 105, 87, 88,
	89, 90, 91, 0, 0, 0, 0, 73, 74, 0,
	75, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 56, 0, 0, 0, 0, 57,
	0, 58, 53, 54, 62, 63, 64, 65, 66, 67,
	68, 70, 0, 51, 84, 52, 0, 0, 0, 0,
	24, 0, 0, 0, 0, 0, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 132, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 85,
	86, 0, 0, 0, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 0, 59, 0, 31, 13, 0, 0, 72,
	103, 105, 87, 88, 89, 90, 91, 0, 0, 0,
	0, 73, 74, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 56, 0,
	0, 0, 0, 57, 0, 58, 53, 54, 62, 63,
	64, 65, 66, 67, 68, 70, 0, 51, 84, 52,
	0, 0, 0, 0, 24, 0, 0, 0, 0, 0,
	69, 46, 92, 93, 35, 0, 104, 0, 26, 0,
	0, 0, 109, 25, 17, 16, 0, 18, 0, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 132, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 85, 86, 0, 0, 0, 0, 0,
	0, 0, 50, 108, 0, 101, 97, 98, 99, 94,
	95, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 133, 100, 96, 111, 0, 59, 0, 31,
	13, 0, 0, 72, 103, 105, 87, 88, 89, 90,
	91, 0, 0, 0, 0, 73, 74, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 56, 0, 0, 0, 0, 57, 0, 58,
	53, 54, 62, 63, 64, 65, 66, 67, 68, 70,
	0, 51, 84, 52, 0, 0, 0, 0, 24, 0,
	0, 0, 0, 0, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 132, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 50, 108, 0, 101,
	97, 98, 99, 94, 95, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 133, 100, 96, 111,
	0, 59, 0, 31, 13, 0, 0, 72, 103, 105,
	441, 442, 443, 444, 445, 0, 446, 447, 448, 484,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 451, 0, 454,
	455, 456, 435, 436, 437, 438, 439, 440, 452, 453,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 487, 488, 489, 490, 491, 479, 480, 481,
	482, 483, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 499, 497, 498, 494, 495, 0,
	486, 492, 493, 500, 501, 503, 502, 504, 505, 441,
	442, 443, 444, 445, 0, 446, 447, 448, 484, 485,
	496, 507, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 451, 0, 454, 455,
	456, 687, 688, 689, 686, 685, 684, 452, 453, 0,
	0, 899, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 487, 488, 489, 490, 491, 479, 480, 481, 482,
	483, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 499, 497, 498, 494, 495, 0, 486,
	492, 493, 500, 501, 503, 502, 504, 505, 0, 0,
	0, 233, 0, 87, 88, 89, 90, 91, 232, 496,
	507, 506, 73, 74, 0, 75, 0, 0, 116, 0,
	104, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 0, 0, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 108, 51, 84,
	52, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 69, 0, 92, 93, 116, 133, 104, 0, 111,
	0, 230, 0, 109, 0, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 87, 88, 89,
	90, 91, 0, 0, 85, 86, 73, 74, 0, 75,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	225, 0, 0, 133, 100, 96, 111, 532, 59, 528,
	0, 0, 55, 56, 72, 103, 105, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 69, 0, 92, 93, 116,
	0, 104, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 87, 88, 89, 90, 91, 0, 0, 85, 86,
	73, 74, 0, 75, 0, 0, 0, 226, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 59, 0, 0, 0, 55, 56, 72, 103,
	105, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 69,
	0, 92, 93, 116, 0, 104, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 87, 88, 89, 90, 91,
	0, 0, 85, 86, 73, 74, 0, 75, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 600, 0,
	0, 133, 100, 96, 111, 532, 59, 0, 0, 0,
	55, 56, 72, 103, 105, 0, 57, 0, 58, 53,
	54, 62, 63, 64, 65, 66, 67, 68, 70, 0,
	51, 84, 52, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 69, 0, 92, 93, 116, 0, 104,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 87,
	88, 89, 90, 91, 0, 0, 85, 86, 73, 74,
	0, 75, 0, 0, 0, 601, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	59, 0, 0, 0, 55, 56, 72, 103, 105, 0,
	57, 0, 58, 53, 54, 62, 63, 64, 65, 66,
	67, 68, 70, 0, 51, 84, 52, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 69, 0, 92,
	93, 116, 424, 104, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 87, 88, 89, 90, 91, 0, 0,
	85, 86, 73, 74, 0, 75, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 387, 0, 0, 133,
	100, 96, 111, 0, 59, 0, 0, 0, 55, 56,
	72, 103, 105, 0, 57, 0, 58, 53, 54, 62,
	63, 64, 65, 66, 67, 68, 70, 0, 51, 84,
	52, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 69, 0, 92, 93, 116, 0, 104, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 87, 88, 89,
	90, 91, 0, 0, 85, 86, 73, 74, 0, 75,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 363, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 59, 0,
	0, 0, 55, 56, 72, 103, 105, 0, 57, 0,
	58, 53, 54, 62, 63, 64, 65, 66, 67, 68,
	70, 0, 51, 84, 52, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 69, 0, 92, 93, 116,
	0, 104, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 87, 88, 89, 90, 91, 0, 0, 85, 86,
	73, 74, 0, 75, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 59, 0, 0, 0, 55, 56, 72, 103,
	105, 0, 57, 0, 58, 53, 54, 62, 63, 64,
	65, 66, 67, 68, 70, 0, 51, 84, 52, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 69,
	0, 92, 93, 116, 0, 104, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 154, 156, 155,
	0, 133, 100, 96, 111, 0, 59, 0, 0, 0,
	0, 0, 72, 103, 105, 0, 0, 179, 0, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 154, 156, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 180, 152, 153, 157,
	159, 158, 171, 172, 169, 170, 177, 173, 174, 175,
	176, 167, 168, 161, 162, 160, 163, 165, 166, 0,
	178, 154, 156, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 180, 152, 153, 157, 159, 158, 171,
	172, 169, 170, 177, 173, 174, 175, 176, 167, 168,
	161, 162, 160, 163, 165, 166, 0, 178, 154, 156,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 763, 0, 0, 0, 0, 0, 0, 179, 0,
	180, 152, 153, 157, 159, 158, 171, 172, 169, 170,
	177, 173, 174, 175, 176, 167, 168, 161, 162, 160,
	163, 165, 166, 0, 178, 154, 156, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 706, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 180, 152, 153,
	157, 159, 158, 171, 172, 169, 170, 177, 173, 174,
	175, 176, 167, 168, 161, 162, 160, 163, 165, 166,
	0, 178, 154, 156, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 697, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 154,
	156, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 631, 0, 0, 0, 0, 0, 0, 0, 179,
	819, 180, 152, 153, 157, 159, 158, 171, 172, 169,
	170, 177, 173, 174, 175, 176, 167, 168, 161, 162,
	160, 163, 165, 166, 0, 178, 154, 156, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 612, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 180, 152,
	153, 157, 159, 158, 171, 172, 169, 170, 177, 173,
	174, 175, 176, 167, 168, 161, 162, 160, 163, 165,
	166, 0, 178, 154, 156, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 593, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 180, 152, 153, 157, 159,
	158, 171, 172, 169, 170, 177, 173, 174, 175, 176,
	167, 168, 161, 162, 160, 163, 165, 166, 0, 178,
	154, 156, 155, 0, 0, 0, 0, 0, 0, 0,
	820, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 180, 152, 153, 157, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 154, 156, 155,
	0, 0, 0, 0, 0, 0, 0, 371, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 154, 156, 155, 0, 0, 0,
	0, 0, 0, 0, 151, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 180, 152, 153, 157,
	159, 158, 171, 172, 169, 170, 177, 173, 174, 175,
	176, 167, 168, 161, 162, 160, 163, 165, 166, 0,
	178, 154, 156, 155, 0, 0, 0, 0, 0, 0,
	723, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 180, 152, 153, 157, 159, 158, 171,
	172, 169, 170, 177, 173, 174, 175, 176, 167, 168,
	161, 162, 160, 163, 165, 166, 0, 178, 154, 156,
	155, 0, 0, 0, 0, 0, 0, 693, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	180, 152, 153, 157, 159, 158, 171, 172, 169, 170,
	177, 173, 174, 175, 176, 167, 168, 161, 162, 160,
	163, 165, 166, 0, 178, 154, 156, 155, 0, 0,
	0, 0, 0, 0, 692, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 180, 152, 153,
	157, 159, 158, 171, 172, 169, 170, 177, 173, 174,
	175, 176, 167, 168, 161, 162, 160, 163, 165, 166,
	0, 178, 154, 156, 155, 0, 0, 0, 0, 0,
	0, 630, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 180, 152, 153, 157, 159, 158,
	171, 172, 169, 170, 177, 173, 174, 175, 176, 167,
	168, 161, 162, 160, 163, 165, 166, 0, 178, 154,
	156, 155, 0, 0, 0, 0, 0, 0, 629, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 180, 152, 153, 157, 159, 158, 171, 172, 169,
	170, 177, 173, 174, 175, 176, 167, 168, 161, 162,
	160, 163, 165, 166, 0, 178, 154, 156, 155, 0,
	0, 0, 0, 0, 0, 603, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 180, 152,
	153, 157, 159, 158, 171, 172, 169, 170, 177, 173,
	174, 175, 176, 167, 168, 161, 162, 160, 163, 165,
	166, 0, 178, 154, 156, 155, 0, 0, 0, 0,
	0, 0, 591, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 180, 152, 153, 157, 159,
	158, 171, 172, 169, 170, 177, 173, 174, 175, 176,
	167, 168, 161, 162, 160, 163, 165, 166, 0, 178,
	154, 156, 155, 0, 0, 0, 0, 0, 0, 555,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 180, 152, 153, 157, 159, 158, 171, 172,
	169, 170, 177, 173, 174, 175, 176, 167, 168, 161,
	162, 160, 163, 165, 166, 0, 178, 154, 156, 155,
	0, 0, 0, 0, 0, 0, 551, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 561, 180,
	152, 153, 157, 159, 158, 171, 172, 169, 170, 177,
	173, 174, 175, 176, 167, 168, 161, 162, 160, 163,
	165, 166, 0, 178, 0, 565, 154, 156, 155, 0,
	0, 410, 0, 415, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 180, 152,
	153, 157, 159, 158, 171, 172, 169, 170, 177, 173,
	174, 175, 176, 167, 168, 161, 162, 160, 163, 165,
	166, 0, 178, 154, 156, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 180, 152, 153, 157, 159,
	158, 171, 172, 169, 170, 177, 173, 174, 175, 176,
	167, 168, 161, 162, 160, 163, 165, 166, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164,
}
var yyPact = [...]int{

	-1000, -1000, 1193, -1000, -1000, -1000, -1000, -1000, -1000, 358,
	66, 425, 517, -1000, -1000, -1000, 355, 4902, 354, 351,
	6147, 6147, 6147, 17, 544, 6147, -1000, 6663, 350, 342,
	340, -1000, 77, 6147, 589, 695, 656, 553, 574, 568,
	561, 615, 700, 2847, -1000, -1000, 304, -1000, -1000, 158,
	302, 5463, 6147, 5282, 5282, 6147, 6147, 6147, 6147, 6147,
	-1000, -1000, 6147, 6147, 6147, 6147, 6147, 6147, 6147, 299,
	6147, -1000, 616, 6147, 6147, 6147, -1000, -1000, -1000, 607,
	-1000, 372, 371, -1000, 172, 297, 296, 6147, 6147, 295,
	6147, 6147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 540, 612, -1000, 32, 263, 263, 282, -1000,
	364, 511, 247, 511, -39, -1000, -1000, 197, 442, 259,
	436, 511, -1000, -1000, -1000, -1000, 258, -1000, 738, 3325,
	6147, 461, 656, 273, 6147, 6147, 195, 7323, 435, 192,
	191, 254, -1000, -1000, 253, 656, -1000, 732, 238, -1000,
	7323, -1000, 6147, 6147, 6147, 6147, 6147, 6147, 6147, 6147,
	6147, 6147, 6147, 6147, 6147, 6147, 6147, 6147, 6147, 6147,
	6147, 6147, 6147, 6147, 6147, 6147, 6147, 6147, 31, 6033,
	6147, 5282, 6147, 517, -1000, 6616, 190, -1000, 349, -1000,
	559, -1000, 399, 74, 400, 281, 4902, 280, 187, 690,
	5919, 6147, 6147, 6147, 6147, 6147, 6147, 6147, 6147, 6147,
	6147, 6147, 6147, -1000, -1000, 6147, 6147, 6147, 20, 5463,
	-50, 778, -1000, -1000, 7276, 5282, 279, -1000, -1000, 607,
	6147, -1000, -1000, 5463, -1000, 614, 614, 645, 614, 7133,
	614, 614, 614, 614, 614, 614, 614, -1000, 6147, 614,
	-78, 576, 586, -1000, 467, 5805, 5282, 1506, 1178, 1506,
	6147, 3653, 3653, 263, -1000, 370, 163, 263, -1000, -1000,
	6147, 6147, 7323, 7323, 6147, 7323, 7323, 567, -1000, 459,
	147, 576, 6147, -1000, -1000, 5349, -1000, 5463, 556, 364,
	182, 364, -1000, -1000, 1029, -1000, 181, 233, 430, 511,
	-1000, 434, 155, 522, 424, -1000, -1000, 517, 6147, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 278, 7086, 275, 274,
	175, 777, 7323, 7039, -1000, -1000, -1000, -1000, 17, -1000,
	483, 270, 6147, -1000, 6147, 1832, 1996, 1345, 1506, 1017,
	2160, 2484, 2321, 845, 845, 845, 645, 614, 645, 645,
	2329, 2329, 2643, 2643, 2643, 2643, 775, 775, 775, 775,
	2643, -1000, 7227, 6147, 1670, 772, -1000, -1000, 7180, 331,
	3161, -1000, -1000, 265, 255, 399, 395, 365, -1000, 71,
	365, 6147, -1000, 6147, -1000, -1000, 1506, 6147, 1506, 1506,
	1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506, 1506,
	6992, -51, 6522, 263, -1000, 6147, -1000, 245, 726, 5463,
	5691, -1000, 5463, 6945, -52, -1000, 242, -1000, -1000, -1000,
	-1000, 704, 516, 6475, 59, -30, 6147, -60, 263, -1000,
	-1000, 6147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 263, -1000,
	-1000, -1000, -1000, 17, 6147, 6147, 20, 17, 399, 769,
	-1000, 7323, 6898, 6851, -1000, -1000, -1000, 6428, -1000, 768,
	-1000, 7323, 6147, 240, -1000, -1000, 865, -1000, -1000, -1000,
	152, 413, -1000, 511, 385, 492, -1000, 140, -1000, 7323,
	225, 4738, 6147, 6147, 6147, 95, -1000, -1000, 255, 7323,
	-1000, 6147, 1670, 220, 5282, 269, 4574, -1000, 255, 213,
	761, -1000, 659, -1000, -1000, 489, -1000, -1000, -1000, 395,
	27, 365, -1000, 560, -1000, 752, -1000, 6804, 6757, 2997,
	2484, 4410, -1000, -1000, -1000, 6381, 716, 6147, -1000, 7323,
	5282, 262, 211, -1000, -1000, -1000, -64, -1000, -1000, 474,
	-1000, -1000, -1000, -1000, 6147, -1000, 1506, -1000, -1000, 6334,
	-1000, -1000, -68, 432, -1000, -1000, 395, 210, 6147, -1000,
	-1000, -1000, 209, 5577, 7323, -1000, -1000, 511, 63, 756,
	-1000, -1000, 511, 492, 173, -1000, -1000, -1000, 6710, 170,
	7323, -1000, 166, 160, 208, 1670, 149, -1000, 293, -1000,
	5282, 249, 5463, -1000, -1000, -1000, 427, 207, 414, 255,
	260, -1000, -1000, -11, -1000, 752, -1000, -1000, 477, 509,
	365, 737, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	426, 365, 4902, 681, 146, -1000, -1000, -1000, 6147, 1506,
	-1000, 5463, 716, -1000, -1000, 6287, -1000, -1000, -1000, -14,
	-1000, -1000, -1000, -1000, 753, -1000, 511, -31, 492, -1000,
	756, -1000, 2833, 144, 6147, 106, -1000, 622, -1000, 414,
	-1000, 3937, 269, -1000, 5463, -69, 2669, -1000, 239, -18,
	679, 679, 234, -1000, 481, -1000, -1000, 417, 186, -1000,
	724, 5066, 656, 84, -1000, -1000, -1000, -1000, -1000, -1000,
	3489, 1506, 206, -33, -1000, -34, 511, 753, -1000, -1000,
	-36, 134, -1000, 202, -1000, 6147, 199, 37, 131, 543,
	679, -1000, -1000, -1000, 201, 164, -1000, 128, 365, -1000,
	-19, 255, -23, 547, 723, 369, -1000, -1000, 477, 6147,
	132, -1000, 719, 5066, -1000, -1000, 4265, 3489, 716, -1000,
	174, -1000, -1000, -42, -1000, -1000, 4101, 6569, -1000, -1000,
	-1000, -1000, -1000, 123, -24, 2505, 3937, -1000, -1000, 609,
	-1000, 2341, -1000, -1000, -1000, 271, -1000, -1000, 468, 6147,
	-1000, -1000, 7323, -1000, 5066, 6147, 200, -1000, 3792, -1000,
	115, 109, 422, 445, 264, -1000, 273, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3489, -1000, -1000, 98, -1000, 159,
	365, -1000, 2177, 2013, -1000, 547, -1000, 7323, -1000, 7323,
	255, -1000, -1000, -1000, -1000, 365, 5205, 5066, 1849, 3489,
	1685, -1000, -28, -1000, -1000, -1000, -1000, 141, 752, -1000,
	-1000, 5066, -1000, 83, -1000, -1000, 679, -1000, -1000, 1521,
	-37, -1000, -1000, -1000, -1000, 1357, -1000,
}
var yyPgo = [...]int{

	0, 940, 939, 46, 686, 6, 938, 937, 28, 14,
	27, 79, 77, 70, 51, 933, 921, 29, 20, 919,
	94, 15, 25, 78, 918, 0, 62, 917, 912, 17,
	11, 911, 910, 36, 61, 49, 33, 908, 35, 906,
	72, 50, 904, 9, 903, 902, 896, 894, 13, 48,
	889, 887, 111, 98, 197, 886, 883, 882, 880, 8,
	877, 81, 43, 876, 55, 47, 875, 874, 867, 866,
	862, 97, 861, 860, 103, 551, 90, 1, 859, 857,
	31, 856, 853, 851, 850, 849, 848, 847, 7, 19,
	38, 24, 845, 842, 83, 841, 839, 837, 10, 4,
	835, 833, 832, 86, 819, 811, 18, 809, 668, 804,
	802, 44, 42, 32, 41, 2, 16, 3, 801, 798,
	797, 5, 796, 757, 789, 37, 12,
}
var yyR1 = [...]int{

	0, 124, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 117, 117, 74, 74,
	8, 8, 9, 9, 9, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 123,
	123, 16, 16, 19, 19, 125, 125, 17, 17, 22,
	22, 75, 75, 18, 18, 21, 21, 20, 20, 76,
	76, 77, 77, 24, 24, 24, 24, 24, 24, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 87, 87, 86, 86, 32, 32, 85,
	85, 33, 11, 1, 1, 2, 2, 12, 12, 122,
	122, 4, 4, 13, 14, 35, 35, 15, 15, 90,
	90, 29, 29, 29, 29, 28, 28, 30, 30, 31,
	31, 81, 81, 81, 81, 91, 91, 91, 126, 126,
	27, 27, 92, 92, 78, 78, 104, 104, 79, 79,
	88, 88, 93, 93, 36, 36, 37, 37, 116, 116,
	114, 114, 114, 115, 115, 94, 94, 95, 95, 38,
	38, 82, 82, 40, 83, 83, 41, 41, 89, 89,
	42, 42, 42, 42, 99, 99, 100, 100, 100, 105,
	105, 43, 43, 44, 45, 45, 45, 45, 47, 47,
	46, 101, 101, 118, 118, 119, 119, 120, 120, 121,
	121, 121, 121, 121, 121, 96, 96, 48, 48, 97,
	97, 98, 23, 84, 84, 49, 80, 80, 102, 102,
	51, 50, 50, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 3,
	3, 106, 106, 107, 107, 59, 59, 60, 60, 60,
	60, 52, 52, 53, 53, 56, 56, 58, 58, 58,
	103, 103, 64, 64, 64, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 65, 65, 65, 25, 25, 26, 26, 63, 66,
	66, 66, 67, 67, 67, 68, 68, 68, 68, 68,
	68, 34, 34, 34, 54, 54, 54, 69, 69, 70,
	70, 70, 70, 70, 70, 61, 61, 61, 62, 62,
	62, 111, 112, 112, 110, 110, 109, 109, 109, 109,
	109, 109, 108, 108, 108, 108, 71, 71, 71, 71,
	71, 71, 71, 72, 72, 72, 72, 55, 55, 55,
	55, 55, 55, 55, 73, 73, 113,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 0,
	1, 3, 1, 3, 2, 1, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 3, 4, 3, 1,
	1, 6, 7, 6, 7, 0, 1, 3, 1, 3,
	1, 3, 1, 1, 2, 1, 3, 1, 2, 3,
	1, 2, 0, 1, 1, 1, 1, 1, 4, 3,
	1, 1, 5, 7, 9, 5, 3, 3, 3, 3,
	3, 3, 1, 2, 6, 7, 9, 5, 1, 6,
	3, 3, 2, 0, 9, 1, 3, 0, 4, 1,
	3, 1, 10, 0, 1, 0, 1, 8, 7, 1,
	2, 1, 1, 5, 6, 0, 2, 0, 2, 0,
	2, 1, 2, 4, 3, 1, 4, 1, 4, 1,
	4, 3, 4, 4, 5, 0, 5, 4, 1, 1,
	1, 4, 5, 6, 1, 3, 6, 7, 3, 6,
	1, 0, 1, 3, 4, 6, 0, 1, 1, 2,
	1, 1, 1, 0, 2, 2, 4, 1, 3, 1,
	2, 3, 1, 1, 3, 1, 1, 3, 2, 0,
	3, 4, 3, 9, 1, 3, 1, 2, 3, 1,
	2, 2, 2, 3, 3, 3, 4, 3, 1, 1,
	3, 1, 3, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 1, 1, 0, 1, 3, 1,
	7, 3, 2, 6, 5, 3, 4, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 3,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 3, 2, 1, 2, 4, 2, 10, 11, 0,
	1, 0, 4, 3, 1, 1, 2, 2, 4, 4,
	2, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	0, 1, 4, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 3, 1,
	1, 1, 3, 3, 1, 1, 0, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 4, 4, 4, 4,
	1, 1, 1, 3, 1, 4, 2, 3, 3, 1,
	4, 4, 3, 3, 3, 1, 3, 1, 1, 3,
	1, 1, 0, 1, 3, 1, 3, 1, 4, 2,
	6, 4, 2, 2, 1, 2, 1, 4, 3, 3,
	3, 6, 3, 1, 1, 2, 1, 5, 4, 2,
	2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -124, -74, -7, -10, -11, -12, -13, -14, 127,
	154, 120, 114, 162, -78, -79, 97, 96, 99, 106,
	110, 111, 115, 122, 76, 95, 90, -25, 124, 101,
	103, 161, 116, 119, 112, 86, 113, -122, 128, 129,
	130, -92, -104, -34, -39, -4, 83, -68, -69, -66,
	134, 69, 71, 58, 59, 49, 50, 55, 57, 159,
	-50, -55, 60, 61, 62, 63, 64, 65, 66, 82,
	67, -57, 165, 13, 14, 16, 77, 78, -54, -65,
	-60, -52, -63, -64, 70, 125, 126, 4, 5, 6,
	7, 8, 84, 85, 141, 142, 156, 138, 139, 140,
	155, 137, 149, 166, 88, 167, -9, -67, 135, 94,
	-8, 157, 159, 157, -8, 162, 86, -19, -123, -75,
	-8, 157, 113, 114, -20, -21, -76, -23, 86, -77,
	159, -10, 113, 154, 159, 159, -26, -25, 76, -26,
	-26, -82, -40, -54, -83, 113, -41, 88, -84, -49,
	-25, 161, 33, 34, 10, 12, 11, 35, 37, 36,
	51, 49, 50, 52, 68, 53, 54, 47, 48, 40,
	41, 38, 39, 43, 44, 45, 46, 42, 56, 30,
	32, 159, 159, 159, 162, -25, 86, 31, -3, 37,
	128, -4, 86, 86, 86, 73, 74, 73, 75, 74,
	17, 18, 19, 20, 29, 21, 22, 23, 24, 25,
	26, 27, 28, 58, 59, 159, 69, 162, 133, 159,
	-111, -110, -112, -109, -25, 37, 134, -25, -34, -65,
	159, -64, 76, 69, -34, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -56, 159, -25,
	-58, 93, -108, -71, 88, 151, 152, -25, -25, -25,
	69, 153, 153, -53, -51, -52, -70, 128, -9, -54,
	159, 159, -25, -25, 159, -25, -25, 93, 150, -108,
	-108, 93, 162, -54, -94, 159, -94, 159, 157, -8,
	160, -8, 161, 162, -74, 161, -16, -75, -8, 157,
	161, 9, 157, 105, -8, -21, 161, 9, 17, -24,
	163, -10, -11, -12, -13, -14, 127, -25, 97, -3,
	-80, -102, -25, -25, 161, 161, 161, 161, 9, 161,
	9, -3, 17, 161, 9, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -53, -25, 31, -25, -85, -33, -34, -25, -76,
	-77, 161, 161, 86, 159, 86, -35, 131, 162, -15,
	131, 159, -10, 159, 161, 31, -25, 37, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -26, -25, -62, 86, 162, -54, -111, 164, 9,
	15, -34, 159, -25, -111, 160, -26, 165, -71, -71,
	93, 69, 133, -25, 87, -34, 15, -26, -61, -117,
	-54, 162, 86, -6, -5, 76, 77, 78, 79, 80,
	81, 4, 5, 6, 7, 8, 10, 11, 12, 56,
	70, 71, 82, 83, 73, 74, 75, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 111,
	112, 113, 114, 115, 13, 14, 134, 106, 107, 108,
	109, 110, 135, 136, 131, 132, 154, 129, 130, 128,
	137, 138, 140, 139, 141, 142, 156, 155, -61, -117,
	-54, -103, -94, 153, 69, 162, 133, 153, -103, -73,
	-113, -25, -25, -25, 150, 150, 166, -25, 160, -95,
	-38, -25, 158, -111, 86, 161, -74, 163, 161, 161,
	157, -8, -20, 157, -8, 162, 86, 157, -23, -25,
	159, 160, 159, 161, 9, 160, -40, -41, 159, -25,
	-49, 31, -25, -125, 9, 105, 160, 163, 159, -88,
	-93, -36, -37, -116, -114, 30, 135, 136, -9, -35,
	-90, 132, -9, -89, 162, -99, -9, -25, -25, -77,
	-25, 160, 164, 163, -94, -25, 160, 17, -112, -25,
	37, 134, -111, 160, 164, 160, -72, 86, 89, 50,
	88, 86, 163, 163, 69, 163, -25, 164, -94, -25,
	-94, -54, -26, -25, -62, -54, -35, -125, 9, 160,
	160, 163, -125, 9, -25, 160, 163, 162, 157, -17,
	-18, -21, -123, 162, 160, -27, -10, 31, -25, -80,
	-25, -81, 162, 31, -88, -25, 160, -33, -29, -34,
	37, 134, 69, -31, -10, 31, -87, -88, 160, 9,
	-1, 37, -114, -90, 162, -99, 163, -42, -118, -119,
	120, -120, 123, -121, 81, 80, 79, 76, 77, 78,
	-89, 9, 160, 160, 75, -10, 31, 163, 17, -25,
	-34, 159, 160, 164, 89, -25, 163, 164, 163, -90,
	160, -113, 160, -38, -22, -21, 162, -125, 9, -21,
	-17, 161, -77, 160, 161, -91, 161, -91, 161, 160,
	161, 160, 15, -34, 159, -111, -77, -32, 117, 118,
	160, -106, 120, -36, -2, 158, 162, -89, -96, -48,
	88, 114, 113, -99, -121, 163, -9, -10, 31, 161,
	-77, -25, -111, 164, 162, -125, 9, -22, 163, -18,
	-125, 98, 161, -80, 163, 108, 109, -91, 107, -91,
	-106, -30, -10, 31, -29, -111, 164, 104, 159, 162,
	-115, 31, -115, 159, 88, -89, 163, 161, 9, 17,
	-97, -98, -117, -3, -100, 161, 162, -77, 160, 163,
	-89, 163, -21, -125, 163, 161, 160, -25, -126, 31,
	161, 163, 161, 107, -115, -77, 160, 160, 161, -86,
	-9, -77, 162, -116, 162, -107, -59, 88, 37, 17,
	163, -48, -25, 161, 9, 17, -117, 163, -105, -43,
	-44, -45, -46, -47, -9, -117, 154, 86, 163, 163,
	-28, -10, 31, -126, -77, 161, 162, 102, -30, 88,
	35, 163, -77, -77, 160, 9, 88, -25, -98, -25,
	159, 163, -43, 161, 161, 121, 105, 153, -77, -77,
	-77, 161, 160, -9, 163, 163, -59, -88, -99, 86,
	-5, -121, -117, 100, 163, 162, 160, -117, 161, -77,
	-115, 163, -101, 161, 162, -77, 163,
}
var yyDef = [...]int{

	79, -2, 1, 78, 85, 86, 87, 88, 89, 0,
	0, 0, 0, 122, 130, 131, 0, 0, 0, 0,
	416, 416, 416, 0, 381, 0, 142, 0, 0, 0,
	0, 148, 0, 0, 0, 80, 369, 0, 0, 0,
	0, 204, 0, -2, 415, 169, 0, -2, 432, 418,
	0, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 350, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 360, 387, 0, 363, 0, 171, 172, 425, 410,
	430, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 0, 0, 434, 0, -2, 0, 0, 394,
	82, 0, 0, 0, 0, 79, 80, 0, 0, 0,
	115, 0, 99, 100, 112, 117, 0, 120, 0, 0,
	0, 0, 369, 0, 286, 0, 0, 417, 381, 0,
	0, 0, 232, 233, 0, 369, 235, 236, 0, 284,
	285, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 152, 0, 370,
	0, 170, 175, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 312, 0, 416, 0, 0, 452,
	0, 451, 455, 453, 457, 0, 0, 297, -2, 0,
	0, -2, 381, 452, -2, 331, 332, 333, 334, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 416, 359,
	0, 388, 389, 464, 466, 0, 0, 362, 364, 366,
	416, 0, 0, 390, 292, 383, 384, 390, 382, 439,
	0, 0, 479, 480, 0, 482, 483, 0, 406, 0,
	0, 0, 0, 436, 377, 0, 380, 452, 0, 84,
	0, 83, 91, 79, 0, 94, 0, 0, 115, 0,
	96, 0, 0, 0, 115, 118, 98, 0, 0, 121,
	129, 123, 124, 125, 126, 127, 0, 0, 0, 0,
	0, 287, 289, 0, 136, 137, 138, 139, 0, 140,
	0, 0, 0, 141, 0, 314, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 344, 0, 0, 349, 105, 159, -2, 0, 0,
	0, 150, 151, 0, -2, 175, 179, 0, 239, 0,
	0, 0, 205, 0, 208, 122, 295, 0, 298, 299,
	300, 301, 302, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 0, 433, 448, 0, 450, 0, 393, 452,
	0, -2, 452, 0, 0, -2, 0, 361, 465, 462,
	463, 0, 0, 0, 0, 419, 0, 0, 0, -2,
	-2, 0, 76, 77, 69, 70, 71, 72, 73, 74,
	75, 2, 3, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 0, -2,
	-2, 291, 391, 0, 416, 0, 0, 0, 175, 105,
	484, 486, 0, 0, 405, 408, 407, 0, 225, 105,
	227, 229, 0, 0, 81, 90, 0, 93, 95, 97,
	0, 115, 111, 0, 115, 0, 116, 0, 119, 282,
	0, 0, 0, 286, 0, 0, 231, 234, -2, 237,
	283, 0, 348, 0, 106, 0, 0, 153, -2, 0,
	210, 212, 163, 217, 218, 0, 220, 221, 222, 179,
	0, 0, 176, 265, 239, 178, 244, 0, 0, 0,
	296, 0, 426, 428, 429, 0, 0, 0, 454, 456,
	0, 0, 0, -2, 393, 386, 0, 473, 474, 0,
	476, 468, 469, 470, 0, 472, 365, 427, 378, 0,
	379, 443, 0, 0, 442, 444, 179, 0, 106, 478,
	481, 435, 0, 106, 230, 392, 92, 0, 0, 105,
	108, 113, 0, 0, 0, 132, 200, 122, 0, 0,
	288, 135, 195, 195, 0, 347, 0, 160, 0, -2,
	0, 0, 452, 147, 189, 122, 157, 0, 371, 216,
	165, 164, 219, 0, 239, 180, 173, 238, 0, 0,
	0, -2, 264, 267, 269, 270, 271, 272, 273, 274,
	265, 0, 0, 0, 0, 202, 122, 449, 0, 294,
	-2, 452, 461, 467, 475, 0, 446, 440, 441, 0,
	477, 485, 226, 228, 105, 110, 0, 0, 106, 114,
	105, 128, 0, 0, 286, 0, 195, 0, 195, 371,
	144, 0, 0, -2, 452, 0, 0, 149, 0, 0,
	223, 223, 0, 213, 0, 166, 239, 265, 0, 276,
	277, 0, 369, 0, 268, 174, 245, 203, 122, 209,
	206, 293, 0, 0, 239, 0, 106, 105, 103, 107,
	0, 0, 133, 0, 191, 0, 0, 0, 0, 0,
	223, 145, 187, 122, 0, 0, -2, 0, 0, 122,
	0, 0, 0, 0, 214, 265, 168, 240, 0, 0,
	0, 280, 0, 0, 242, 246, 0, 207, 460, 471,
	265, 101, 109, 0, 104, 201, 0, 0, 122, 198,
	199, 192, 193, 0, 0, 0, 0, 183, 190, 0,
	155, 0, 122, 224, 122, 0, 374, 375, 0, 0,
	167, 275, 278, 241, 0, 0, 0, 247, 0, 249,
	0, 0, 259, 0, 0, 258, 57, -2, 290, 102,
	134, 185, 122, 122, 197, 194, 122, 0, 146, 0,
	0, 158, 0, 0, 372, 0, 376, 215, 279, 281,
	-2, 248, 250, 251, 252, 0, 0, 0, 0, 196,
	0, 188, 0, 156, 162, 367, 373, 0, 253, 254,
	255, 257, 260, 0, 368, 122, 223, 256, 186, 0,
	0, 154, 243, 261, 122, 0, 262,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 55, 166, 3, 167, 54, 37, 3,
	159, 160, 52, 49, 9, 50, 51, 53, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 31, 161,
	43, 17, 45, 30, 67, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 69, 3, 164, 36, 3, 165, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 162, 35, 163, 57,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 10, 11, 12,
	13, 14, 15, 16, 18, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 32, 33, 34, 38,
	39, 40, 41, 42, 44, 46, 47, 48, 56, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 68, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:206
		{
			rootNode = yyDollar[1].node
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:215
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:220
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:221
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:221
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:221
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:221
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:221
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:221
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:225
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].token.String())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:226
		{
			yyVAL.node = Node("identifier").attribute("value", yyDollar[1].token.String())
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:230
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:231
		{
			yyVAL.node = Node("Statements")
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:235
		{
			yyVAL.node = Node("NamespaceParts").append(Node(yyDollar[1].token.String()))
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:236
		{
			yyVAL.node = yyDollar[1].node.append(Node(yyDollar[3].token.String()))
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:240
		{
			yyVAL.node = Node("Name").append(yyDollar[1].node)
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:241
		{
			yyVAL.node = Node("Name").append(yyDollar[3].node).attribute("Relative", "true")
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:242
		{
			yyVAL.node = Node("Name").append(yyDollar[2].node).attribute("FullyQualified", "true")
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:246
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:247
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:248
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:249
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:250
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:251
		{
			yyVAL.node = Node("THaltCompiler")
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:252
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node)
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:254
		{
			yyVAL.node = Node("Namespace").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:255
		{
			yyVAL.node = Node("Namespace").append(yyDollar[3].node)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:256
		{
			yyVAL.node = yyDollar[2].node
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:257
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[2].node)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:258
		{
			yyVAL.node = yyDollar[2].node
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:259
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[2].node)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:260
		{
			yyVAL.node = yyDollar[2].node
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:264
		{
			yyVAL.node = Node("FuncUseType")
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:265
		{
			yyVAL.node = Node("ConstUseType")
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:270
		{
			yyVAL.node = Node("GroupUse").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 102:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:272
		{
			yyVAL.node = Node("GroupUse").append(yyDollar[2].node).append(yyDollar[5].node)
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:277
		{
			yyVAL.node = Node("MixedGroupUse").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:279
		{
			yyVAL.node = Node("MixedGroupUse").append(yyDollar[2].node).append(yyDollar[5].node)
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:289
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:290
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:295
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:300
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.node = Node("UseList").append(yyDollar[1].node)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:306
		{
			yyVAL.node = yyDollar[2].node.append(yyDollar[1].node)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.node = Node("UseElem").append(yyDollar[1].node)
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:311
		{
			yyVAL.node = Node("UseElem").append(yyDollar[1].node).append(Node("as").attribute("value", yyDollar[3].token.String()))
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:316
		{
			yyVAL.node = yyDollar[2].node
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:320
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:325
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:326
		{
			yyVAL.node = Node("stmt")
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:330
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:331
		{
			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.node = yyDollar[1].node
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:334
		{
			yyVAL.node = yyDollar[1].node
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:335
		{
			yyVAL.node = Node("THaltCompiler")
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:338
		{
			yyVAL.node = yyDollar[2].node
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:340
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:342
		{
			yyVAL.node = Node("While").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("stmt").append(yyDollar[5].node))
		}
	case 133:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:348
		{
			yyVAL.node = Node("DoWhile").
				append(Node("expr").append(yyDollar[5].node)).
				append(Node("stmt").append(yyDollar[2].node))
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:354
		{
			yyVAL.node = Node("For").
				append(Node("expr1").append(yyDollar[3].node)).
				append(Node("expr2").append(yyDollar[5].node)).
				append(Node("expr3").append(yyDollar[7].node)).
				append(Node("stmt").append(yyDollar[9].node))
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:361
		{
			yyVAL.node = Node("Switch").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node)
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:362
		{
			yyVAL.node = Node("Break").append(yyDollar[2].node)
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:363
		{
			yyVAL.node = Node("Continue").append(yyDollar[2].node)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:364
		{
			yyVAL.node = Node("Return").append(yyDollar[2].node)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:365
		{
			yyVAL.node = yyDollar[2].node
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:366
		{
			yyVAL.node = yyDollar[2].node
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:367
		{
			yyVAL.node = yyDollar[2].node
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:368
		{
			yyVAL.node = Node("Echo").append(Node("InlineHtml").attribute("value", yyDollar[1].token.String()))
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:369
		{
			yyVAL.node = yyDollar[1].node
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:371
		{
			yyVAL.node = Node("Unset").append(yyDollar[3].node)
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:373
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachVariable").append(yyDollar[5].node)).
				append(yyDollar[7].node)
		}
	case 146:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:380
		{
			yyVAL.node = Node("Foreach").
				append(Node("expr").append(yyDollar[3].node)).
				append(Node("ForeachKey").append(yyDollar[5].node)).
				append(Node("ForeachVariable").append(yyDollar[7].node)).
				append(yyDollar[9].node)
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:387
		{
			yyVAL.node = Node("Declare").append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:388
		{
			yyVAL.node = Node("")
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:390
		{
			yyVAL.node = Node("Try").
				append(yyDollar[3].node).
				append(yyDollar[5].node).
				append(yyDollar[6].node)
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:396
		{
			yyVAL.node = Node("Throw").append(yyDollar[2].node)
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:397
		{
			yyVAL.node = Node("GoTo").attribute("Label", yyDollar[2].token.String())
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:398
		{
			yyVAL.node = Node("Label").attribute("name", yyDollar[1].token.String())
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:401
		{
			yyVAL.node = Node("CatchList")
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:403
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[4].node).append(Node("Variable").attribute("name", yyDollar[5].token.String())).append(yyDollar[8].node)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:406
		{
			yyVAL.node = Node("CatchNameList").append(yyDollar[1].node)
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:407
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:411
		{
			yyVAL.node = Node("")
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:412
		{
			yyVAL.node = Node("Finnaly").append(yyDollar[3].node)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:416
		{
			yyVAL.node = Node("UnsetVariablesList").append(yyDollar[1].node)
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:417
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 162:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:426
		{
			yyVAL.node = Node("Function").
				attribute("name", yyDollar[3].token.String()).
				attribute("returns_ref", yyDollar[2].value).
				append(yyDollar[5].node).
				append(yyDollar[7].node).
				append(yyDollar[9].node)
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:437
		{
			yyVAL.value = "false"
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:438
		{
			yyVAL.value = "true"
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:442
		{
			yyVAL.value = "false"
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.value = "true"
		}
	case 167:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:448
		{
			yyVAL.node = Node("Class").
				attribute("name", yyDollar[3].token.String()).
				append(yyDollar[1].node).
				append(Node("Extends").append(yyDollar[4].node)).
				append(Node("Implements").append(yyDollar[5].node)).
				append(yyDollar[7].node)
		}
	case 168:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:457
		{
			yyVAL.node = Node("Class").
				attribute("name", yyDollar[2].token.String()).
				append(Node("Extends").append(yyDollar[3].node)).
				append(Node("Implements").append(yyDollar[4].node)).
				append(yyDollar[6].node)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.node = Node("Class").attribute(yyDollar[1].value, "true")
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:468
		{
			yyVAL.node = yyDollar[1].node.attribute(yyDollar[2].value, "true")
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:472
		{
			yyVAL.value = "abstract"
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:473
		{
			yyVAL.value = "final"
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:477
		{
			yyVAL.node = Node("Trait").attribute("name", yyDollar[2].token.String()).append(yyDollar[4].node)
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:482
		{
			yyVAL.node = Node("Interface").
				attribute("name", yyDollar[2].token.String()).
				append(Node("Extends").append(yyDollar[3].node)).
				append(yyDollar[5].node)
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:491
		{
			yyVAL.node = Node("")
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:492
		{
			yyVAL.node = yyDollar[2].node
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:496
		{
			yyVAL.node = Node("")
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:497
		{
			yyVAL.node = yyDollar[2].node
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:501
		{
			yyVAL.node = Node("")
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:502
		{
			yyVAL.node = yyDollar[2].node
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:506
		{
			yyVAL.node = yyDollar[1].node
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:507
		{
			yyVAL.node = Node("Ref").append(yyDollar[2].node)
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:508
		{
			yyVAL.node = Node("List").append(yyDollar[3].node)
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:509
		{
			yyVAL.node = Node("ShortList").append(yyDollar[2].node)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:513
		{
			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:514
		{
			yyVAL.node = yyDollar[2].node
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:518
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:519
		{
			yyVAL.node = yyDollar[2].node
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:523
		{
			yyVAL.node = yyDollar[1].node
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:524
		{
			yyVAL.node = yyDollar[2].node
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:528
		{
			yyVAL.node = yyDollar[2].node
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:529
		{
			yyVAL.node = yyDollar[3].node
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:530
		{
			yyVAL.node = yyDollar[2].node
		}
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:531
		{
			yyVAL.node = yyDollar[3].node
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:535
		{
			yyVAL.node = Node("CaseList")
		}
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:537
		{
			yyVAL.node = yyDollar[1].node.append(Node("Case").append(Node("expr").append(yyDollar[3].node)).append(yyDollar[5].node))
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:541
		{
			yyVAL.node = yyDollar[1].node.append(Node("Default").append(yyDollar[4].node))
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:552
		{
			yyVAL.node = yyDollar[1].node
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:553
		{
			yyVAL.node = yyDollar[2].node
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:558
		{
			yyVAL.node = Node("If").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[5].node))
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:562
		{
			yyVAL.node = yyDollar[1].node.append(Node("ElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[6].node)))
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:568
		{
			yyVAL.node = yyDollar[1].node
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:570
		{
			yyVAL.node = yyDollar[1].node.append(Node("Else").append(Node("stmt").append(yyDollar[3].node)))
		}
	case 206:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:577
		{
			yyVAL.node = Node("AltIf").append(Node("expr").append(yyDollar[3].node)).append(Node("stmt").append(yyDollar[6].node))
		}
	case 207:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:581
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElseIf").append(Node("expr").append(yyDollar[4].node)).append(Node("stmt").append(yyDollar[7].node)))
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:587
		{
			yyVAL.node = yyDollar[1].node
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:589
		{
			yyVAL.node = yyDollar[1].node.append(Node("AltElse").append(Node("stmt").append(yyDollar[4].node)))
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:595
		{
			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:596
		{
			yyVAL.node = Node("Parameter list")
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:600
		{
			yyVAL.node = Node("Parameter list").append(yyDollar[1].node)
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:601
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:606
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token.String())
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:614
		{
			yyVAL.node = Node("Parameter").
				append(yyDollar[1].node).
				attribute("is_reference", yyDollar[2].value).
				attribute("is_variadic", yyDollar[3].value).
				attribute("var", yyDollar[4].token.String()).
				append(yyDollar[6].node)
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:625
		{
			yyVAL.node = Node("No type")
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:626
		{
			yyVAL.node = yyDollar[1].node
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:630
		{
			yyVAL.node = yyDollar[1].node
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:631
		{
			yyVAL.node = yyDollar[2].node
			yyVAL.node.attribute("nullable", "true")
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:635
		{
			yyVAL.node = Node("array type")
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:636
		{
			yyVAL.node = Node("callable type")
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:637
		{
			yyVAL.node = yyDollar[1].node
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:641
		{
			yyVAL.node = Node("No return type")
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:642
		{
			yyVAL.node = yyDollar[2].node
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:646
		{
			yyVAL.node = Node("ArgumentList")
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:647
		{
			yyVAL.node = yyDollar[2].node
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:651
		{
			yyVAL.node = Node("ArgumentList").append(yyDollar[1].node)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:652
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:656
		{
			yyVAL.node = yyDollar[1].node
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:657
		{
			yyVAL.node = Node("Unpack").append(yyDollar[2].node)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:661
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:662
		{
			yyVAL.node = Node("GlobalVarList").append(yyDollar[1].node)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:666
		{
			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:670
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:671
		{
			yyVAL.node = Node("StaticVarList").append(yyDollar[1].node)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:675
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token.String())
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:676
		{
			yyVAL.node = Node("StaticVariable").attribute("Name", yyDollar[1].token.String()).append(Node("expr").append(yyDollar[3].node))
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:680
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:681
		{
			yyVAL.node = Node("Stmt")
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:685
		{
			yyVAL.node = yyDollar[2].node.append(yyDollar[1].node)
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:686
		{
			yyVAL.node = yyDollar[3].node.append(yyDollar[1].node)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:687
		{
			yyVAL.node = Node("Use").append(yyDollar[2].node).append(yyDollar[3].node)
		}
	case 243:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:690
		{
			yyVAL.node = Node("Function").
				append(yyDollar[1].node).
				append(Node("name").append(yyDollar[4].node)).
				attribute("returns_ref", yyDollar[3].value).
				append(yyDollar[6].node).
				append(yyDollar[8].node).
				append(yyDollar[9].node)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:702
		{
			yyVAL.node = Node("NameList").append(yyDollar[1].node)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:703
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:707
		{
			yyVAL.node = Node("")
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:708
		{
			yyVAL.node = Node("")
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:709
		{
			yyVAL.node = yyDollar[2].node
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:713
		{
			yyVAL.node = Node("TraitAdaptionList").append(yyDollar[1].node)
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:714
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:718
		{
			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:719
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:724
		{
			yyVAL.node = Node("TraitPrecedence").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:728
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").attribute("value", yyDollar[3].token.String()))
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:730
		{
			yyVAL.node = yyDollar[1].node.append(Node("as").append(Node("reservedNonModifiers")))
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:732
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node).append(yyDollar[4].node)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:733
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:737
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:738
		{
			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:742
		{
			yyVAL.node = Node("TraitMethodRef").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:746
		{
			yyVAL.node = Node("")
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:747
		{
			yyVAL.node = yyDollar[2].node
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:751
		{
			yyVAL.node = yyDollar[1].node
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:752
		{
			yyVAL.node = Node("VarMemberModifier")
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:756
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:757
		{
			yyVAL.node = yyDollar[1].node
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:761
		{
			yyVAL.node = yyDollar[1].node
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:762
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:766
		{
			yyVAL.node = Node("PublicMemberModifier")
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:767
		{
			yyVAL.node = Node("ProtectedMemberModifier")
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:768
		{
			yyVAL.node = Node("PrivateMemberModifier")
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:769
		{
			yyVAL.node = Node("StaticMemberModifier")
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:770
		{
			yyVAL.node = Node("AbstractMemberModifier")
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:771
		{
			yyVAL.node = Node("FinalMemberModifier")
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:775
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:776
		{
			yyVAL.node = Node("PropertyList").append(yyDollar[1].node)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:780
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token.String())
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:781
		{
			yyVAL.node = Node("Property").attribute("name", yyDollar[1].token.String()).append(Node("Default").append(yyDollar[3].node))
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:785
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:786
		{
			yyVAL.node = Node("ConstList").append(yyDollar[1].node)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:790
		{
			yyVAL.node = Node("Const").append(yyDollar[3].node)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:794
		{
			yyVAL.node = Node("Const").attribute("name", yyDollar[1].token.String()).append(yyDollar[3].node)
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:798
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:799
		{
			yyVAL.node = Node("EchoList").append(yyDollar[1].node)
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:803
		{
			yyVAL.node = Node("Echo").append(yyDollar[1].node)
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:807
		{
			yyVAL.node = Node("")
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:808
		{
			yyVAL.node = yyDollar[1].node
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:811
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:812
		{
			yyVAL.node = Node("ExpressionList").append(yyDollar[1].node)
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:817
		{
			yyVAL.node = Node("AnonymousClass").
				attribute("name", yyDollar[1].token.String()).
				append(yyDollar[2].node).
				append(yyDollar[3].node).
				append(yyDollar[4].node).
				append(yyDollar[6].node)
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:828
		{
			yyVAL.node = Node("New").append(yyDollar[2].node).append(yyDollar[3].node)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:829
		{
			yyVAL.node = Node("New").append(yyDollar[2].node)
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:833
		{
			yyVAL.node = Node("Assign").append(yyDollar[3].node).append(yyDollar[6].node)
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:834
		{
			yyVAL.node = Node("Assign").append(yyDollar[2].node).append(yyDollar[5].node)
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:835
		{
			yyVAL.node = Node("Assign").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:836
		{
			yyVAL.node = Node("AssignRef").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:837
		{
			yyVAL.node = Node("Clone").append(yyDollar[2].node)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:838
		{
			yyVAL.node = Node("AssignAdd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:839
		{
			yyVAL.node = Node("AssignSub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:840
		{
			yyVAL.node = Node("AssignMul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:841
		{
			yyVAL.node = Node("AssignPow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:842
		{
			yyVAL.node = Node("AssignDiv").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:843
		{
			yyVAL.node = Node("AssignConcat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:844
		{
			yyVAL.node = Node("AssignMod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:845
		{
			yyVAL.node = Node("AssignAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:846
		{
			yyVAL.node = Node("AssignOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:847
		{
			yyVAL.node = Node("AssignXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:848
		{
			yyVAL.node = Node("AssignShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:849
		{
			yyVAL.node = Node("AssignShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:850
		{
			yyVAL.node = Node("PostIncrement").append(yyDollar[1].node)
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:851
		{
			yyVAL.node = Node("PreIncrement").append(yyDollar[2].node)
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:852
		{
			yyVAL.node = Node("PostDecrement").append(yyDollar[1].node)
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:853
		{
			yyVAL.node = Node("PreDecrement").append(yyDollar[2].node)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:854
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:855
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:856
		{
			yyVAL.node = Node("Or").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:857
		{
			yyVAL.node = Node("And").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:858
		{
			yyVAL.node = Node("Xor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:859
		{
			yyVAL.node = Node("BitwiseOr").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:860
		{
			yyVAL.node = Node("BitwiseAnd").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:861
		{
			yyVAL.node = Node("BitwiseXor").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:862
		{
			yyVAL.node = Node("Concat").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:863
		{
			yyVAL.node = Node("Add").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:864
		{
			yyVAL.node = Node("Sub").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:865
		{
			yyVAL.node = Node("Mul").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:866
		{
			yyVAL.node = Node("Pow").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:867
		{
			yyVAL.node = Node("Div").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:868
		{
			yyVAL.node = Node("Mod").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:869
		{
			yyVAL.node = Node("ShiftLeft").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:870
		{
			yyVAL.node = Node("ShiftRight").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:871
		{
			yyVAL.node = Node("UnaryPlus").append(yyDollar[2].node)
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:872
		{
			yyVAL.node = Node("UnaryMinus").append(yyDollar[2].node)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:873
		{
			yyVAL.node = Node("BooleanNot").append(yyDollar[2].node)
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:874
		{
			yyVAL.node = Node("BitwiseNot").append(yyDollar[2].node)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:875
		{
			yyVAL.node = Node("Identical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:876
		{
			yyVAL.node = Node("NotIdentical").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:877
		{
			yyVAL.node = Node("Equal").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:878
		{
			yyVAL.node = Node("NotEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:879
		{
			yyVAL.node = Node("Smaller").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:880
		{
			yyVAL.node = Node("SmallerOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:881
		{
			yyVAL.node = Node("Greater").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:882
		{
			yyVAL.node = Node("GreaterOrEqual").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:883
		{
			yyVAL.node = Node("Spaceship").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:884
		{
			yyVAL.node = Node("InstanceOf").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:885
		{
			yyVAL.node = yyDollar[2].node
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:886
		{
			yyVAL.node = yyDollar[1].node
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:887
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[3].node).append(yyDollar[5].node)
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:888
		{
			yyVAL.node = Node("Ternary").append(yyDollar[1].node).append(yyDollar[4].node)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:889
		{
			yyVAL.node = Node("Coalesce").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:890
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:891
		{
			yyVAL.node = Node("CastInt").append(yyDollar[2].node)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:892
		{
			yyVAL.node = Node("CastDouble").append(yyDollar[2].node)
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:893
		{
			yyVAL.node = Node("CastString").append(yyDollar[2].node)
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:894
		{
			yyVAL.node = Node("CastArray").append(yyDollar[2].node)
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:895
		{
			yyVAL.node = Node("CastObject").append(yyDollar[2].node)
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:896
		{
			yyVAL.node = Node("CastBool").append(yyDollar[2].node)
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:897
		{
			yyVAL.node = Node("CastUnset").append(yyDollar[2].node)
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:898
		{
			yyVAL.node = Node("Exit").append(yyDollar[2].node)
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:899
		{
			yyVAL.node = Node("Silence").append(yyDollar[2].node)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:900
		{
			yyVAL.node = yyDollar[1].node
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:901
		{
			yyVAL.node = Node("ShellExec").append(yyDollar[2].node)
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:902
		{
			yyVAL.node = Node("Print").append(yyDollar[2].node)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:903
		{
			yyVAL.node = Node("Yield")
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:904
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node)
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:905
		{
			yyVAL.node = Node("Yield").append(yyDollar[2].node).append(yyDollar[4].node)
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:906
		{
			yyVAL.node = Node("YieldFrom").append(yyDollar[2].node)
		}
	case 367:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:908
		{
			yyVAL.node = Node("Closure").
				attribute("returns_ref", yyDollar[2].value).
				append(yyDollar[4].node).
				append(yyDollar[6].node).
				append(yyDollar[7].node).
				append(yyDollar[9].node)
		}
	case 368:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:917
		{
			yyVAL.node = Node("StaticClosure").
				attribute("returns_ref", yyDollar[3].value).
				append(yyDollar[5].node).
				append(yyDollar[7].node).
				append(yyDollar[8].node).
				append(yyDollar[10].node)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:928
		{
			yyVAL.value = "false"
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:929
		{
			yyVAL.value = "true"
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:933
		{
			yyVAL.node = Node("")
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:934
		{
			yyVAL.node = yyDollar[3].node
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:938
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:939
		{
			yyVAL.node = Node("ClosureUses").append(yyDollar[1].node)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:943
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token.String())
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:944
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token.String()).attribute("ref", "true")
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:948
		{
			yyVAL.node = Node("FunctionCall").append(yyDollar[1].node).append(yyDollar[2].node)
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:950
		{
			yyVAL.node = Node("StaticCall").append(yyDollar[1].node).append(yyDollar[3].node).append(yyDollar[4].node)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:952
		{
			yyVAL.node = Node("StaticCall").append(yyDollar[1].node).append(yyDollar[3].node).append(yyDollar[4].node)
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:953
		{
			yyVAL.node = Node("Call").append(yyDollar[1].node).append(yyDollar[2].node)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:957
		{
			yyVAL.node = Node("Static")
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:958
		{
			yyVAL.node = yyDollar[1].node
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:962
		{
			yyVAL.node = yyDollar[1].node
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:963
		{
			yyVAL.node = yyDollar[1].node
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:967
		{
			yyVAL.node = Node("")
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:968
		{
			yyVAL.node = yyDollar[2].node
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:972
		{
			yyVAL.node = Node("EmptyBackticks")
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:973
		{
			yyVAL.node = Node("String").attribute("value", yyDollar[1].token.String())
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:974
		{
			yyVAL.node = yyDollar[1].node
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:978
		{
			yyVAL.node = Node("ArgumentList")
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:979
		{
			yyVAL.node = yyDollar[1].node
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:983
		{
			yyVAL.node = yyDollar[3].node
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:984
		{
			yyVAL.node = yyDollar[2].node
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:985
		{
			yyVAL.node = Node("String").attribute("value", yyDollar[1].token.String())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:989
		{
			yyVAL.node = Node("Scalar").append(Node("Lnumber").attribute("value", yyDollar[1].token.String()))
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:990
		{
			yyVAL.node = Node("Scalar").append(Node("Dnumber").attribute("value", yyDollar[1].token.String()))
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:991
		{
			yyVAL.node = Node("Scalar").append(Node("__LINE__"))
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:992
		{
			yyVAL.node = Node("Scalar").append(Node("__FILE__"))
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:993
		{
			yyVAL.node = Node("Scalar").append(Node("__DIR__"))
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:994
		{
			yyVAL.node = Node("Scalar").append(Node("__TRAIT__"))
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:995
		{
			yyVAL.node = Node("Scalar").append(Node("__METHOD__"))
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:996
		{
			yyVAL.node = Node("Scalar").append(Node("__FUNCTION__"))
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:997
		{
			yyVAL.node = Node("Scalar").append(Node("__NAMESPACE__"))
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:998
		{
			yyVAL.node = Node("Scalar").append(Node("__CLASS__"))
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc").attribute("value", yyDollar[2].token.String()))
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.node = Node("Scalar").append(Node("Heredoc"))
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1003
		{
			yyVAL.node = yyDollar[2].node
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.node = yyDollar[2].node
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.node = yyDollar[1].node
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node)
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1011
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1013
		{
			yyVAL.node = Node("Const").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1017
		{
			yyVAL.node = yyDollar[1].node
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1018
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.node = Node("")
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1023
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1027
		{
			yyVAL.node = yyDollar[1].node
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1031
		{
			yyVAL.node = yyDollar[1].node
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.node = yyDollar[2].node
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1033
		{
			yyVAL.node = yyDollar[1].node
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1037
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.node = yyDollar[2].node
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1043
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.node = Node("Dim").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1045
		{
			yyVAL.node = Node("Dim").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1046
		{
			yyVAL.node = Node("Dim").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.node = Node("MethodCall").append(yyDollar[1].node).append(yyDollar[3].node).append(yyDollar[4].node)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1049
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1053
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1055
		{
			yyVAL.node = Node("Property").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1059
		{
			yyVAL.node = Node("Variable").attribute("name", yyDollar[1].token.String())
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1060
		{
			yyVAL.node = Node("Variable").append(yyDollar[3].node)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1061
		{
			yyVAL.node = Node("Variable").append(yyDollar[2].node)
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1066
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.node = Node("StaticProp").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.node = yyDollar[1].node
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1073
		{
			yyVAL.node = Node("Dim").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.node = Node("Dim").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1075
		{
			yyVAL.node = Node("Property").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1077
		{
			yyVAL.node = Node("StaticProperty").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1079
		{
			yyVAL.node = Node("StaticProperty").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1083
		{
			yyVAL.node = yyDollar[1].node
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.node = yyDollar[2].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1085
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1089
		{
			yyVAL.node = Node("PropertyName").attribute("value", yyDollar[1].token.String())
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.node = yyDollar[2].node
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1091
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1095
		{ /* TODO: allow single trailing comma */
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1099
		{
			yyVAL.node = Node("")
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1105
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[3].node)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.node = Node("ArrayPairList").append(yyDollar[1].node)
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1111
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node)
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1112
		{
			yyVAL.node = Node("ArrayElement").append(yyDollar[1].node).append(Node("Ref").append(yyDollar[4].node))
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1113
		{
			yyVAL.node = Node("ArrayElement").append(Node("Ref").append(yyDollar[2].node))
		}
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1115
		{
			yyVAL.node = Node("ArrayElement").
				append(yyDollar[1].node).
				append(Node("ArrayList").append(yyDollar[5].node))
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1121
		{
			yyVAL.node = Node("ArrayElement").
				append(Node("ArrayList").append(yyDollar[3].node))
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.node = yyDollar[1].node.append(yyDollar[2].node)
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1129
		{
			yyVAL.node = yyDollar[1].node.append(Node("String").attribute("value", yyDollar[2].token.String()))
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.node = Node("EncapsList").append(yyDollar[1].node)
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.node = Node("EncapsList").append(Node("String").attribute("value", yyDollar[1].token.String())).append(yyDollar[2].node)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1135
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token.String())
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token.String()).append(Node("offset").append(yyDollar[3].node))
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1137
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[1].token.String()).append(Node("property").attribute("value", yyDollar[3].token.String()))
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.node = Node("Variable").append(Node("expr").append(yyDollar[2].node))
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1139
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token.String())
		}
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1141
		{
			yyVAL.node = Node("Variable").attribute("value", yyDollar[2].token.String()).append(Node("offset").append(yyDollar[4].node))
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.node = yyDollar[2].node
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1145
		{
			yyVAL.node = Node("OffsetString").attribute("value", yyDollar[1].token.String())
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1146
		{
			yyVAL.node = Node("OffsetNumString").attribute("value", yyDollar[1].token.String())
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1147
		{
			yyVAL.node = Node("OffsetNegateNumString").attribute("value", yyDollar[2].token.String())
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.node = Node("OffsetVariable").attribute("value", yyDollar[1].token.String())
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.node = yyDollar[3].node
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.node = Node("Empty").append(yyDollar[3].node)
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.node = Node("Include").append(yyDollar[2].node)
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1155
		{
			yyVAL.node = Node("IncludeOnce").append(yyDollar[2].node)
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.node = Node("Eval").append(yyDollar[3].node)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1157
		{
			yyVAL.node = Node("Require").append(yyDollar[2].node)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.node = Node("RequireOnce").append(yyDollar[2].node)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1162
		{
			yyVAL.node = yyDollar[1].node
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.node = Node("AndIsset").append(yyDollar[1].node).append(yyDollar[3].node)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.node = Node("Isset").append(yyDollar[1].node)
		}
	}
	goto yystack /* stack new state and value */
}
