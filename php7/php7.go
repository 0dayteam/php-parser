//line php7/php7.y:2
package php7

import __yyfmt__ "fmt"

//line php7/php7.y:2
import (
	"strconv"
	"strings"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign_op"
	"github.com/z7zmey/php-parser/node/expr/binary_op"
	"github.com/z7zmey/php-parser/node/expr/cast"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"
)

//line php7/php7.y:21
type yySymType struct {
	yys               int
	node              node.Node
	token             token.Token
	boolWithToken     boolWithToken
	list              []node.Node
	foreachVariable   foreachVariable
	nodesWithEndToken *nodesWithEndToken
	str               string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php7/php7.y:2583

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	57, 420,
	78, 420,
	119, 420,
	125, 420,
	-2, 415,
	-1, 47,
	123, 423,
	-2, 432,
	-1, 83,
	57, 422,
	78, 422,
	119, 422,
	123, 425,
	125, 422,
	-2, 410,
	-1, 106,
	78, 383,
	-2, 412,
	-1, 228,
	57, 420,
	78, 420,
	119, 420,
	125, 420,
	-2, 311,
	-1, 231,
	123, 425,
	-2, 422,
	-1, 234,
	57, 420,
	78, 420,
	119, 420,
	125, 420,
	-2, 313,
	-1, 352,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 335,
	-1, 353,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 336,
	-1, 354,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 337,
	-1, 355,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 338,
	-1, 356,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 339,
	-1, 357,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 340,
	-1, 358,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 341,
	-1, 359,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 342,
	-1, 360,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 343,
	-1, 367,
	124, 161,
	135, 161,
	-2, 420,
	-1, 411,
	124, 460,
	126, 460,
	135, 460,
	-2, 420,
	-1, 415,
	57, 421,
	78, 421,
	119, 421,
	123, 424,
	125, 421,
	-2, 345,
	-1, 429,
	123, 446,
	-2, 413,
	-1, 430,
	123, 448,
	-2, 438,
	-1, 509,
	123, 446,
	-2, 414,
	-1, 510,
	123, 448,
	-2, 439,
	-1, 569,
	124, 211,
	-2, 216,
	-1, 594,
	123, 424,
	-2, 421,
	-1, 646,
	124, 211,
	-2, 216,
	-1, 651,
	124, 181,
	-2, 420,
	-1, 659,
	124, 211,
	-2, 216,
	-1, 684,
	124, 459,
	126, 459,
	135, 459,
	-2, 420,
	-1, 717,
	124, 182,
	-2, 420,
	-1, 737,
	12, 263,
	-2, 266,
	-1, 776,
	124, 181,
	-2, 420,
	-1, 778,
	124, 184,
	-2, 394,
	-1, 880,
	29, 76,
	-2, 80,
	-1, 912,
	124, 211,
	-2, 216,
}

const yyPrivate = 57344

const yyLast = 7209

var yyAct = [...]int{

	27, 129, 823, 836, 660, 859, 374, 576, 739, 434,
	872, 106, 835, 791, 664, 772, 809, 673, 783, 563,
	662, 137, 137, 137, 311, 650, 150, 4, 709, 631,
	698, 665, 530, 630, 185, 366, 320, 512, 376, 220,
	520, 403, 131, 79, 571, 315, 314, 222, 8, 7,
	136, 188, 224, 227, 146, 149, 235, 236, 237, 238,
	239, 127, 142, 240, 241, 242, 243, 244, 245, 246,
	125, 249, 139, 140, 257, 258, 259, 124, 2, 253,
	313, 312, 511, 6, 5, 428, 126, 164, 272, 273,
	868, 275, 276, 852, 890, 263, 268, 229, 229, 840,
	81, 839, 178, 866, 862, 891, 404, 682, 104, 833,
	830, 588, 566, 539, 333, 675, 329, 867, 189, 332,
	327, 110, 308, 307, 831, 306, 300, 301, 334, 104,
	330, 317, 114, 120, 328, 322, 323, 675, 757, 307,
	301, 83, 702, 726, 284, 286, 624, 860, 619, 564,
	554, 409, 178, 335, 336, 337, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 164,
	362, 364, 104, 368, 319, 265, 370, 728, 924, 778,
	268, 691, 305, 687, 294, 231, 231, 331, 608, 78,
	378, 386, 388, 389, 390, 391, 392, 393, 394, 395,
	396, 397, 398, 399, 218, 405, 400, 137, 402, 604,
	224, 382, 422, 143, 605, 229, 163, 165, 166, 164,
	105, 413, 853, 289, 224, 291, 282, 43, 595, 516,
	298, 178, 583, 304, 598, 408, 601, 599, 260, 137,
	886, 105, 818, 817, 807, 799, 423, 782, 771, 407,
	517, 137, 725, 861, 715, 429, 509, 401, 696, 229,
	369, 521, 522, 414, 361, 523, 217, 694, 686, 265,
	162, 161, 216, 527, 269, 648, 531, 636, 224, 912,
	421, 228, 234, 626, 842, 596, 587, 290, 826, 416,
	229, 515, 811, 810, 105, 283, 780, 514, 718, 549,
	685, 427, 167, 168, 160, 163, 165, 166, 164, 4,
	659, 646, 644, 231, 285, 645, 178, 533, 569, 552,
	550, 418, 419, 559, 412, 150, 383, 381, 558, 287,
	8, 7, 274, 116, 288, 104, 271, 270, 508, 248,
	518, 109, 219, 215, 183, 182, 181, 418, 135, 419,
	419, 418, 134, 600, 562, 162, 161, 231, 130, 548,
	305, 116, 536, 104, 112, 6, 5, 824, 269, 542,
	568, 293, 578, 292, 579, 557, 575, 580, 581, 573,
	560, 556, 577, 108, 928, 749, 927, 918, 231, 160,
	163, 165, 166, 164, 385, 187, 586, 156, 155, 178,
	224, 590, 133, 224, 570, 111, 766, 767, 406, 367,
	901, 541, 900, 544, 766, 767, 885, 607, 848, 819,
	813, 232, 610, 180, 177, 806, 763, 750, 714, 712,
	133, 585, 116, 111, 710, 708, 179, 158, 162, 161,
	178, 705, 593, 553, 534, 538, 230, 589, 233, 232,
	535, 430, 510, 411, 384, 372, 609, 105, 152, 153,
	157, 159, 171, 172, 169, 170, 173, 174, 175, 176,
	167, 168, 160, 163, 165, 166, 164, 326, 325, 162,
	161, 324, 667, 668, 425, 105, 295, 805, 116, 802,
	104, 116, 800, 759, 812, 606, 907, 884, 857, 855,
	534, 133, 765, 801, 111, 137, 614, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 143, 254,
	534, 534, 788, 625, 420, 781, 731, 674, 574, 618,
	267, 184, 119, 417, 195, 196, 611, 787, 190, 623,
	252, 303, 116, 640, 322, 642, 635, 617, 615, 666,
	116, 4, 647, 700, 116, 613, 113, 133, 288, 716,
	111, 116, 736, 113, 572, 738, 638, 904, 671, 513,
	672, 669, 8, 7, 577, 303, 232, 122, 123, 683,
	641, 656, 303, 255, 256, 76, 77, 116, 377, 104,
	649, 197, 199, 198, 288, 109, 689, 679, 229, 229,
	115, 262, 261, 380, 305, 670, 632, 6, 5, 634,
	521, 133, 105, 303, 111, 531, 743, 744, 745, 742,
	741, 740, 121, 902, 526, 229, 543, 303, 629, 628,
	545, 706, 784, 299, 145, 547, 653, 108, 881, 903,
	701, 713, 318, 279, 280, 224, 147, 697, 669, 720,
	695, 297, 693, 254, 724, 544, 133, 544, 704, 111,
	254, 669, 254, 45, 711, 420, 540, 730, 669, 722,
	723, 145, 751, 752, 688, 232, 224, 747, 892, 792,
	302, 827, 746, 147, 719, 116, 229, 116, 729, 699,
	755, 748, 633, 116, 703, 632, 231, 231, 602, 322,
	230, 191, 654, 612, 118, 652, 406, 616, 756, 224,
	128, 105, 122, 123, 761, 753, 524, 255, 256, 794,
	793, 758, 760, 231, 255, 256, 255, 256, 669, 768,
	773, 770, 775, 546, 795, 764, 796, 785, 577, 789,
	544, 798, 254, 667, 668, 544, 544, 420, 777, 534,
	229, 743, 744, 745, 742, 741, 740, 808, 814, 766,
	767, 699, 133, 632, 375, 111, 816, 373, 804, 769,
	766, 767, 194, 822, 193, 192, 825, 186, 1, 37,
	815, 254, 821, 737, 231, 734, 277, 735, 379, 832,
	661, 529, 367, 651, 221, 519, 828, 858, 365, 254,
	871, 847, 144, 790, 281, 525, 255, 256, 849, 841,
	141, 321, 544, 148, 544, 846, 834, 658, 803, 684,
	254, 820, 844, 851, 865, 251, 669, 250, 838, 856,
	643, 869, 773, 926, 878, 864, 837, 882, 883, 223,
	42, 41, 877, 15, 278, 255, 256, 888, 231, 889,
	14, 597, 266, 893, 48, 887, 47, 107, 49, 896,
	82, 80, 894, 255, 256, 878, 897, 71, 247, 544,
	895, 61, 899, 877, 264, 60, 906, 876, 875, 874,
	717, 873, 733, 44, 255, 256, 663, 910, 721, 655,
	843, 637, 309, 911, 117, 296, 3, 433, 917, 920,
	913, 786, 916, 915, 577, 727, 0, 921, 0, 0,
	922, 0, 0, 0, 669, 0, 0, 925, 0, 0,
	929, 0, 87, 88, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 776, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 36, 12, 22, 32, 0,
	0, 33, 11, 0, 23, 0, 28, 85, 86, 9,
	38, 39, 40, 0, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 10, 100, 96,
	111, 0, 89, 90, 91, 0, 0, 0, 0, 84,
	52, 0, 0, 0, 73, 74, 24, 76, 77, 0,
	0, 0, 53, 54, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 103, 72, 13, 627, 31,
	0, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 70, 105, 87, 88, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 12, 22, 32,
	0, 0, 33, 11, 0, 23, 0, 28, 85, 86,
	9, 38, 39, 40, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 10, 100,
	96, 111, 0, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 24, 76, 77,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 13, 537,
	31, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 36, 12, 22,
	32, 0, 0, 33, 11, 0, 23, 0, 28, 85,
	86, 9, 38, 39, 40, 0, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 10,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 24, 76,
	77, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 13,
	0, 31, 0, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 0, 73, 74, 24,
	76, 77, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 103, 72,
	13, 930, 31, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 87, 88, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 36,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 316, 38, 39, 40, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 89, 90, 91, 0,
	0, 0, 0, 84, 52, 0, 0, 0, 73, 74,
	24, 76, 77, 0, 0, 0, 53, 54, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 103,
	72, 13, 923, 31, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 70, 105, 87, 88, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 0, 50, 108, 0, 101, 97, 98, 99, 94,
	95, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 133, 100, 96, 111, 0, 89, 90, 91,
	0, 0, 0, 0, 84, 52, 0, 0, 0, 73,
	74, 24, 76, 77, 0, 0, 0, 53, 54, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	103, 72, 13, 919, 31, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 70, 105, 87, 88,
	69, 46, 92, 93, 35, 0, 104, 0, 26, 0,
	0, 0, 109, 25, 17, 16, 0, 18, 0, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 36, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 85, 86, 316, 38, 39, 40, 0,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 89, 90,
	91, 0, 0, 0, 0, 84, 52, 0, 0, 0,
	73, 74, 24, 76, 77, 0, 0, 0, 53, 54,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 103, 72, 13, 909, 31, 0, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 70, 105, 87,
	88, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 0, 50, 108, 0, 101, 97, 98,
	99, 94, 95, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 133, 100, 96, 111, 0, 89,
	90, 91, 0, 0, 0, 0, 84, 52, 0, 0,
	0, 73, 74, 24, 76, 77, 0, 0, 0, 53,
	54, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 103, 72, 13, 908, 31, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 70, 105,
	87, 88, 69, 46, 92, 93, 35, 0, 104, 0,
	26, 0, 0, 0, 109, 25, 17, 16, 0, 18,
	905, 29, 0, 30, 0, 0, 19, 0, 0, 0,
	20, 21, 34, 36, 0, 22, 32, 0, 0, 33,
	0, 0, 23, 0, 28, 85, 86, 316, 38, 39,
	40, 0, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	89, 90, 91, 0, 0, 0, 0, 84, 52, 0,
	0, 0, 73, 74, 24, 76, 77, 0, 0, 0,
	53, 54, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 103, 72, 13, 0, 31, 0, 59,
	0, 51, 0, 0, 0, 56, 55, 57, 58, 70,
	105, 87, 88, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 0, 50, 108, 0, 101,
	97, 98, 99, 94, 95, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 133, 100, 96, 111,
	0, 89, 90, 91, 0, 0, 0, 0, 84, 52,
	0, 0, 0, 73, 74, 24, 76, 77, 0, 0,
	0, 53, 54, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 103, 72, 13, 854, 31, 0,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	70, 105, 87, 88, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 850, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 36, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 85, 86, 316,
	38, 39, 40, 0, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 89, 90, 91, 0, 0, 0, 0, 84,
	52, 0, 0, 0, 73, 74, 24, 76, 77, 0,
	0, 0, 53, 54, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 103, 72, 13, 0, 31,
	0, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 70, 105, 87, 88, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 779, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	316, 38, 39, 40, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 0, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 24, 76, 77,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 13, 0,
	31, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 762, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 36, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 85,
	86, 316, 38, 39, 40, 0, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 24, 76,
	77, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 13,
	0, 31, 0, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 678, 73, 74, 24,
	76, 77, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 103, 72,
	13, 0, 31, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 87, 88, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 36,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 316, 38, 39, 40, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 89, 90, 91, 0,
	0, 0, 0, 84, 52, 0, 0, 0, 73, 74,
	24, 76, 77, 0, 0, 0, 53, 54, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 103,
	72, 13, 567, 31, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 70, 105, 87, 88, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 0, 50, 108, 0, 101, 97, 98, 99, 94,
	95, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 133, 100, 96, 111, 0, 89, 90, 91,
	0, 0, 0, 0, 84, 52, 0, 0, 0, 73,
	74, 24, 76, 77, 0, 0, 0, 53, 54, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	103, 72, 13, 310, 31, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 70, 105, 87, 88,
	69, 46, 92, 93, 35, 0, 104, 0, 26, 0,
	0, 0, 109, 25, 17, 16, 0, 18, 0, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 36, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 85, 86, 316, 38, 39, 40, 0,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 89, 90,
	91, 0, 0, 0, 0, 84, 52, 0, 0, 0,
	73, 74, 24, 76, 77, 0, 0, 0, 53, 54,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 103, 72, 13, 0, 31, 0, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 70, 105, 441,
	442, 452, 453, 0, 0, 432, 0, 104, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 487, 488, 489, 490, 491,
	479, 480, 481, 482, 483, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 499, 497, 498,
	494, 495, 0, 0, 486, 492, 493, 500, 501, 503,
	502, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 507, 506, 0, 0, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 454, 455,
	456, 484, 485, 435, 436, 437, 438, 439, 440, 0,
	0, 87, 88, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 431, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 105,
	0, 20, 21, 34, 132, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 108, 0, 101,
	97, 98, 99, 94, 95, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 133, 100, 96, 111,
	0, 89, 90, 91, 0, 0, 0, 0, 84, 52,
	0, 0, 0, 73, 74, 24, 0, 0, 0, 0,
	0, 53, 54, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 103, 72, 13, 0, 31, 774,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	70, 105, 87, 88, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 132, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 89, 90, 91, 0, 0, 0, 0, 84,
	52, 0, 0, 0, 73, 74, 24, 0, 0, 0,
	0, 0, 53, 54, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 103, 72, 13, 0, 31,
	845, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 70, 105, 87, 88, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 132, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 0, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 24, 0, 0,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 13, 0,
	31, 680, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 132, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 85,
	86, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 24, 0,
	0, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 13,
	0, 31, 657, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 132, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 0, 73, 74, 24,
	0, 0, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 103, 72,
	13, 0, 31, 639, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 87, 88, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 132,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 178, 0,
	0, 133, 100, 96, 111, 0, 89, 90, 91, 0,
	0, 0, 0, 84, 52, 0, 0, 0, 73, 74,
	24, 0, 0, 177, 0, 0, 53, 54, 75, 62,
	63, 64, 65, 66, 67, 68, 158, 162, 161, 103,
	72, 13, 0, 31, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 70, 105, 154, 156, 155,
	178, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 177, 736, 0, 0, 738,
	0, 811, 810, 0, 0, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	743, 744, 745, 742, 741, 740, 0, 0, 0, 0,
	754, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 863, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 0, 0,
	0, 0, 692, 0, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 0, 0, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 156, 155,
	178, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 180, 177, 736, 0, 0, 738,
	681, 0, 0, 0, 0, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	743, 744, 745, 742, 741, 740, 0, 0, 677, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 829, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 736, 0,
	0, 738, 622, 0, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 743, 744, 745, 742, 741, 740, 0, 0,
	621, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 797, 0, 0, 154, 156, 155,
	178, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 180, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	736, 0, 0, 738, 603, 0, 0, 0, 0, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 743, 744, 745, 742, 741, 740,
	0, 0, 594, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 0, 0,
	0, 0, 584, 0, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 156, 155,
	178, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 180, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	0, 0, 0, 0, 0, 0, 561, 0, 0, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 410, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 0, 0, 0, 0, 180, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 441, 442, 452, 453, 0, 0,
	880, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	487, 488, 489, 490, 491, 479, 480, 481, 482, 483,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 499, 497, 498, 494, 495, 0, 0, 486,
	492, 493, 500, 501, 503, 502, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 879,
	507, 506, 111, 0, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 454, 455, 456, 484, 485, 435, 436,
	437, 438, 439, 440, 0, 0, 441, 442, 452, 453,
	0, 0, 880, 0, 0, 0, 0, 0, 0, 0,
	898, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 487, 488, 489, 490, 491, 479, 480, 481,
	482, 483, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 499, 497, 498, 494, 495, 0,
	0, 486, 492, 493, 500, 501, 503, 502, 504, 505,
	0, 0, 0, 0, 0, 0, 213, 214, 0, 0,
	0, 879, 507, 506, 111, 0, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 454, 455, 456, 484, 485,
	435, 436, 437, 438, 439, 440, 155, 178, 200, 201,
	202, 203, 205, 206, 207, 208, 209, 210, 211, 212,
	204, 0, 870, 0, 0, 0, 0, 0, 0, 426,
	0, 180, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 158, 162, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 152, 153, 157, 159,
	171, 172, 169, 170, 173, 174, 175, 176, 167, 168,
	160, 163, 165, 166, 164, 180, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 158,
	162, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	152, 153, 157, 159, 171, 172, 169, 170, 173, 174,
	175, 176, 167, 168, 160, 163, 165, 166, 164, 180,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 158, 162, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 152, 153, 157, 159, 171, 172,
	169, 170, 173, 174, 175, 176, 167, 168, 160, 163,
	165, 166, 164, 180, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 162, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 152, 153,
	157, 159, 171, 172, 169, 170, 173, 174, 175, 176,
	167, 168, 160, 163, 165, 166, 164, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 162, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 157, 159, 171, 172,
	169, 170, 173, 174, 175, 176, 167, 168, 160, 163,
	165, 166, 164, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 162, 161, 0,
	0, 0, 0, 87, 88, 69, 0, 92, 93, 116,
	0, 104, 0, 0, 0, 0, 0, 109, 0, 0,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 86,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 532, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 138, 0, 0,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 0, 0,
	0, 0, 59, 528, 51, 0, 0, 0, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 0, 92, 93,
	116, 0, 104, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	86, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 138, 0,
	0, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 0,
	0, 0, 0, 59, 0, 51, 0, 0, 225, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 0, 92,
	93, 116, 0, 104, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 532, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 0, 73, 74, 138,
	0, 0, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 103, 72,
	0, 0, 0, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 87, 88, 69, 0,
	92, 93, 116, 0, 104, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 89, 90, 91, 0,
	0, 0, 0, 84, 52, 0, 0, 0, 73, 74,
	138, 0, 0, 0, 0, 0, 53, 54, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 103,
	72, 0, 0, 0, 0, 59, 0, 51, 0, 0,
	591, 56, 55, 57, 58, 70, 105, 87, 88, 69,
	0, 92, 93, 116, 424, 104, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 108, 0, 101, 97, 98, 99, 94,
	95, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 133, 100, 96, 111, 0, 89, 90, 91,
	0, 0, 0, 0, 84, 52, 0, 0, 0, 73,
	74, 138, 0, 0, 0, 0, 0, 53, 54, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	103, 72, 0, 0, 0, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 70, 105, 87, 88,
	69, 0, 92, 93, 116, 0, 104, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 89, 90,
	91, 0, 0, 0, 0, 84, 52, 0, 0, 0,
	73, 74, 138, 0, 0, 0, 0, 0, 53, 54,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 103, 72, 0, 0, 0, 0, 59, 0, 51,
	0, 0, 387, 56, 55, 57, 58, 70, 105, 87,
	88, 69, 0, 92, 93, 116, 0, 104, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 108, 0, 101, 97, 98,
	99, 94, 95, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 133, 100, 96, 111, 0, 89,
	90, 91, 0, 0, 0, 0, 84, 52, 0, 0,
	0, 73, 74, 138, 0, 0, 0, 0, 0, 53,
	54, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 103, 72, 0, 0, 0, 363, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 70, 105,
	87, 88, 69, 0, 92, 93, 116, 0, 104, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 178, 0, 0, 0, 133, 100, 96, 111, 0,
	89, 90, 91, 0, 0, 0, 0, 84, 52, 0,
	0, 0, 73, 74, 138, 0, 177, 0, 0, 0,
	53, 54, 75, 62, 63, 64, 65, 66, 67, 68,
	162, 161, 0, 103, 72, 0, 0, 0, 0, 59,
	0, 51, 0, 0, 0, 56, 55, 57, 58, 70,
	105, 0, 0, 0, 171, 172, 169, 170, 173, 174,
	175, 176, 167, 168, 160, 163, 165, 166, 164, 441,
	442, 452, 453, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 487, 488, 489, 490, 491,
	479, 480, 481, 482, 483, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 499, 497, 498,
	494, 495, 0, 0, 486, 492, 493, 500, 501, 503,
	502, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 507, 506, 0, 0, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 454, 455,
	456, 484, 485, 435, 436, 437, 438, 439, 440, 441,
	442, 452, 453, 0, 0, 914, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 487, 488, 489, 490, 491,
	479, 480, 481, 482, 483, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 499, 497, 498,
	494, 495, 0, 0, 486, 492, 493, 500, 501, 503,
	502, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 507, 506, 0, 0, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 454, 455,
	456, 484, 485, 743, 744, 745, 742, 741, 740,
}
var yyPact = [...]int{

	-1000, -1000, 1190, -1000, -1000, -1000, -1000, -1000, -1000, 251,
	491, 550, 710, -1000, -1000, -1000, 245, 3912, 239, 235,
	6856, 6856, 6856, 170, 644, 6856, -1000, 5152, 233, 232,
	231, -1000, 422, 6856, 777, 283, -10, 496, 775, 774,
	772, 451, 508, 5442, -1000, -1000, 230, -1000, -1000, 157,
	229, 6070, 6856, 333, 333, 6856, 6856, 6856, 6856, 6856,
	-1000, -1000, 6856, 6856, 6856, 6856, 6856, 6856, 6856, 226,
	6856, -1000, 818, 6856, 6856, 6856, -1000, -1000, -1000, 123,
	-1000, 534, 533, -1000, 488, 224, 223, 6856, 6856, 219,
	6856, 6856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 779, 797, -1000, 117, 201, 201, 216, -1000,
	486, 687, 173, 687, 262, -1000, -1000, 375, 561, 5,
	608, 687, -1000, -1000, -1000, -1000, 4, -1000, -14, 2893,
	6856, 631, -10, 484, 6856, 6856, 370, 5206, 607, 367,
	366, -1, -1000, -1000, -5, -10, -1000, -17, -7, -1000,
	5206, -1000, 6856, 6856, 6856, 6856, 6856, 6856, 6856, 6856,
	6856, 6856, 6856, 6856, 6856, 6856, 6856, 6856, 6856, 6856,
	6856, 6856, 6856, 6856, 6856, 6856, 6856, 6856, 361, 6725,
	6856, 333, 6856, 710, -1000, 5098, 344, -1000, 767, -1000,
	764, -1000, 543, -1000, 558, 214, 3912, 213, 343, 282,
	6594, 6856, 6856, 6856, 6856, 6856, 6856, 6856, 6856, 6856,
	6856, 6856, 6856, -1000, -1000, 6856, 6856, 6856, 96, 6070,
	119, 16, -1000, -1000, 5044, 333, 211, -1000, -1000, 123,
	6856, -1000, -1000, 6070, -1000, -80, -80, 12, -80, 4986,
	-80, -80, -80, -80, -80, -80, -80, -1000, 6856, -80,
	425, 660, 658, -1000, 165, 6463, 333, 5595, 5541, 5595,
	6856, 3155, 3155, 201, -1000, 501, 182, 201, -1000, -1000,
	6856, 6856, 5206, 5206, 6856, 5206, 5206, 651, -1000, 740,
	517, 660, 6856, -1000, -1000, 5939, -1000, 6070, 749, 486,
	339, 486, -1000, -1000, 1059, -1000, 334, -8, 594, 687,
	-1000, 554, 521, 733, 563, -1000, -1000, 710, 6856, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 207, 4932, 206, -1000,
	332, 15, 5206, 4878, -1000, -1000, -1000, -1000, 170, -1000,
	681, -1000, 6856, -1000, 6856, 5702, 5755, 319, 5595, 5487,
	5808, 6841, 3898, 62, 62, 62, 12, -80, 12, 12,
	236, 236, 360, 360, 360, 360, 151, 151, 151, 151,
	360, -1000, 4824, 6856, 5649, 14, -1000, -1000, 4770, -12,
	2762, -1000, -1000, -1000, 205, 543, 518, 542, 419, -1000,
	542, 6856, -1000, 6856, -1000, -1000, 5595, 6856, 5595, 5595,
	5595, 5595, 5595, 5595, 5595, 5595, 5595, 5595, 5595, 5595,
	4716, 116, 4662, 201, -1000, 6856, -1000, 172, -25, 6070,
	6332, -1000, 6070, 4608, 112, -1000, 171, -1000, -1000, -1000,
	-1000, 234, 698, 4554, 99, 385, 6856, 72, 201, -1000,
	-1000, 6856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 201, -1000,
	-1000, -1000, -1000, 170, 6856, 6856, 96, 170, 543, 13,
	-1000, 5206, 4500, 4446, -1000, -1000, -1000, 4392, -1000, 11,
	-1000, 5206, 6856, 169, -1000, -1000, 928, -1000, -1000, -1000,
	520, 556, -1000, 687, 522, 685, -1000, 500, -1000, 5206,
	163, 3781, 6856, 6856, 6856, 203, -1000, -1000, 198, 5206,
	-1000, 6856, 5649, 161, 333, 587, 3650, -1000, 197, 432,
	518, -1000, 542, -1000, -1000, 418, 2, -1000, 4338, 4284,
	2631, 6841, 3519, -1000, -1000, -1000, 4230, -29, 6856, -1000,
	5206, 333, 187, 154, -1000, -1000, -1000, 67, -1000, -1000,
	671, -1000, -1000, -1000, -1000, 6856, -1000, 5595, -1000, -1000,
	4176, -1000, -1000, 65, 4122, -1000, -1000, 518, 153, 6856,
	-1000, -1000, -1000, 144, 6201, 5206, -1000, -1000, 687, 444,
	7, -1000, -1000, 687, 685, -1000, 330, -1000, -1000, -1000,
	4068, 324, 5206, -1000, 323, 318, 432, 5649, 317, -1000,
	140, 511, 333, 185, 6070, -1000, -1000, -1000, 638, 432,
	138, 8, -1000, 59, -1000, -1000, 693, -1000, -1000, -1000,
	-1000, 417, 2, 4626, -1000, 542, 3912, 273, 316, -1000,
	-1000, -1000, 6856, 5595, -1000, 6070, -29, -1000, -1000, 4014,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3, -1000,
	687, 383, 685, -1000, 7, -1000, 2500, 315, 6856, 392,
	-1000, 748, -1000, 134, -1000, 3257, 587, -1000, 6070, 63,
	2369, -1000, 183, 416, 133, 598, 432, 464, -1000, -1000,
	413, -1000, -1000, -1000, 677, 692, 542, 663, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4464, -1000, -1000, -1000,
	-1000, 3024, 5595, 131, 382, 394, 379, 687, 3, -1000,
	-1000, 377, 314, -1000, 130, -1000, 6856, 181, 384, 309,
	737, 598, -1000, -1000, -1000, 129, -1000, 128, -1000, 308,
	542, -1000, 255, 255, 175, -1000, 679, -1000, -1000, 4302,
	-11, -1000, -27, 7005, -10, -20, -1000, -1000, 3024, -29,
	-1000, -1000, -1000, -1000, 174, -1000, -1000, 3388, 3960, -1000,
	-1000, -1000, -1000, -1000, 307, 255, 2238, 3257, -1000, -1000,
	81, -1000, 2107, 390, 432, 389, 135, -32, 4032, -1000,
	-1000, 677, -1000, 6856, -18, -1000, -46, 7005, -1000, -1000,
	5472, 528, -1000, -1000, -1000, -1000, -1000, 3024, -1000, 388,
	305, -1000, 126, 542, -1000, -1000, -1000, -1000, -30, -1000,
	-1000, 676, 6856, -1000, -1000, 5206, -1000, 7005, 6856, -1000,
	-1000, 5370, -1000, 301, 299, 588, 620, 499, -1000, 484,
	-1000, -1000, 1976, 3024, -1000, -1000, 387, -1000, 1845, 1714,
	-1000, 135, -1000, 5206, -1000, -1000, 5206, 166, -1000, -1000,
	-1000, -1000, 542, 7105, 7005, 276, 1583, -1000, -1000, -1000,
	-1000, -1000, 432, 2, -1000, -1000, 7005, -1000, -1000, -1000,
	1452, 64, -1000, -1000, 255, 275, -1000, -1000, -1000, 1321,
	-1000,
}
var yyPgo = [...]int{

	0, 915, 911, 51, 9, 907, 3, 906, 11, 24,
	81, 80, 46, 45, 905, 29, 904, 77, 70, 61,
	902, 0, 50, 901, 900, 15, 899, 898, 35, 237,
	38, 20, 896, 32, 893, 62, 54, 892, 10, 891,
	889, 888, 887, 13, 55, 885, 884, 100, 95, 199,
	881, 878, 877, 5, 871, 85, 41, 870, 141, 43,
	868, 867, 866, 864, 862, 79, 861, 860, 853, 851,
	12, 850, 849, 47, 40, 31, 2, 14, 673, 8,
	702, 25, 843, 840, 838, 37, 82, 550, 837, 121,
	831, 827, 826, 86, 823, 36, 821, 820, 30, 33,
	813, 812, 28, 810, 808, 542, 807, 18, 805, 804,
	39, 801, 78, 1, 4, 800, 17, 798, 44, 797,
	795, 793, 7, 789, 6, 788, 19, 16,
}
var yyR1 = [...]int{

	0, 125, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 6, 6, 112, 112,
	89, 89, 8, 8, 8, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 80,
	80, 14, 14, 16, 16, 126, 126, 99, 99, 98,
	98, 105, 105, 15, 15, 18, 18, 17, 17, 93,
	93, 113, 113, 20, 20, 20, 20, 20, 20, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 91, 91, 90, 90, 27, 27, 104,
	104, 28, 10, 1, 1, 2, 2, 11, 11, 123,
	123, 78, 78, 12, 13, 30, 30, 117, 117, 118,
	118, 81, 81, 81, 81, 24, 24, 25, 25, 26,
	26, 83, 83, 83, 83, 102, 102, 102, 127, 127,
	23, 23, 69, 69, 67, 67, 71, 71, 68, 68,
	114, 114, 115, 115, 31, 31, 32, 32, 77, 77,
	75, 75, 75, 76, 76, 85, 85, 111, 111, 33,
	33, 97, 97, 35, 101, 101, 36, 36, 116, 116,
	37, 37, 37, 37, 122, 122, 84, 84, 84, 103,
	103, 38, 38, 39, 40, 40, 40, 40, 42, 42,
	41, 82, 82, 120, 120, 119, 119, 121, 121, 79,
	79, 79, 79, 79, 79, 100, 100, 43, 43, 92,
	92, 70, 19, 94, 94, 44, 95, 95, 96, 96,
	46, 45, 45, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 124,
	3, 3, 107, 107, 106, 106, 53, 53, 54, 54,
	54, 54, 47, 47, 48, 48, 51, 51, 88, 88,
	88, 86, 86, 58, 58, 58, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 59, 59, 59, 21, 21, 22, 22, 57,
	60, 60, 60, 61, 61, 61, 62, 62, 62, 62,
	62, 62, 29, 29, 29, 49, 49, 49, 63, 63,
	64, 64, 64, 64, 64, 64, 55, 55, 55, 56,
	56, 56, 110, 73, 73, 109, 109, 72, 72, 72,
	72, 72, 72, 87, 87, 87, 87, 65, 65, 65,
	65, 65, 65, 65, 66, 66, 66, 66, 50, 50,
	50, 50, 50, 50, 50, 108, 108, 74,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 0,
	1, 3, 1, 3, 2, 1, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 3, 4, 3, 1,
	1, 6, 7, 6, 7, 0, 1, 3, 1, 3,
	1, 3, 1, 1, 2, 1, 3, 1, 2, 3,
	1, 2, 0, 1, 1, 1, 1, 1, 4, 3,
	1, 1, 5, 7, 9, 5, 3, 3, 3, 3,
	3, 3, 1, 2, 6, 7, 9, 5, 1, 6,
	3, 3, 2, 0, 9, 1, 3, 0, 4, 1,
	3, 1, 11, 0, 1, 0, 1, 9, 8, 1,
	2, 1, 1, 6, 7, 0, 2, 0, 2, 0,
	2, 1, 2, 4, 3, 1, 4, 1, 4, 1,
	4, 3, 4, 4, 5, 0, 5, 4, 1, 1,
	1, 4, 5, 6, 1, 3, 6, 7, 3, 6,
	1, 0, 1, 3, 4, 6, 0, 1, 1, 2,
	1, 1, 1, 0, 2, 2, 4, 1, 3, 1,
	2, 3, 1, 1, 3, 1, 1, 3, 2, 0,
	3, 4, 3, 10, 1, 3, 1, 2, 3, 1,
	2, 2, 2, 3, 3, 3, 4, 3, 1, 1,
	3, 1, 3, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 4, 3,
	1, 4, 4, 3, 1, 1, 0, 1, 3, 1,
	8, 3, 2, 6, 5, 3, 4, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 3,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 3, 2, 1, 2, 4, 2, 11, 12, 0,
	0, 1, 0, 4, 3, 1, 1, 2, 2, 4,
	4, 2, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 0, 1, 4, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2, 3, 3,
	1, 1, 1, 3, 3, 1, 1, 0, 1, 1,
	1, 3, 1, 1, 3, 1, 1, 4, 4, 4,
	4, 1, 1, 1, 3, 1, 4, 2, 3, 3,
	1, 4, 4, 3, 3, 3, 1, 3, 1, 1,
	3, 1, 1, 0, 1, 3, 1, 3, 1, 4,
	2, 6, 4, 2, 2, 1, 2, 1, 4, 3,
	3, 3, 6, 3, 1, 1, 2, 1, 5, 4,
	2, 2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -125, -112, -7, -9, -10, -11, -12, -13, 51,
	79, 44, 38, 119, -67, -68, 21, 20, 23, 30,
	34, 35, 39, 46, 98, 19, 14, -21, 48, 25,
	27, 121, 40, 43, 36, 10, 37, -123, 52, 53,
	54, -69, -71, -29, -34, -78, 7, -62, -63, -60,
	59, 125, 92, 104, 105, 130, 129, 131, 132, 123,
	-45, -50, 107, 108, 109, 110, 111, 112, 113, 6,
	133, -52, 118, 96, 97, 106, 99, 100, -49, -59,
	-54, -47, -57, -58, 91, 49, 50, 4, 5, 84,
	85, 86, 8, 9, 66, 67, 81, 63, 64, 65,
	80, 62, 74, 117, 12, 134, -8, -61, 60, 18,
	-89, 82, 123, 82, -89, 119, 10, -16, -80, -105,
	-89, 82, 37, 38, -17, -18, -93, -19, 10, -113,
	123, -9, 37, 79, 123, 123, -22, -21, 98, -22,
	-22, -97, -35, -49, -101, 37, -36, 12, -94, -44,
	-21, 121, 149, 150, 87, 89, 88, 151, 128, 152,
	163, 130, 129, 164, 167, 165, 166, 161, 162, 155,
	156, 153, 154, 157, 158, 159, 160, 115, 90, 127,
	114, 123, 123, 123, 119, -21, 10, 122, -3, 128,
	52, -78, 10, 10, 10, 93, 94, 93, 95, 94,
	136, 137, 138, 139, 148, 140, 141, 142, 143, 144,
	145, 146, 147, 104, 105, 123, 125, 119, 57, 123,
	-110, -109, -73, -72, -21, 128, 59, -21, -29, -59,
	123, -58, 98, 125, -29, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -51, 123, -21,
	-88, 17, -87, -65, 12, 76, 77, -21, -21, -21,
	125, 78, 78, -48, -46, -47, -64, 52, -8, -49,
	123, 123, -21, -21, 123, -21, -21, 17, 75, -87,
	-87, 17, 119, -49, -85, 123, -85, 123, 82, -89,
	124, -89, 121, 119, -112, 121, -14, -105, -89, 82,
	121, 135, 82, 29, -89, -18, 121, 135, 136, -20,
	120, -9, -10, -11, -12, -13, 51, -21, 21, -3,
	-95, -96, -21, -21, 121, 121, 121, 121, 135, 121,
	135, -3, 136, 121, 135, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -48, -21, 122, -21, -104, -28, -29, -21, -93,
	-113, 121, 121, 10, -124, 10, -30, 55, -124, -117,
	55, 123, -9, 123, 121, 122, -21, 128, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -22, -21, -56, 10, 119, -49, -110, 126, 135,
	58, -29, 123, -21, -110, 124, -22, 118, -65, -65,
	17, 125, 57, -21, 11, -29, 58, -22, -55, -6,
	-49, 119, 10, -5, -4, 98, 99, 100, 101, 102,
	103, 4, 5, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 6, 7, 93, 94, 95, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 35,
	36, 37, 38, 39, 96, 97, 59, 30, 31, 32,
	33, 34, 60, 61, 55, 56, 79, 53, 54, 52,
	62, 63, 65, 64, 66, 67, 81, 80, -55, -6,
	-49, -86, -85, 78, 125, 119, 57, 78, -86, -108,
	-74, -21, -21, -21, 75, 75, 117, -21, 124, -111,
	-33, -21, 83, -110, 10, 121, -112, 120, 121, 121,
	82, -89, -17, 82, -89, 119, 10, 82, -19, -21,
	123, 124, 123, 121, 135, 124, -35, -36, -124, -21,
	-44, 122, -21, -126, 135, 29, 124, 120, -124, 123,
	-30, -118, 56, -8, 119, -124, -122, -8, -21, -21,
	-113, -21, 124, 126, 120, -85, -21, 124, 136, -73,
	-21, 128, 59, -110, 124, 126, 124, -66, 10, 13,
	129, 12, 10, 120, 120, 125, 120, -21, 126, -85,
	-21, -85, -49, -22, -21, -56, -49, -30, -126, 135,
	124, 124, 120, -126, 135, -21, 124, 120, 119, 82,
	-99, -15, -18, -80, 119, -124, 124, -23, -9, 122,
	-21, -95, -21, -83, 119, 122, 123, -21, 124, -28,
	-81, -29, 128, 59, 125, -26, -9, 122, -91, 123,
	-114, -115, -31, -32, -77, -75, 127, 60, 61, -8,
	-118, -124, -122, -116, 119, 135, 124, 124, 95, -9,
	122, 120, 136, -21, -29, 123, 124, 126, 13, -21,
	120, 126, 120, -118, 124, -74, 124, -33, -98, -18,
	119, -126, 135, -18, -99, 121, -113, 124, 121, -102,
	121, -102, 121, -114, 121, 124, 58, -29, 123, -110,
	-113, -27, 41, 42, -114, 124, 135, -1, 128, -75,
	-124, 119, 120, -37, -120, -119, 44, -121, 47, -79,
	103, 102, 101, 98, 99, 100, -116, -8, -9, 122,
	121, -113, -21, -110, 126, -124, -126, 135, -98, 120,
	-15, -126, 22, 121, -95, 120, 32, 33, -102, 31,
	-102, 124, -25, -9, 122, -81, -29, -110, 126, 28,
	123, 119, 124, -107, 44, -31, -2, 83, 119, -116,
	-100, -43, 12, 38, 37, -122, -79, 120, -113, 124,
	120, 119, 120, -18, -126, 120, 121, 124, -21, -127,
	122, 121, 120, 121, 31, -107, -113, 124, 124, 121,
	-90, -8, -113, -76, 122, -76, 123, 12, -116, 120,
	121, 135, -124, 136, -92, -70, -6, -3, -84, 121,
	119, -116, 120, -24, -9, 122, -127, -113, 121, -76,
	26, -25, 12, 151, 120, 119, -77, 119, -106, -53,
	12, 128, 136, 120, -43, -21, 121, 135, 136, -6,
	120, -103, -38, -39, -40, -41, -42, -8, -6, 79,
	10, 120, -113, -113, 119, 121, 124, -8, -113, -113,
	124, 135, 12, -21, -124, -70, -21, -124, 120, -38,
	121, 121, 45, 29, 78, 24, -113, 119, 120, 120,
	-53, -124, 123, -122, 10, -4, -79, -6, 121, 120,
	-113, -114, -6, 120, 124, -76, -82, 121, 119, -113,
	120,
}
var yyDef = [...]int{

	79, -2, 1, 78, 85, 86, 87, 88, 89, 0,
	0, 0, 0, 122, 130, 131, 0, 0, 0, 0,
	417, 417, 417, 0, 382, 0, 142, 0, 0, 0,
	0, 148, 0, 0, 0, 80, 370, 0, 0, 0,
	0, 204, 0, -2, 416, 169, 0, -2, 433, 419,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 350, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 360, 388, 0, 363, 0, 171, 172, 426, 411,
	431, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 0, 0, 435, 0, -2, 0, 0, 395,
	82, 0, 0, 0, 0, 79, 80, 0, 0, 0,
	115, 0, 99, 100, 112, 117, 0, 120, 0, 0,
	0, 0, 370, 0, 286, 0, 0, 418, 382, 0,
	0, 0, 232, 233, 0, 370, 235, 236, 0, 284,
	285, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 152, 369, 371,
	0, 170, 175, 369, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 312, 0, 417, 0, 0, 453,
	0, 452, 456, 454, 458, 0, 0, 297, -2, 0,
	0, -2, 382, 453, -2, 331, 332, 333, 334, 0,
	351, 352, 353, 354, 355, 356, 357, 358, 417, 359,
	0, 389, 390, 465, 467, 0, 0, 362, 364, 366,
	417, 0, 0, 391, 292, 384, 385, 391, 383, 440,
	0, 0, 480, 481, 0, 483, 484, 0, 407, 0,
	0, 0, 0, 437, 378, 0, 381, 453, 0, 84,
	0, 83, 91, 79, 0, 94, 0, 0, 115, 0,
	96, 0, 0, 0, 115, 118, 98, 0, 0, 121,
	129, 123, 124, 125, 126, 127, 0, 0, 0, 369,
	0, 287, 289, 0, 136, 137, 138, 139, 0, 140,
	0, 369, 0, 141, 0, 314, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 344, 0, 0, 349, 105, 159, -2, 0, 0,
	0, 150, 151, 369, 0, 175, 179, 0, 0, 369,
	0, 0, 205, 0, 208, 122, 295, 0, 298, 299,
	300, 301, 302, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 0, 434, 449, 0, 451, 0, 394, 453,
	0, -2, 453, 0, 0, -2, 0, 361, 466, 463,
	464, 0, 0, 0, 0, 420, 0, 0, 0, -2,
	-2, 0, 76, 77, 69, 70, 71, 72, 73, 74,
	75, 2, 3, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 0, -2,
	-2, 291, 392, 0, 417, 0, 0, 0, 175, 105,
	485, 487, 0, 0, 406, 409, 408, 0, 225, 105,
	227, 229, 0, 0, 81, 90, 0, 93, 95, 97,
	0, 115, 111, 0, 115, 0, 116, 0, 119, 369,
	0, 0, 0, 286, 0, 0, 231, 234, 0, 237,
	283, 0, 348, 0, 106, 0, 0, 153, 0, -2,
	179, 369, 0, 176, 239, 0, 178, 244, 0, 0,
	0, 296, 0, 427, 429, 430, 0, 0, 0, 455,
	457, 0, 0, 0, -2, 394, 387, 0, 474, 475,
	0, 477, 469, 470, 471, 0, 473, 365, 428, 379,
	0, 380, 444, 0, 0, 443, 445, 179, 0, 106,
	479, 482, 436, 0, 106, 230, 393, 92, 0, 0,
	105, 108, 113, 0, 0, 282, 0, 132, 200, 122,
	0, 0, 288, 135, 195, 195, -2, 347, 0, 160,
	0, -2, 0, 0, 453, 147, 189, 122, 157, -2,
	0, 210, 212, 163, 217, 218, 0, 220, 221, 222,
	369, 0, 180, 265, 239, 0, 0, 0, 0, 202,
	122, 450, 0, 294, -2, 453, 462, 468, 476, 0,
	447, 441, 442, 369, 478, 486, 226, 228, 105, 110,
	0, 0, 106, 114, 105, 128, 0, 0, 286, 0,
	195, 0, 195, 0, 144, 0, 0, -2, 453, 0,
	0, 149, 0, 0, 0, 372, 216, 165, 164, 219,
	0, 239, 173, 238, 0, 0, 0, -2, 264, 267,
	269, 270, 271, 272, 273, 274, 265, 245, 203, 122,
	209, 206, 293, 0, 0, 0, 0, 106, 105, 103,
	107, 0, 0, 133, 0, 191, 0, 0, 0, 0,
	0, 372, 145, 187, 122, 0, -2, 0, -2, 0,
	0, 122, 223, 223, 0, 213, 0, 166, 239, 265,
	0, 276, 369, 0, 370, 0, 268, 174, 207, 461,
	472, 239, 101, 109, 0, 104, 201, 0, 0, 122,
	198, 199, 192, 193, 0, 223, 0, 0, 183, 190,
	0, 155, 0, 0, 0, 0, 0, 214, 265, 168,
	240, 0, 277, 0, 0, 280, 0, 0, 242, 246,
	0, 265, 102, 134, 185, 122, 122, 197, 194, 0,
	0, 146, 0, 0, 158, 122, 224, 122, 0, 375,
	376, 0, 0, 167, 275, 369, 241, 0, 0, 369,
	247, 0, 249, 0, 0, 259, 0, 0, 258, 57,
	-2, 290, 0, 196, 122, 188, 0, 156, 0, 0,
	373, 0, 377, 215, 278, 279, 369, 0, 248, 250,
	251, 252, 0, 0, 0, 0, 0, 122, 162, 367,
	374, 281, -2, 253, 254, 255, 257, 260, 186, 368,
	0, 0, 256, 154, 223, 0, 243, 261, 122, 0,
	262,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:254
		{
			rootnode = stmt.NewStmtList(yyDollar[1].list)
			positions.AddPosition(rootnode, positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:271
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:276
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:277
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:281
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:282
		{
			yyVAL.list = []node.Node{}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:287
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:294
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:304
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:310
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:316
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:324
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:325
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:326
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:327
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:328
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:329
		{
			yyVAL.node = stmt.NewHaltCompiler()
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:331
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:341
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:351
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:356
		{
			yyVAL.node = yyDollar[2].node
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:357
		{
			yyVAL.node = yyDollar[3].node.(*stmt.GroupUse).SetUseType(yyDollar[2].node)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:359
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:364
		{
			yyVAL.node = stmt.NewUseList(yyDollar[2].node, yyDollar[3].list)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:366
		{
			yyVAL.node = stmt.NewConstList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:375
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:381
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:390
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[6].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 102:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:400
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[5].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:413
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[6].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:423
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[5].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:441
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:442
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:447
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:448
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:452
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:453
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:457
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:458
		{
			yyVAL.node = yyDollar[2].node.(*stmt.Use).SetUseType(yyDollar[1].node)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:463
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:473
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:488
		{
			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:489
		{
			yyVAL.node = yyDollar[2].node
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:493
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:494
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:498
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:499
		{
			yyVAL.list = []node.Node{}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:503
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:504
		{
			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:505
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:506
		{
			yyVAL.node = yyDollar[1].node
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:507
		{
			yyVAL.node = yyDollar[1].node
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:509
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:517
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:522
		{
			yyVAL.node = yyDollar[1].node
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:523
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:525
		{
			yyVAL.node = stmt.NewWhile(yyDollar[3].node, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 133:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:531
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:537
		{
			yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:543
		{
			yyVAL.node = stmt.NewSwitch(yyDollar[3].node, yyDollar[5].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:549
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:555
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:561
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:567
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:573
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:579
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:585
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:591
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:597
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:603
		{
			yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[7].node, yyDollar[5].foreachVariable.byRef)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 146:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:609
		{
			yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].node, yyDollar[7].foreachVariable.node, yyDollar[9].node, yyDollar[7].foreachVariable.byRef)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:615
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:621
		{
			yyVAL.node = stmt.NewNop()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:627
		{
			if yyDollar[6].node == nil {
				yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:639
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:645
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(label, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:655
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(label, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:666
		{
			yyVAL.list = []node.Node{}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:668
		{
			identifier := node.NewIdentifier(yyDollar[5].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[5].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[5].token))
			catch := stmt.NewCatch(yyDollar[4].list, variable, yyDollar[8].list)
			positions.AddPosition(catch, positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[9].token))
			yyVAL.list = append(yyDollar[1].list, catch)

			comments.AddComments(identifier, yyDollar[5].token.Comments())
			comments.AddComments(variable, yyDollar[5].token.Comments())
			comments.AddComments(catch, yyDollar[2].token.Comments())
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:683
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:684
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:688
		{
			yyVAL.node = nil
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:690
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:698
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:699
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:703
		{
			yyVAL.node = yyDollar[1].node
		}
	case 162:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php7/php7.y:708
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewFunction(name, yyDollar[2].boolWithToken.value, yyDollar[6].list, yyDollar[8].node, yyDollar[10].list, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token))

			comments.AddComments(name, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:720
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:721
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:725
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:726
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 167:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:731
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewClass(name, yyDollar[1].list, nil, yyDollar[4].node, yyDollar[5].list, yyDollar[8].list, yyDollar[6].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token))

			comments.AddComments(name, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 168:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php7/php7.y:741
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewClass(name, nil, nil, yyDollar[3].node, yyDollar[4].list, yyDollar[7].list, yyDollar[5].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:753
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:754
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:759
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:765
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 173:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:774
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewTrait(name, yyDollar[5].list, yyDollar[3].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 174:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:787
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewInterface(name, yyDollar[3].list, yyDollar[6].list, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:799
		{
			yyVAL.node = nil
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:800
		{
			yyVAL.node = yyDollar[2].node
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:804
		{
			yyVAL.list = nil
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:805
		{
			yyVAL.list = yyDollar[2].list
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:809
		{
			yyVAL.list = nil
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:810
		{
			yyVAL.list = yyDollar[2].list
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:814
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:815
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:817
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:824
		{
			list := expr.NewShortList(yyDollar[2].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:833
		{
			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:835
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:843
		{
			yyVAL.node = yyDollar[1].node
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:845
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:853
		{
			yyVAL.node = yyDollar[1].node
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:855
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:863
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:864
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:865
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:866
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:870
		{
			yyVAL.list = []node.Node{}
		}
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:872
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			positions.AddPosition(_case, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:879
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			positions.AddPosition(_default, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:893
		{
			yyVAL.node = yyDollar[1].node
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:895
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:904
		{
			yyVAL.node = stmt.NewIf(yyDollar[3].node, yyDollar[5].node, nil, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:910
		{
			_elseIf := stmt.NewElseIf(yyDollar[4].node, yyDollar[6].node)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node))
			yyVAL.node = yyDollar[1].node.(*stmt.If).AddElseIf(_elseIf)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))

			comments.AddComments(_elseIf, yyDollar[2].token.Comments())
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:921
		{
			yyVAL.node = yyDollar[1].node
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:923
		{
			_else := stmt.NewElse(yyDollar[3].node)
			positions.AddPosition(_else, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node))
			yyVAL.node = yyDollar[1].node.(*stmt.If).SetElse(_else)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())
		}
	case 206:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:935
		{
			stmts := stmt.NewStmtList(yyDollar[6].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[6].list))
			yyVAL.node = stmt.NewAltIf(yyDollar[3].node, stmts, nil, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list))

			comments.AddComments(stmts, yyDollar[5].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 207:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:945
		{
			stmts := stmt.NewStmtList(yyDollar[7].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[7].list))
			_elseIf := stmt.NewAltElseIf(yyDollar[4].node, stmts)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list))
			yyVAL.node = yyDollar[1].node.(*stmt.AltIf).AddElseIf(_elseIf)

			comments.AddComments(stmts, yyDollar[6].token.Comments())
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:959
		{
			yyVAL.node = yyDollar[1].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:964
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[4].list))
			_else := stmt.NewAltElse(stmts)
			positions.AddPosition(_else, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.node = yyDollar[1].node.(*stmt.AltIf).SetElse(_else)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token))

			comments.AddComments(stmts, yyDollar[3].token.Comments())
			comments.AddComments(_else, yyDollar[2].token.Comments())
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:978
		{
			yyVAL.list = yyDollar[1].list
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:979
		{
			yyVAL.list = nil
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:983
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:984
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:989
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))

			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			if yyDollar[1].node != nil {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[2].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[3].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:1017
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))

			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			if yyDollar[1].node != nil {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[2].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[3].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1047
		{
			yyVAL.node = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1048
		{
			yyVAL.node = yyDollar[1].node
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1052
		{
			yyVAL.node = yyDollar[1].node
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1054
		{
			yyVAL.node = node.NewNullable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1063
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1069
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1074
		{
			yyVAL.node = yyDollar[1].node
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1078
		{
			yyVAL.node = nil
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1079
		{
			yyVAL.node = yyDollar[2].node
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1083
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1084
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1088
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1089
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1094
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1100
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1108
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1109
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1113
		{
			yyVAL.node = yyDollar[1].node
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1117
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1118
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1123
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewStaticVar(variable, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1136
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewStaticVar(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1151
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1152
		{
			yyVAL.list = []node.Node{}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1157
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1163
		{
			yyVAL.node = stmt.NewClassConstList(yyDollar[1].list, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1169
		{
			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 243:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php7/php7.y:1175
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].boolWithToken.value, yyDollar[7].list, yyDollar[9].node, yyDollar[10].nodesWithEndToken.nodes, yyDollar[5].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[10].nodesWithEndToken.endToken))

			comments.AddComments(name, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1187
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1188
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1192
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1193
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[2].token}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1194
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1198
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1199
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1203
		{
			yyVAL.node = yyDollar[1].node
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1204
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1209
		{
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1218
		{
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, nil, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1228
		{
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, nil, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1238
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1248
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1257
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewTraitMethodRef(nil, name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1266
		{
			yyVAL.node = yyDollar[1].node
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1271
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1283
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1284
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1288
		{
			yyVAL.list = yyDollar[1].list
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1290
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(modifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{modifier}
			comments.AddComments(modifier, yyDollar[1].token.Comments())
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1299
		{
			yyVAL.list = nil
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1300
		{
			yyVAL.list = yyDollar[1].list
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1304
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1305
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1310
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1316
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1322
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1328
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1334
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1340
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1348
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1349
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1354
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewProperty(variable, nil, yyDollar[2].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1367
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewProperty(variable, yyDollar[3].node, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1382
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1383
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1388
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewConstant(name, yyDollar[3].node, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1401
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewConstant(name, yyDollar[3].node, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1413
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1414
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1418
		{
			yyVAL.node = yyDollar[1].node
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1422
		{
			yyVAL.list = nil
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1423
		{
			yyVAL.list = yyDollar[1].list
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1426
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1427
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 290:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php7/php7.y:1432
		{
			if yyDollar[2].nodesWithEndToken != nil {
				yyVAL.node = stmt.NewClass(nil, nil, yyDollar[2].nodesWithEndToken.nodes, yyDollar[3].node, yyDollar[4].list, yyDollar[7].list, yyDollar[5].str)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			} else {
				yyVAL.node = stmt.NewClass(nil, nil, nil, yyDollar[3].node, yyDollar[4].list, yyDollar[7].list, yyDollar[5].str)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1447
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1458
		{
			yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:1463
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign_op.NewAssign(list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:1473
		{
			shortList := expr.NewShortList(yyDollar[2].list)
			positions.AddPosition(shortList, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yyVAL.node = assign_op.NewAssign(shortList, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))

			comments.AddComments(shortList, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1483
		{
			yyVAL.node = assign_op.NewAssign(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1489
		{
			yyVAL.node = assign_op.NewAssignRef(yyDollar[1].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1495
		{
			yyVAL.node = expr.NewClone(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1501
		{
			yyVAL.node = assign_op.NewPlus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1507
		{
			yyVAL.node = assign_op.NewMinus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1513
		{
			yyVAL.node = assign_op.NewMul(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1519
		{
			yyVAL.node = assign_op.NewPow(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1525
		{
			yyVAL.node = assign_op.NewDiv(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1531
		{
			yyVAL.node = assign_op.NewConcat(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1537
		{
			yyVAL.node = assign_op.NewMod(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1543
		{
			yyVAL.node = assign_op.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1549
		{
			yyVAL.node = assign_op.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1555
		{
			yyVAL.node = assign_op.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1561
		{
			yyVAL.node = assign_op.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1567
		{
			yyVAL.node = assign_op.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1573
		{
			yyVAL.node = expr.NewPostInc(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1579
		{
			yyVAL.node = expr.NewPreInc(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1585
		{
			yyVAL.node = expr.NewPostDec(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1591
		{
			yyVAL.node = expr.NewPreDec(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1597
		{
			yyVAL.node = binary_op.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1603
		{
			yyVAL.node = binary_op.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1609
		{
			yyVAL.node = binary_op.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1615
		{
			yyVAL.node = binary_op.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1621
		{
			yyVAL.node = binary_op.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1627
		{
			yyVAL.node = binary_op.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1633
		{
			yyVAL.node = binary_op.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1639
		{
			yyVAL.node = binary_op.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1645
		{
			yyVAL.node = binary_op.NewConcat(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1651
		{
			yyVAL.node = binary_op.NewPlus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1657
		{
			yyVAL.node = binary_op.NewMinus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1663
		{
			yyVAL.node = binary_op.NewMul(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1669
		{
			yyVAL.node = binary_op.NewPow(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1675
		{
			yyVAL.node = binary_op.NewDiv(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1681
		{
			yyVAL.node = binary_op.NewMod(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1687
		{
			yyVAL.node = binary_op.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1693
		{
			yyVAL.node = binary_op.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1699
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1705
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1711
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1717
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1723
		{
			yyVAL.node = binary_op.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1729
		{
			yyVAL.node = binary_op.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1735
		{
			yyVAL.node = binary_op.NewEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1741
		{
			yyVAL.node = binary_op.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1747
		{
			yyVAL.node = binary_op.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1753
		{
			yyVAL.node = binary_op.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1759
		{
			yyVAL.node = binary_op.NewGreater(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1765
		{
			yyVAL.node = binary_op.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1771
		{
			yyVAL.node = binary_op.NewSpaceship(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1777
		{
			yyVAL.node = expr.NewInstanceOf(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1782
		{
			yyVAL.node = yyDollar[2].node
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1783
		{
			yyVAL.node = yyDollar[1].node
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:1785
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1791
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1797
		{
			yyVAL.node = binary_op.NewCoalesce(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1802
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1804
		{
			yyVAL.node = cast.NewCastInt(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1810
		{
			yyVAL.node = cast.NewCastDouble(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1816
		{
			yyVAL.node = cast.NewCastString(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1822
		{
			yyVAL.node = cast.NewCastArray(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1828
		{
			yyVAL.node = cast.NewCastObject(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1834
		{
			yyVAL.node = cast.NewCastBool(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1840
		{
			yyVAL.node = cast.NewCastUnset(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1846
		{
			yyVAL.node = expr.NewExit(yyDollar[2].node, strings.EqualFold(yyDollar[1].token.Value, "die"))
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1852
		{
			yyVAL.node = expr.NewErrorSuppress(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1857
		{
			yyVAL.node = yyDollar[1].node
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1859
		{
			yyVAL.node = expr.NewShellExec(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1865
		{
			yyVAL.node = expr.NewPrint(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1871
		{
			yyVAL.node = expr.NewYield(nil, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1877
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1883
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1889
		{
			yyVAL.node = expr.NewYieldFrom(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 367:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php7/php7.y:1895
		{
			yyVAL.node = expr.NewClosure(yyDollar[5].list, yyDollar[7].list, yyDollar[8].node, yyDollar[10].list, false, yyDollar[2].boolWithToken.value, yyDollar[3].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token))

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 368:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line php7/php7.y:1902
		{
			yyVAL.node = expr.NewClosure(yyDollar[6].list, yyDollar[8].list, yyDollar[9].node, yyDollar[11].list, true, yyDollar[3].boolWithToken.value, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[12].token))

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1911
		{
			yyVAL.str = yylex.(*lexer).PhpDocComment
			yylex.(*lexer).PhpDocComment = ""
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1915
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1916
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1920
		{
			yyVAL.list = []node.Node{}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1921
		{
			yyVAL.list = yyDollar[3].list
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1925
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1926
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1931
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewClusureUse(variable, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1944
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewClusureUse(variable, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1960
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1966
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1972
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1978
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1987
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1992
		{
			yyVAL.node = yyDollar[1].node
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1996
		{
			yyVAL.node = yyDollar[1].node
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1997
		{
			yyVAL.node = yyDollar[1].node
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2001
		{
			yyVAL.node = nil
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2002
		{
			yyVAL.node = yyDollar[2].node
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2006
		{
			yyVAL.list = []node.Node{}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2007
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token.Value)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2008
		{
			yyVAL.list = yyDollar[1].list
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2012
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2013
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2018
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2024
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2030
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2039
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2045
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2051
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2057
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2063
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2069
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2075
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2081
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2087
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2093
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2099
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)) /* TODO: mark as Heredoc*/
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2104
		{
			yyVAL.node = scalar.NewEncapsed(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2110
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2116
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2121
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2122
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2127
		{
			yyVAL.node = expr.NewConstFetch(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2133
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2143
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2155
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2156
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2160
		{
			yyVAL.node = nil
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2161
		{
			yyVAL.node = yyDollar[1].node
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2165
		{
			yyVAL.node = yyDollar[1].node
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2169
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2170
		{
			yyVAL.node = yyDollar[2].node
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2171
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2175
		{
			yyVAL.node = yyDollar[1].node
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2176
		{
			yyVAL.node = yyDollar[2].node
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2177
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2181
		{
			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2183
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2189
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2195
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2201
		{
			yyVAL.node = expr.NewMethodCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2206
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2210
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2211
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2213
		{
			yyVAL.node = expr.NewPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2222
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2232
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2238
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2247
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2253
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2261
		{
			yyVAL.node = yyDollar[1].node
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2263
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2269
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2275
		{
			yyVAL.node = expr.NewPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2281
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2287
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2296
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2301
		{
			yyVAL.node = yyDollar[2].node
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2302
		{
			yyVAL.node = yyDollar[1].node
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2307
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2312
		{
			yyVAL.node = yyDollar[2].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2313
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2318
		{
			if yyDollar[1].list[len(yyDollar[1].list)-1] == nil {
				yyVAL.list = yyDollar[1].list[:len(yyDollar[1].list)-1]
			} else {
				yyVAL.list = yyDollar[1].list
			}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2328
		{
			yyVAL.node = nil
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2329
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2334
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2335
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2340
		{
			yyVAL.node = expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2346
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2352
		{
			yyVAL.node = expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2358
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[2].node, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:2364
		{
			// TODO: Cannot use list() as standalone expression
			list := expr.NewList(yyDollar[5].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[6].token))
			yyVAL.node = expr.NewArrayItem(yyDollar[1].node, list, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token))

			comments.AddComments(list, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2375
		{
			// TODO: Cannot use list() as standalone expression
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = expr.NewArrayItem(nil, list, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2388
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2390
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2396
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2398
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2408
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2418
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2431
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(fetch, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(fetch, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2447
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2453
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:2463
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2476
		{
			yyVAL.node = yyDollar[2].node
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2480
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2486
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2498
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[2].token.Value); err == nil {
				lnumber := scalar.NewLnumber(yyDollar[2].token.Value)
				positions.AddPosition(lnumber, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
				yyVAL.node = expr.NewUnaryMinus(lnumber)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

				comments.AddComments(lnumber, yyDollar[1].token.Comments())
			} else {
				yyDollar[2].token.Value = "-" + yyDollar[2].token.Value
				yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2516
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:2529
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2535
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2541
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2547
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2553
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2559
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2565
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2573
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2574
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2578
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
