//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	//    "fmt"
	//    "strings"
	"strconv"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign_op"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"

//    "github.com/z7zmey/php-parser/node/expr/binary_op"
//    "github.com/z7zmey/php-parser/node/expr/cast"
)

//line php5/php5.y:22
type yySymType struct {
	yys   int
	node  node.Node
	token token.Token
	//    boolWithToken boolWithToken
	list                    []node.Node
	foreachVariable         foreachVariable
	nodesWithEndToken       *nodesWithEndToken
	simpleIndirectReference simpleIndirectReference
	objectPropertyList      []objectProperty
	//    str string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:2466

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	104, 460,
	105, 460,
	-2, 458,
	-1, 101,
	78, 357,
	-2, 436,
	-1, 113,
	78, 478,
	123, 474,
	-2, 484,
	-1, 153,
	104, 460,
	105, 460,
	-2, 458,
	-1, 203,
	121, 331,
	124, 331,
	-2, 455,
	-1, 204,
	104, 460,
	105, 460,
	121, 332,
	124, 332,
	-2, 458,
	-1, 270,
	78, 478,
	-2, 484,
	-1, 297,
	78, 359,
	-2, 438,
	-1, 301,
	123, 475,
	-2, 485,
	-1, 310,
	78, 358,
	-2, 437,
	-1, 376,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 292,
	-1, 377,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 293,
	-1, 378,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 294,
	-1, 379,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 295,
	-1, 380,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 296,
	-1, 381,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 297,
	-1, 382,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 298,
	-1, 383,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 299,
	-1, 390,
	104, 460,
	105, 460,
	-2, 458,
	-1, 441,
	123, 469,
	-2, 473,
	-1, 459,
	104, 460,
	105, 460,
	124, 541,
	135, 541,
	-2, 458,
	-1, 460,
	124, 542,
	135, 542,
	-2, 455,
	-1, 461,
	104, 460,
	105, 460,
	-2, 458,
	-1, 483,
	124, 165,
	135, 165,
	-2, 455,
	-1, 484,
	104, 460,
	105, 460,
	124, 166,
	135, 166,
	-2, 458,
	-1, 490,
	123, 499,
	-2, 543,
	-1, 496,
	123, 499,
	-2, 544,
	-1, 518,
	78, 357,
	-2, 394,
	-1, 565,
	124, 151,
	-2, 156,
	-1, 573,
	121, 333,
	124, 333,
	-2, 455,
	-1, 574,
	104, 460,
	105, 460,
	121, 334,
	124, 334,
	-2, 458,
	-1, 581,
	57, 242,
	125, 242,
	-2, 241,
	-1, 667,
	78, 359,
	-2, 396,
	-1, 696,
	124, 151,
	-2, 156,
	-1, 711,
	124, 151,
	-2, 156,
	-1, 767,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 422,
	-1, 768,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 423,
	-1, 769,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 424,
	-1, 770,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 425,
	-1, 771,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 426,
	-1, 772,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 427,
	-1, 773,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 428,
	-1, 774,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 429,
	-1, 777,
	78, 358,
	-2, 395,
	-1, 830,
	57, 237,
	-2, 239,
	-1, 882,
	37, 212,
	-2, 209,
	-1, 938,
	123, 469,
	-2, 473,
	-1, 992,
	29, 200,
	-2, 4,
	-1, 1014,
	124, 151,
	-2, 156,
	-1, 1018,
	121, 204,
	-2, 206,
}

const yyPrivate = 57344

const yyLast = 8511

var yyAct = [...]int{

	101, 886, 1036, 712, 986, 913, 831, 441, 870, 122,
	130, 718, 592, 824, 714, 416, 449, 833, 429, 199,
	724, 701, 795, 117, 60, 338, 669, 804, 471, 458,
	417, 97, 129, 263, 388, 318, 329, 327, 541, 6,
	4, 514, 137, 139, 113, 314, 144, 157, 482, 328,
	288, 639, 5, 639, 25, 227, 227, 140, 257, 474,
	2, 191, 178, 1013, 444, 208, 209, 210, 211, 213,
	214, 215, 216, 217, 218, 219, 220, 212, 42, 980,
	266, 43, 963, 979, 962, 977, 973, 959, 954, 191,
	642, 644, 645, 643, 928, 643, 250, 974, 961, 978,
	1023, 916, 866, 297, 828, 727, 152, 447, 929, 120,
	708, 269, 578, 507, 695, 578, 639, 240, 665, 647,
	641, 640, 706, 203, 270, 310, 513, 508, 315, 319,
	295, 356, 322, 707, 141, 200, 324, 38, 178, 114,
	656, 655, 646, 648, 659, 660, 657, 658, 661, 663,
	662, 664, 649, 650, 651, 642, 644, 645, 643, 301,
	227, 337, 161, 177, 179, 180, 178, 825, 819, 639,
	781, 503, 647, 641, 640, 331, 496, 334, 120, 618,
	604, 355, 136, 540, 309, 504, 120, 120, 158, 472,
	619, 605, 266, 240, 227, 646, 648, 659, 660, 657,
	658, 661, 663, 662, 664, 649, 650, 651, 642, 644,
	645, 643, 997, 639, 952, 577, 448, 641, 640, 271,
	191, 357, 227, 269, 639, 384, 578, 353, 641, 640,
	421, 119, 557, 348, 834, 358, 270, 964, 350, 937,
	490, 354, 120, 558, 311, 902, 901, 349, 304, 649,
	650, 651, 642, 644, 645, 643, 132, 839, 312, 176,
	175, 227, 651, 642, 644, 645, 643, 779, 300, 453,
	133, 38, 431, 732, 299, 895, 391, 625, 617, 616,
	103, 610, 491, 161, 609, 448, 443, 583, 582, 470,
	437, 1044, 227, 174, 177, 179, 180, 178, 736, 464,
	119, 125, 832, 120, 240, 468, 735, 445, 119, 302,
	159, 476, 477, 130, 433, 434, 455, 506, 492, 590,
	293, 510, 489, 597, 125, 518, 120, 495, 998, 596,
	953, 271, 292, 286, 280, 230, 230, 253, 469, 252,
	434, 433, 433, 445, 434, 502, 6, 4, 445, 448,
	704, 481, 1026, 996, 294, 460, 462, 518, 436, 5,
	264, 538, 910, 488, 119, 869, 864, 861, 494, 499,
	228, 859, 848, 229, 818, 679, 620, 611, 483, 393,
	607, 426, 543, 191, 424, 306, 1040, 1014, 924, 232,
	296, 138, 816, 228, 450, 296, 229, 545, 549, 807,
	568, 125, 446, 120, 227, 576, 797, 796, 1003, 711,
	696, 567, 232, 668, 874, 579, 900, 565, 534, 703,
	392, 580, 176, 175, 342, 119, 294, 343, 487, 287,
	277, 274, 273, 249, 125, 221, 120, 908, 446, 194,
	230, 501, 193, 446, 38, 143, 489, 495, 119, 121,
	419, 854, 386, 601, 181, 182, 174, 177, 179, 180,
	178, 134, 602, 308, 1031, 307, 1030, 445, 445, 1010,
	228, 1006, 264, 229, 230, 600, 689, 690, 443, 125,
	603, 120, 1005, 573, 995, 946, 227, 488, 494, 232,
	907, 598, 858, 799, 793, 792, 445, 689, 690, 445,
	786, 445, 230, 228, 699, 315, 229, 685, 544, 319,
	542, 539, 1046, 498, 518, 536, 395, 346, 537, 155,
	591, 667, 232, 518, 258, 119, 1020, 944, 38, 435,
	518, 518, 518, 518, 518, 923, 6, 4, 922, 920,
	821, 230, 723, 351, 634, 621, 305, 196, 228, 5,
	631, 229, 487, 432, 852, 638, 223, 224, 119, 227,
	227, 227, 446, 446, 798, 686, 568, 232, 790, 791,
	636, 722, 230, 568, 681, 682, 294, 266, 633, 227,
	227, 691, 705, 693, 725, 688, 512, 721, 259, 260,
	256, 446, 666, 700, 446, 729, 446, 452, 125, 420,
	124, 1009, 673, 119, 456, 528, 451, 423, 269, 728,
	726, 422, 303, 125, 227, 738, 227, 298, 466, 623,
	624, 270, 90, 294, 805, 627, 628, 834, 842, 465,
	125, 294, 454, 509, 38, 742, 125, 528, 120, 294,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 777, 746, 518,
	124, 38, 38, 744, 125, 745, 890, 891, 892, 889,
	888, 887, 281, 285, 230, 320, 294, 460, 61, 125,
	125, 125, 262, 515, 505, 778, 518, 568, 992, 780,
	802, 483, 316, 321, 227, 267, 787, 123, 268, 518,
	720, 501, 568, 672, 258, 817, 271, 127, 128, 435,
	788, 568, 823, 572, 232, 884, 737, 399, 258, 207,
	783, 885, 725, 808, 883, 820, 884, 801, 206, 716,
	717, 822, 885, 569, 810, 883, 570, 294, 1007, 53,
	813, 238, 836, 871, 837, 838, 294, 258, 569, 815,
	119, 570, 131, 131, 258, 1037, 230, 569, 258, 435,
	570, 284, 784, 283, 710, 44, 518, 467, 259, 260,
	1008, 336, 518, 518, 162, 890, 891, 892, 889, 888,
	887, 466, 259, 260, 528, 560, 890, 891, 892, 889,
	888, 887, 1043, 528, 225, 233, 227, 926, 227, 44,
	528, 528, 528, 528, 528, 853, 1012, 856, 876, 855,
	568, 259, 260, 863, 999, 851, 568, 862, 259, 260,
	975, 284, 259, 260, 872, 875, 970, 893, 956, 230,
	230, 230, 899, 894, 925, 227, 547, 258, 518, 897,
	903, 898, 282, 800, 689, 690, 1024, 264, 443, 230,
	230, 692, 689, 690, 1019, 981, 443, 518, 912, 568,
	917, 585, 957, 587, 586, 932, 125, 812, 748, 445,
	921, 747, 637, 635, 931, 632, 568, 445, 258, 588,
	562, 511, 478, 255, 230, 396, 230, 934, 323, 914,
	202, 201, 914, 936, 904, 198, 135, 518, 919, 595,
	593, 259, 260, 594, 935, 938, 734, 670, 525, 548,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 516, 942, 528,
	958, 965, 259, 260, 897, 518, 397, 450, 254, 251,
	518, 556, 568, 803, 568, 385, 581, 362, 361, 360,
	359, 826, 731, 983, 446, 991, 528, 730, 857, 516,
	518, 518, 446, 896, 230, 829, 568, 830, 882, 528,
	1004, 1017, 38, 990, 865, 1015, 976, 991, 989, 988,
	38, 982, 987, 985, 984, 960, 933, 1029, 568, 1002,
	1018, 881, 880, 879, 518, 568, 930, 955, 1022, 1016,
	927, 1000, 1001, 878, 568, 877, 480, 715, 713, 571,
	400, 40, 719, 566, 398, 1027, 39, 909, 1039, 911,
	564, 568, 873, 14, 38, 13, 38, 1045, 1042, 1035,
	867, 1034, 1041, 1032, 1011, 1021, 528, 948, 868, 814,
	709, 809, 528, 528, 561, 195, 1, 341, 841, 741,
	442, 387, 163, 339, 683, 38, 535, 951, 289, 457,
	38, 160, 38, 156, 38, 38, 230, 317, 230, 313,
	126, 940, 941, 333, 789, 606, 680, 10, 945, 248,
	74, 38, 38, 947, 75, 949, 950, 208, 209, 210,
	211, 213, 214, 215, 216, 217, 218, 219, 220, 212,
	115, 265, 63, 88, 584, 230, 966, 967, 528, 89,
	517, 100, 73, 11, 325, 99, 516, 98, 78, 118,
	523, 3, 0, 0, 0, 516, 0, 528, 0, 0,
	906, 0, 516, 516, 516, 516, 516, 639, 0, 0,
	38, 641, 640, 0, 0, 0, 0, 0, 38, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	652, 653, 38, 0, 0, 0, 0, 528, 559, 661,
	663, 662, 664, 649, 650, 651, 642, 644, 645, 643,
	0, 0, 0, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1033, 0, 671, 639, 0, 665,
	647, 641, 640, 674, 675, 676, 677, 678, 0, 1047,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 0,
	528, 656, 655, 646, 648, 659, 660, 657, 658, 661,
	663, 662, 664, 649, 650, 651, 642, 644, 645, 643,
	528, 528, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 0,
	0, 516, 0, 0, 528, 208, 209, 210, 211, 213,
	214, 215, 216, 217, 218, 219, 220, 212, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 776,
	0, 0, 671, 347, 0, 0, 0, 231, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 30, 208, 209,
	210, 211, 213, 214, 215, 216, 217, 218, 219, 220,
	212, 0, 272, 0, 0, 0, 0, 0, 516, 0,
	146, 150, 154, 0, 516, 516, 164, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 50, 191, 0, 0, 0,
	222, 0, 0, 0, 234, 235, 236, 237, 0, 0,
	239, 0, 241, 242, 243, 244, 245, 246, 247, 0,
	153, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	275, 276, 0, 278, 279, 176, 175, 204, 0, 846,
	516, 0, 231, 0, 290, 849, 850, 0, 0, 0,
	226, 226, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 272, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 905, 0, 0, 0, 0, 0, 0, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	0, 0, 154, 231, 0, 0, 0, 516, 0, 0,
	0, 0, 516, 0, 0, 352, 402, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 0,
	939, 0, 516, 516, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 0, 0, 0, 0, 0, 0, 239, 0, 428,
	430, 430, 0, 0, 0, 0, 516, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 154, 154, 0, 0, 463, 0, 0, 430, 0,
	0, 0, 0, 0, 430, 290, 0, 0, 0, 0,
	430, 430, 0, 0, 154, 0, 0, 430, 493, 0,
	0, 0, 0, 497, 0, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 475, 0, 0,
	639, 0, 484, 647, 641, 640, 0, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 550, 551, 552, 553,
	554, 168, 170, 169, 191, 655, 646, 648, 659, 660,
	657, 658, 661, 663, 662, 664, 649, 650, 651, 642,
	644, 645, 643, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 797, 796, 0, 0, 154,
	0, 192, 172, 176, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 0, 0, 0, 0, 599, 574, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	612, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 622, 639, 0, 0, 647, 641,
	640, 231, 231, 231, 0, 0, 0, 0, 0, 0,
	0, 654, 652, 653, 0, 0, 0, 0, 0, 272,
	0, 231, 231, 659, 660, 657, 658, 661, 663, 662,
	664, 649, 650, 651, 642, 644, 645, 643, 0, 0,
	0, 475, 0, 0, 0, 0, 847, 340, 687, 639,
	0, 665, 647, 641, 640, 0, 231, 0, 231, 0,
	0, 0, 0, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 655, 646, 648, 659, 660, 657,
	658, 661, 663, 662, 664, 649, 650, 651, 642, 644,
	645, 643, 0, 0, 0, 0, 0, 0, 733, 0,
	0, 0, 0, 0, 430, 739, 0, 0, 0, 0,
	0, 0, 0, 154, 389, 702, 702, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 418, 418, 0, 0, 654, 652,
	653, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 176, 175,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 475,
	0, 475, 0, 0, 0, 484, 639, 845, 665, 647,
	641, 640, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 794, 0, 0,
	656, 655, 646, 648, 659, 660, 657, 658, 661, 663,
	662, 664, 649, 650, 651, 642, 644, 645, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 639, 0, 0, 647,
	641, 640, 0, 430, 430, 0, 0, 0, 231, 0,
	231, 843, 168, 170, 169, 191, 0, 0, 0, 806,
	656, 655, 646, 648, 659, 660, 657, 658, 661, 663,
	662, 664, 649, 650, 651, 642, 644, 645, 643, 0,
	0, 0, 0, 0, 0, 840, 0, 231, 0, 0,
	0, 0, 192, 172, 176, 175, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 860, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	475, 21, 0, 430, 0, 22, 23, 37, 44, 15,
	24, 35, 0, 0, 36, 9, 0, 26, 0, 31,
	80, 81, 7, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	8, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 630, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	15, 24, 35, 0, 0, 36, 9, 0, 26, 0,
	31, 80, 81, 7, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 8, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 500, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 15, 24, 35, 0, 0, 36, 9, 0, 26,
	0, 31, 80, 81, 7, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 8, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 330, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 1048, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 330, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 1038, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 1028, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 330, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 994, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 993, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 330,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 0, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	330, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 972,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 330, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	971, 34, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 330, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 969, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 968, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 330, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 918, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 330, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 684, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 330, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 0, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 330, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 563, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 326, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 330, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 0, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 0, 34,
	943, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 0,
	34, 915, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	0, 34, 811, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 0, 34, 335, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 332, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 168, 170, 169, 191, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 0, 0,
	0, 835, 192, 172, 176, 175, 654, 652, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 782, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 785, 639, 0, 665, 647, 641, 640,
	654, 652, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 743, 0, 0, 656, 655,
	646, 648, 659, 660, 657, 658, 661, 663, 662, 664,
	649, 650, 651, 642, 644, 645, 643, 0, 639, 0,
	665, 647, 641, 640, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 655, 646, 648, 659, 660, 657, 658,
	661, 663, 662, 664, 649, 650, 651, 642, 644, 645,
	643, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	0, 0, 168, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 740, 0, 0, 0, 0,
	0, 0, 192, 172, 176, 175, 0, 0, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 697, 0, 0, 0, 0, 192, 172,
	176, 175, 0, 0, 0, 0, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 694,
	0, 0, 0, 0, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 629, 0, 0,
	0, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	0, 0, 168, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 626, 0, 0, 0, 0,
	0, 0, 192, 172, 176, 175, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 608, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 589, 0, 0,
	0, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 172, 176, 175, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 425, 0, 0, 192,
	172, 176, 175, 168, 170, 169, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	0, 0, 0, 192, 172, 176, 175, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 394, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 345, 0, 0, 0, 0, 0, 192, 172, 176,
	175, 0, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 344, 0,
	0, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	0, 168, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 165, 0, 0, 0, 0,
	0, 192, 172, 176, 175, 654, 652, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 0, 639, 0, 665, 647, 641, 640, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 655, 646,
	648, 659, 660, 657, 658, 661, 663, 662, 664, 649,
	650, 651, 642, 644, 645, 643, 0, 0, 0, 192,
	172, 176, 175, 652, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	639, 0, 665, 647, 641, 640, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 656, 655, 646, 648, 659, 660,
	657, 658, 661, 663, 662, 664, 649, 650, 651, 642,
	644, 645, 643, 0, 0, 192, 172, 176, 175, 0,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 639, 0, 665, 647,
	641, 640, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	656, 655, 646, 648, 659, 660, 657, 658, 661, 663,
	662, 664, 649, 650, 651, 642, 644, 645, 643, 0,
	192, 172, 176, 175, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 192, 172, 176, 175, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 0, 172, 176, 175, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 0, 172, 176, 175, 0, 0, 0,
	0, 82, 83, 71, 0, 104, 105, 125, 87, 120,
	0, 0, 0, 0, 0, 94, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	486, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 639,
	62, 479, 96, 641, 640, 485, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 659, 660, 657,
	658, 661, 663, 662, 664, 649, 650, 651, 642, 644,
	645, 643, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 191, 0, 0, 142, 112, 108,
	102, 486, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 147, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 172, 176, 175, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 485, 57, 56, 58,
	59, 72, 119, 0, 0, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 639, 0, 0, 647, 641, 640, 0, 0,
	0, 0, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 648,
	659, 660, 657, 658, 661, 663, 662, 664, 649, 650,
	651, 642, 644, 645, 643, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 191, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 147, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 176, 175, 844, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 147, 148, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 0, 0,
	0, 0, 62, 0, 96, 0, 0, 615, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 0, 104, 105,
	125, 87, 120, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 191, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 147, 148, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 172, 176, 175, 91, 76, 0,
	0, 0, 0, 62, 0, 96, 0, 0, 613, 57,
	56, 58, 59, 72, 119, 0, 0, 0, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 82, 83, 71, 0, 104, 105,
	125, 87, 120, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 147, 148, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 0,
	0, 0, 0, 62, 0, 96, 0, 0, 291, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 0, 104,
	105, 125, 87, 120, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 148,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	0, 0, 0, 0, 62, 427, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 0,
	104, 105, 125, 87, 120, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 147,
	148, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 0, 0, 0, 0, 62, 0, 96, 0, 0,
	403, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	0, 104, 105, 125, 87, 120, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	147, 148, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 0, 0, 151, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 0, 104, 105, 125, 87, 120, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 147, 148, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 0, 0, 149, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 0, 104, 105, 125, 87, 120, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 147, 148, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 0, 0, 145, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 0, 104, 105, 125, 87, 120, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 147, 148, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 0, 0, 0, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 0, 104, 105, 125, 439, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 147, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 104, 105, 125, 77, 41, 148, 0, 0, 0,
	0, 526, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 0, 524, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	0, 0, 519, 112, 108, 520, 104, 105, 125, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 775, 533, 0, 522, 0,
	0, 0, 532, 531, 529, 530, 0, 0, 521, 0,
	524, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 527, 0, 0, 0, 0, 519, 112, 108,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 522, 0, 0, 0, 532, 531, 529,
	530,
}
var yyPact = [...]int{

	-1000, -1000, 2503, -1000, -1000, -1000, -1000, 326, 588, 680,
	135, -1000, 339, -1000, -1000, 896, -1000, 268, 268, 5123,
	322, 268, 7825, 7694, 7563, 398, 176, 772, 7956, -1000,
	5954, 319, 316, -1000, -1000, 428, 7956, 895, 7, 891,
	890, 7956, -1000, -1000, -1000, -1000, 686, -1000, 677, -1000,
	-71, 312, 7956, 452, 469, 469, 7956, 7956, 7956, 7956,
	-1000, -1000, 8218, -1000, 7956, 7956, 7956, 7956, 7956, 7956,
	7956, 310, -1000, -1000, 214, 212, 876, 7956, 635, 626,
	309, 308, 7956, 7956, 307, 7956, 7956, -1000, 209, -1000,
	-1000, 835, 756, -1000, 208, 306, 7170, -1000, 207, 195,
	-1000, 272, 866, 539, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 149, 175, -1000, 534, 267, -1000, 427,
	-1000, 261, 344, -1000, 866, -1000, 123, 620, 603, -1000,
	674, 866, -1000, 888, -1000, 0, 4206, 4992, 8218, 4861,
	760, 7, 518, 7956, 305, -1000, 5907, -1000, 738, -1000,
	5860, -1000, 396, 1242, 6042, -1000, 112, -1000, -1000, 424,
	106, 7, -5, 100, 6042, -1000, -1000, -1000, -1000, -1000,
	7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956,
	7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956,
	7956, 626, 330, 469, 7956, 297, -1000, 5813, 395, 885,
	-1000, 672, -1000, -1000, -71, 5766, -1000, -1000, 7432, 7956,
	7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956, 7956,
	7956, 391, -1000, -1000, -1000, -1000, -1000, 272, 517, 866,
	533, 529, -1000, -1000, -105, -105, -29, -105, 260, 5722,
	257, -105, -105, -105, -105, -105, -105, -105, -1000, 7301,
	-1000, 7956, 7956, 7956, 435, 745, 752, -1000, 233, 8087,
	469, 6254, 97, 267, 528, -1000, 494, 515, 866, 575,
	149, 175, 526, 7956, 7956, 6042, 6042, 7956, 6042, 6042,
	7956, 512, 745, 716, -1000, 702, 7956, 7170, 163, 54,
	5678, 469, 7956, 7956, 882, -1000, 6467, 272, 230, 7956,
	7956, 149, 427, 166, -1000, 7956, 392, -1000, -1000, 2372,
	272, -1000, 681, 50, -1000, 665, 866, -8, -1000, 604,
	866, 881, 557, -10, 8378, -1000, -1000, -1000, -1000, -1000,
	295, -1000, -1000, -1000, -1000, -1000, 268, -1000, 390, 48,
	6042, -1000, 389, 387, -1000, -1000, -1000, -1000, -1000, 176,
	-1000, 7956, -1000, -1000, 834, -1000, 8378, -1000, 7956, 7956,
	7956, 7956, 7956, 6213, 7006, 6755, 1899, -1, -1, -1,
	-29, -105, -29, -29, 130, 130, 1336, 1336, 1336, 1336,
	293, 293, 293, 293, -1000, 7956, -1000, 108, -1000, -1000,
	1159, 766, 880, 4075, -1000, -1000, -1000, 294, -1000, 664,
	668, 7956, 6254, 314, 6254, 6254, 6254, 6254, 6254, 6254,
	6254, 6254, 6254, 6254, 6254, 6254, 91, -1000, -1000, 292,
	866, 272, 97, 97, -1000, -1000, -1000, -1000, -105, 162,
	6042, 161, -1000, -1000, -1000, -1000, 861, 879, 5597, 194,
	400, -1000, 204, -1000, -1000, 149, 175, -1000, 7956, -1000,
	-1000, 174, 866, 494, 97, 149, 174, 56, -1000, -71,
	-1000, 971, 256, 5549, 158, -1000, -1000, -1000, 155, 253,
	-1000, -1000, 7020, 6889, -1000, -1000, 153, 152, -1000, -1000,
	55, 252, -1000, -1000, -71, 469, 7956, -1000, 267, 267,
	-1000, -1000, 151, 5505, 267, 267, -1000, 5457, -1000, 2241,
	-1000, -1000, -1000, -1000, 620, 875, 549, -1000, 603, 873,
	541, -1000, 872, 8378, -1000, 5998, -1000, -1000, 494, 510,
	866, 290, 8378, -1000, -1000, -1000, -1000, 696, 524, 8378,
	8378, 8378, 8378, 8378, 251, 481, 4337, 3944, 386, 7956,
	7956, 465, -1000, 830, -1000, -1000, 5409, -22, 287, -1000,
	6042, 6336, 6584, 6128, 6254, 5361, 7956, 383, 469, 291,
	291, -2, -26, 733, 286, 679, 654, -1000, 494, 505,
	866, 423, 664, -1000, -71, -1000, 626, -31, 391, 391,
	272, -1000, -1000, -1000, 147, -1000, -1000, -1000, -1000, -1000,
	7956, -1000, -1000, 181, 173, 267, 7956, 7956, 149, 5315,
	-1000, 494, -1000, -1000, -1000, 7956, -1000, -1000, -1000, -1000,
	-1000, -1000, 5267, 469, 6042, 469, -1000, -1000, -1000, 6598,
	-1000, -1000, 6042, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 871, -1000, -1000, 868, -1000, -1000, 8378,
	8378, 8378, 8378, 8378, 8378, 8378, 8378, 8378, 8378, 8378,
	8378, 8378, 8378, 8378, 8378, 8378, 8378, 8378, 8378, 8378,
	8378, 8378, 8378, 8378, 8378, 8303, 866, 494, 8378, 141,
	35, 5223, 543, 720, -72, -72, -74, -74, 5179, 379,
	-1000, 268, 5123, 475, 374, -1000, 373, 6042, -1000, 7956,
	285, 444, 372, 822, -1000, 8378, 679, -1000, 6295, -1000,
	-1000, 566, -1000, 469, 276, 566, 4730, 867, 8378, 717,
	269, 679, 250, 33, -1000, 7, -1000, -1000, -1000, 421,
	664, 866, 494, -1000, 32, -1000, -1000, 7956, -1000, -20,
	-1000, 177, -1000, 5135, 570, 7956, 7956, -1000, 131, 2035,
	-1000, 571, -1000, 6758, -1000, -1000, -1000, -1000, -1000, 1921,
	-74, -74, -72, -72, -72, -72, 6627, 6464, 1740, 99,
	99, -74, 6171, -9, 6085, 44, 1595, 1032, 1032, 1032,
	1032, 88, 88, 88, 88, 8378, 1794, 494, 248, -1000,
	-1000, 8378, 8378, -1000, -1000, -1000, -1000, 5123, -1000, 459,
	268, 329, -1000, 7956, 1654, -1000, -1000, -1000, -1000, -1000,
	371, -1000, 247, 7956, 243, 291, -1000, 391, 242, -1000,
	-1000, -1000, -34, -1000, -1000, -1000, -1000, 241, 709, 679,
	331, -1000, 32, 494, 698, 664, 267, 6254, -1000, -1000,
	150, 570, 7956, -1000, 97, 296, -1000, 120, 119, -1000,
	-1000, -1000, 97, 6042, 469, -1000, 1981, 8378, -1000, 1092,
	5998, -1000, 369, 315, -1000, 238, -1000, 4337, -1000, 709,
	6295, 4599, -1000, -23, 4599, 3813, 8378, 420, 664, 419,
	416, 265, -1000, 832, -1000, 687, -1000, -1000, -1000, -27,
	-1000, 738, 578, -1000, 865, 664, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7956, 570, -1000, 113, -1000,
	-1000, -1000, -1000, -1000, -1000, 1981, 8378, -1000, -1000, 4337,
	4468, 4337, 408, -1000, -1000, -1000, -1000, -1000, 364, -1000,
	-1000, -1000, -1000, -1000, 202, -48, -1000, 826, -1000, 862,
	7, -1000, -49, -37, -1000, 111, 570, -1000, -1000, 5998,
	4337, -1000, -1000, -1000, -1000, 3682, -1000, 3551, 824, 3420,
	3289, -38, -1000, 818, 8378, -36, -53, -57, 855, 8378,
	-1000, 664, -1000, 688, -1000, -1000, 3158, 3027, 363, -1000,
	229, -1000, -1000, -1000, 200, -1000, -1000, -1000, 812, 8378,
	8378, -1000, -1000, -1000, 288, 688, -1000, 361, 350, 703,
	751, 523, -1000, 348, -1000, -1000, -1000, -1000, 804, -73,
	-1000, -1000, 264, -1000, -1000, -1000, -1000, 664, 578, 854,
	-1000, 407, -1000, 8378, 679, -35, -1000, 846, -1000, -1000,
	-1000, -1000, 228, 664, -1000, 2896, 345, -1000, -1000, -1000,
	-1000, -1000, 724, 2765, -1000, 724, -1000, 263, -1000, -1000,
	664, -1000, 790, 167, -1000, 393, -1000, 2634, -1000,
}
var yyPgo = [...]int{

	0, 134, 1141, 32, 45, 35, 622, 1140, 1139, 44,
	280, 1312, 18, 1377, 81, 78, 59, 749, 1425, 1138,
	31, 1137, 1135, 1134, 37, 1133, 47, 41, 1132, 1131,
	1130, 1129, 58, 1124, 1123, 29, 1122, 30, 64, 23,
	1121, 688, 33, 1120, 11, 1104, 1100, 24, 1099, 54,
	49, 36, 1097, 1096, 1094, 1093, 1092, 34, 5, 60,
	0, 1090, 1089, 1087, 182, 1083, 1081, 590, 1079, 1078,
	50, 15, 1077, 8, 1076, 1074, 1073, 25, 38, 1072,
	1071, 139, 21, 27, 7, 1070, 1069, 1068, 16, 130,
	1067, 1066, 1065, 1064, 1061, 1060, 1059, 1058, 1057, 1054,
	1053, 1051, 1050, 1049, 2, 1048, 1047, 1045, 1043, 19,
	1042, 1040, 3, 1036, 1034, 1033, 1032, 13, 1031, 1030,
	1029, 20, 22, 1028, 14, 1027, 1026, 48, 1025, 1023,
	1020, 1017, 1013, 1012, 1011, 1009, 1007, 1006, 1005, 1004,
	1003, 4, 1002, 999, 998, 995, 993, 991, 1, 988,
	6, 17, 987, 985, 983, 977, 972, 971, 970, 969,
	968, 967, 966, 965, 963, 961, 959, 958, 956, 919,
	693, 26, 918, 917, 28, 12, 916, 915, 913, 910,
	909,
}
var yyR1 = [...]int{

	0, 91, 59, 59, 60, 60, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 61, 61, 3,
	3, 3, 3, 62, 62, 4, 4, 4, 4, 63,
	63, 5, 5, 5, 5, 52, 52, 64, 64, 23,
	23, 23, 23, 24, 24, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 92, 25,
	25, 25, 25, 25, 95, 97, 98, 99, 100, 95,
	96, 102, 96, 101, 101, 103, 103, 105, 106, 104,
	80, 80, 57, 50, 51, 109, 109, 110, 110, 111,
	107, 115, 108, 119, 108, 113, 113, 113, 113, 114,
	114, 118, 120, 120, 116, 116, 121, 121, 83, 83,
	82, 82, 82, 56, 56, 58, 58, 94, 94, 93,
	93, 90, 90, 90, 90, 78, 78, 78, 122, 122,
	55, 55, 74, 74, 75, 75, 53, 53, 54, 54,
	112, 112, 123, 123, 124, 124, 125, 125, 125, 125,
	89, 89, 89, 126, 126, 127, 127, 127, 127, 65,
	65, 26, 26, 26, 66, 66, 66, 66, 117, 117,
	130, 128, 128, 128, 135, 128, 133, 137, 137, 138,
	138, 139, 139, 140, 140, 141, 141, 142, 145, 145,
	146, 146, 144, 143, 143, 147, 147, 136, 136, 129,
	129, 134, 134, 149, 149, 148, 148, 148, 148, 148,
	148, 131, 131, 131, 131, 132, 132, 79, 79, 77,
	77, 76, 76, 150, 150, 152, 152, 154, 153, 153,
	153, 155, 156, 155, 41, 14, 14, 14, 157, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 158, 14, 159,
	14, 160, 14, 161, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 162, 14, 163, 164, 14, 165, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 166,
	14, 14, 14, 14, 14, 14, 14, 168, 14, 169,
	14, 49, 49, 49, 49, 46, 46, 46, 46, 45,
	45, 1, 73, 73, 72, 72, 72, 72, 22, 22,
	22, 22, 22, 22, 22, 22, 10, 10, 10, 10,
	44, 44, 44, 42, 42, 40, 40, 86, 86, 87,
	48, 48, 48, 167, 167, 167, 88, 88, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	7, 27, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 34, 34, 34, 34, 28,
	28, 28, 28, 28, 28, 28, 171, 171, 174, 174,
	173, 173, 173, 173, 13, 13, 47, 47, 15, 16,
	17, 18, 18, 176, 176, 177, 151, 178, 178, 180,
	179, 175, 175, 175, 39, 39, 43, 43, 11, 21,
	21, 19, 19, 19, 20, 20, 20, 9, 9, 9,
	8, 8, 12, 12, 84, 84, 85, 85, 85, 38,
	38, 81, 81, 71, 71, 37, 37, 37, 70, 70,
	69, 69, 69, 69, 69, 69, 69, 69, 67, 67,
	67, 67, 32, 32, 32, 32, 32, 32, 33, 33,
	33, 36, 36, 36, 36, 36, 36, 36, 36, 68,
	68, 35, 35, 29, 29, 30, 31,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 4,
	3, 5, 4, 3, 4, 4, 2, 3, 1, 1,
	3, 2, 4, 3, 1, 1, 3, 2, 4, 3,
	1, 1, 3, 2, 4, 5, 4, 2, 0, 1,
	1, 1, 4, 1, 2, 3, 5, 8, 3, 5,
	9, 3, 2, 3, 2, 3, 2, 3, 3, 2,
	3, 3, 3, 1, 2, 5, 8, 8, 0, 6,
	1, 6, 3, 3, 0, 0, 0, 0, 0, 13,
	0, 0, 5, 1, 0, 1, 2, 0, 0, 10,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	10, 0, 8, 0, 7, 1, 2, 1, 2, 0,
	2, 1, 0, 2, 0, 2, 1, 3, 0, 2,
	1, 2, 4, 1, 4, 1, 4, 1, 4, 3,
	5, 3, 4, 4, 5, 0, 5, 4, 1, 1,
	1, 4, 0, 4, 0, 5, 0, 2, 0, 3,
	1, 0, 1, 3, 4, 6, 0, 1, 1, 1,
	2, 3, 3, 1, 3, 1, 1, 2, 2, 3,
	1, 1, 2, 4, 3, 5, 1, 3, 2, 0,
	0, 4, 2, 1, 0, 9, 3, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 2, 3, 1, 3,
	1, 1, 3, 4, 3, 0, 1, 1, 3, 1,
	1, 0, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 5, 4, 3, 1, 0,
	1, 3, 1, 2, 1, 4, 3, 0, 3, 1,
	1, 0, 0, 2, 3, 6, 3, 4, 0, 7,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 0, 4, 0,
	4, 0, 4, 0, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 0, 5, 0, 0, 7, 0, 5,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 0,
	3, 1, 1, 1, 3, 2, 1, 0, 10, 0,
	11, 2, 2, 4, 4, 4, 4, 4, 4, 4,
	3, 1, 0, 4, 3, 4, 1, 2, 2, 4,
	3, 4, 4, 4, 4, 2, 1, 1, 3, 2,
	1, 3, 2, 1, 1, 4, 1, 2, 0, 2,
	0, 2, 1, 0, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	3, 1, 1, 1, 1, 3, 2, 4, 3, 1,
	1, 1, 4, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 2, 2, 3, 1, 1, 3, 2, 1,
	1, 1, 1, 3, 3, 1, 0, 2, 0, 1,
	5, 3, 3, 1, 1, 1, 3, 3, 1, 1,
	1, 5, 1, 2, 0, 0, 4, 4, 4, 0,
	2, 1, 1, 0, 1, 2, 3, 3, 1, 4,
	4, 1, 1, 1, 1, 2, 1, 4, 4, 1,
	1, 4, 0, 1, 1, 1, 4, 4, 1, 1,
	3, 1, 2, 3, 1, 1, 4, 0, 0, 2,
	5, 3, 3, 1, 6, 4, 4, 2, 2, 2,
	1, 2, 1, 4, 3, 3, 6, 3, 1, 1,
	1, 4, 4, 4, 2, 2, 4, 2, 2, 1,
	3, 1, 1, 3, 3, 3, 3,
}
var yyChk = [...]int{

	-1000, -91, -59, -2, -24, -50, -51, 51, 79, 44,
	-52, -25, 10, -107, -108, 38, 119, 7, 21, 20,
	23, 30, 34, 35, 39, -49, 46, 98, 19, 14,
	-13, 48, 25, 27, 121, 40, 43, 36, -1, -113,
	-118, 97, -15, -14, 37, 52, 99, 53, 100, 54,
	-18, 59, 92, -17, 104, 105, 130, 129, 131, 132,
	-47, -41, 123, -36, 107, 108, 109, 110, 111, 112,
	113, 6, 133, -28, -46, -45, 118, 96, -19, 91,
	49, 50, 4, 5, 84, 85, 86, 11, -34, -31,
	-6, 117, 74, 62, 18, 60, 125, -20, -21, -22,
	-29, -60, 82, -10, 8, 9, 66, 67, 81, 63,
	64, 65, 80, -9, -81, -43, -11, -39, -8, 134,
	12, 123, -60, 119, 82, 10, -61, 37, 38, -3,
	-60, 82, 121, 135, 122, 10, -64, -47, 123, -47,
	-24, -1, 79, 123, -47, 121, -13, 97, 98, 121,
	-13, 121, -14, -18, -13, 121, -65, -26, 12, 134,
	-66, -1, 12, -79, -13, 121, 149, 150, 87, 89,
	88, 151, 128, 152, 163, 130, 129, 164, 167, 165,
	166, 161, 162, 155, 156, 153, 154, 157, 158, 159,
	160, 90, 127, 123, 123, -92, 119, -13, 10, -109,
	128, 10, 10, -14, -18, -13, 52, 52, 136, 137,
	138, 139, 148, 140, 141, 142, 143, 144, 145, 146,
	147, 123, -13, 104, 105, -17, -18, -60, 79, 82,
	-10, -11, 98, -17, -13, -13, -13, -13, -41, -13,
	-49, -13, -13, -13, -13, -13, -13, -13, -48, 123,
	-47, -166, 125, 125, -167, 17, -67, -32, 12, 76,
	77, -13, 57, -42, -10, -40, -60, 79, 82, -20,
	-9, -81, -11, 123, 123, -13, -13, 123, -13, -13,
	125, -67, 17, 17, 75, -67, 125, 123, -70, -69,
	-13, 128, 125, 125, 82, -89, 123, -60, 78, 125,
	119, -9, 134, 78, -89, 119, 124, 121, 119, -59,
	-60, 121, 135, -62, -4, -60, 82, -63, -5, -60,
	82, 29, -60, 10, 136, -23, 120, -24, -50, -51,
	51, -24, 122, -55, -24, 122, 21, -109, -77, -76,
	-13, -90, 119, 122, 121, 121, 121, 121, 121, 135,
	-15, 119, -18, 121, 135, -109, 136, 121, 135, -158,
	-159, -160, -161, -13, -13, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -13, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -42, -163, 122, -80, -57, -18,
	-18, -14, 123, -64, 121, 121, 10, -168, -114, 55,
	-119, 58, -13, 128, -13, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -13, -13, -71, -37, -18, 59,
	82, -60, 78, 78, 124, 124, 124, 124, -13, -12,
	-13, -12, 118, -32, -32, 17, 125, 57, -13, 11,
	-18, -84, -85, -39, -38, -9, -81, 10, 119, -88,
	-89, 78, 82, -60, 57, -9, 78, -68, -35, -18,
	-14, -18, -14, -13, -12, 117, 75, 75, -12, -70,
	126, -174, 135, 58, -16, -18, -12, -12, 10, 124,
	-126, -49, -127, -14, -18, 128, 83, -89, -38, -39,
	10, 52, -12, -13, -38, -39, 10, -13, 121, -59,
	120, -89, -3, 121, 135, 29, -60, 121, 135, 29,
	-60, 10, 29, 136, -27, -170, -6, -30, -60, 79,
	82, 60, 125, -7, 62, -172, 18, 74, -10, 131,
	132, 130, 129, 123, 123, -74, -64, -64, -47, 121,
	135, -78, 121, -78, 121, -26, -13, 12, -169, -27,
	-13, -13, -13, -13, -13, -13, -165, 124, 135, 29,
	29, -93, 10, 120, -111, 123, -115, -44, -60, 79,
	82, -120, 55, -14, -18, -18, 91, 124, 135, 123,
	-60, -162, 126, 126, -33, 10, 13, 12, 10, 120,
	125, 120, -175, -179, -178, -180, 125, 119, -9, -13,
	-39, -60, -84, -39, 124, 135, 124, 124, 124, 126,
	126, 124, -13, 128, -13, 128, 126, 126, 124, 135,
	124, -16, -13, -89, -89, 126, 120, -89, -89, 120,
	120, -4, 10, 29, -5, 10, 29, 10, -27, 125,
	130, 129, 164, 167, 165, 166, 151, 128, 152, 161,
	162, 163, 88, 89, 87, 150, 149, 155, 156, 153,
	154, 157, 159, 158, 160, 127, 82, -60, 123, -171,
	-173, -170, 17, 78, -170, -170, -170, -170, -170, 124,
	-53, 93, 94, -75, 22, 121, -77, -13, 120, 32,
	33, -78, 31, -78, 120, 136, 123, 122, -13, 121,
	-57, -82, -18, 128, 59, -82, 124, 135, 136, -95,
	41, 123, -112, -123, -124, -125, 60, 61, -44, -116,
	56, 82, -60, 119, -121, -44, -42, 136, -37, -71,
	-155, -156, 126, -13, -176, 125, 125, -89, -12, -13,
	120, -86, -35, 58, -16, -16, -127, 10, 10, -170,
	-170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
	-170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
	-170, -170, -170, -170, -170, 122, -170, -60, -171, 126,
	-174, 135, 58, 10, 52, 124, 121, -47, -24, -54,
	93, 94, 121, 121, -13, -122, 122, 121, 120, 121,
	31, -27, -112, -164, -83, 58, -18, 123, -83, -94,
	-24, 122, 10, -27, -96, 42, 123, -112, 124, 135,
	-109, 119, -121, -60, -117, 135, -157, -13, 124, -153,
	-152, -150, 125, -151, 57, 126, -151, -12, -12, 126,
	120, -87, 57, -13, 128, 126, -170, 122, 124, -170,
	-170, -24, 95, -47, 122, -77, -122, -64, 121, 124,
	-13, 124, -82, -71, 124, -64, 136, -102, -97, 124,
	-73, 44, -124, -110, 83, -117, 120, -128, -129, -132,
	-133, -134, -149, 47, 38, 44, -148, 103, 102, 101,
	98, 99, 100, -44, -88, 125, -154, -151, -12, -84,
	120, 126, 126, -84, -16, -170, 58, 121, 122, -64,
	124, -64, -73, -58, -24, 122, 124, -58, 28, -27,
	119, -44, 119, 119, 123, 12, 120, -130, 121, 135,
	-1, -148, 10, -137, -44, -12, -150, 126, -177, -170,
	-64, -56, -24, 122, 119, -64, 121, -64, -98, -64,
	-64, -72, 12, 128, 136, -131, 12, 10, -109, 136,
	-138, 135, 121, 119, 126, -175, -64, -64, 26, 120,
	12, 120, 120, 124, 135, 12, -27, 121, 135, 136,
	136, 10, -27, -44, -139, -140, -141, -142, -143, -144,
	-146, -44, 10, 24, 120, 121, 124, 12, 128, 12,
	-27, -27, -135, 120, -141, 121, 121, 45, 29, 78,
	121, -99, 12, 136, 123, -145, -44, -147, -148, 10,
	119, -27, -112, 135, 10, -64, 124, -44, 120, -136,
	121, 119, -100, -64, -101, -103, -104, 41, 120, -104,
	123, -44, -105, 12, 124, -106, 119, -64, 120,
}
var yyDef = [...]int{

	3, -2, 1, 2, 6, 7, 8, 0, 0, 0,
	0, 43, 4, 93, 94, 0, 38, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 63,
	0, 0, 0, 68, 70, 0, 0, 0, 95, 0,
	0, 326, 454, 455, 341, 105, 0, 107, 0, 111,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 370, 319, 321, 322, 323, 373, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 439, 440, 441,
	442, 0, 0, 445, 380, 0, 508, 481, 482, 483,
	435, -2, 0, 0, 378, 379, 381, 382, 383, 384,
	385, 386, 387, -2, 0, 486, 0, 0, 489, 501,
	490, 0, 0, 3, 0, 4, 0, 0, 0, 18,
	19, 0, 16, 0, 44, 0, 0, 0, 0, 0,
	0, 95, 0, 229, 0, 52, 0, 326, 356, 54,
	0, 56, 455, -2, 0, 59, 0, 170, 171, 0,
	0, 95, 176, 0, 228, 64, 267, 269, 271, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 0, 38, 0, 0, 327,
	96, 109, 103, -2, -2, 0, 106, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 250, 263, 265, 264, 460, 357, 0, 0,
	0, 0, 356, 266, 288, 289, 290, 291, 302, 0,
	0, 311, 312, 313, 314, 315, 316, 317, 318, 0,
	372, 0, 492, 492, 0, 374, 375, 520, 522, 0,
	0, 325, 0, 376, 363, 364, 357, 0, 0, 366,
	-2, 0, 0, 0, 0, 534, 535, 0, 537, 538,
	492, 0, 0, 0, 389, 0, 492, 508, 0, 448,
	513, 0, 492, 492, 0, 348, 0, -2, 0, 492,
	0, -2, 502, 0, 355, 0, 0, 10, 3, 0,
	-2, 13, 0, 0, 24, 25, 0, 0, 30, 31,
	0, 0, 21, 0, 0, 37, 45, 39, 40, 41,
	0, 142, 38, 48, 140, 38, 0, 327, 0, 230,
	232, 51, 135, 135, 53, 55, 57, 58, 60, 0,
	172, 0, 458, 61, 0, 329, 0, 62, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, -2, -2, -2, -2,
	-2, -2, -2, -2, 300, 0, 308, 0, 90, 92,
	-2, 455, 0, 0, 72, 73, 99, 0, 101, 0,
	112, 0, 246, 0, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 0, 504, 505, 0,
	0, 359, 0, 0, 303, 456, 457, 371, 320, 0,
	493, 0, 324, 521, 518, 519, 0, 0, 0, 439,
	0, -2, 494, 495, 498, 474, 0, 499, 0, 244,
	377, 0, 0, 359, 0, 485, 0, 0, 539, -2,
	-2, -2, 455, 0, 0, 443, 388, 444, 0, 0,
	340, 509, 449, 0, 517, 459, 0, 0, 5, 160,
	0, 0, 163, -2, -2, 0, 0, 350, 0, 476,
	-2, 546, 0, 0, 0, 477, -2, 0, 9, 0,
	12, 349, 17, 14, 0, 0, 27, 15, 0, 0,
	33, 20, 0, 0, 36, 391, 392, 393, -2, 0,
	0, 0, 446, 399, 400, 401, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 144, 0, 0, 229,
	0, 0, 135, 0, 135, 169, 0, 174, 0, 177,
	227, 268, 270, 272, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, -2, 114, 110, 360, 0,
	0, 0, 0, -2, -2, 247, 0, 0, 507, 507,
	358, -2, 336, 335, 0, 528, 529, 530, 524, 525,
	0, 527, 464, 471, 472, 0, 492, 0, 475, 0,
	476, 358, 368, 477, 531, 0, 532, 533, 536, 338,
	337, 339, 511, 0, 512, 0, 479, 480, 161, 0,
	162, 167, 168, 351, 352, 487, 488, 353, 354, 491,
	11, 23, 26, 0, 29, 32, 0, 22, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 446, 0,
	448, 453, 0, 0, 409, 410, 432, 433, 0, 0,
	46, 0, 0, 148, 0, 49, 0, 231, 131, 0,
	0, 0, 0, 0, 173, 0, -2, 306, 309, 65,
	91, 118, 120, 0, 0, 118, 0, 0, 0, 80,
	0, -2, 0, 150, 152, 95, 157, 158, 159, 0,
	0, 0, 362, 179, 113, 116, 248, 0, 503, 0,
	304, 0, 523, 0, 461, 492, 492, 470, 0, 0,
	500, 365, 540, 0, 515, 516, 164, 28, 34, 0,
	403, 404, 405, 406, 407, 408, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 0, -2, 0, 398,
	447, 449, 0, 390, 545, 434, 42, 0, 147, 0,
	0, 0, 141, 229, 0, 38, 138, 139, 132, 133,
	0, 175, 0, 0, 0, 0, 121, 507, 0, 69,
	127, 38, 0, 129, 71, 81, 75, 0, 342, 156,
	97, 179, 115, 361, 211, 0, 376, 245, 506, 243,
	-2, 240, 492, 234, 0, 0, 463, 0, 0, 496,
	497, 367, 0, 510, 0, 402, 430, 0, 397, 451,
	452, 143, 0, 0, 38, 0, 38, 137, 134, 342,
	307, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 98, 211, 104, 178, 180, 0,
	183, 0, -2, 210, 0, 0, 213, 215, 216, 217,
	218, 219, 220, 117, 249, 492, 0, 233, 0, 465,
	526, 468, 467, 369, 514, 431, 0, 47, 38, 149,
	0, 136, 0, 66, 125, 38, 122, 67, 0, 130,
	38, 76, 38, 38, 0, 154, 102, 0, 182, 0,
	95, 214, 0, 0, 187, 0, 238, 236, -2, 450,
	145, 50, 123, 38, 38, 0, 128, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 223, 0, 0, 0,
	186, 0, 189, 191, 235, 466, 0, 0, 0, 82,
	0, 100, 328, 343, 0, 347, 155, 181, 0, 0,
	0, 184, 226, 188, 0, 192, 193, 0, 0, 201,
	0, 0, -2, 0, 330, 126, 77, 344, 0, 221,
	224, 225, 0, 190, 194, 195, 196, 0, 205, 0,
	124, 0, 345, 0, -2, 197, 198, 0, -2, 202,
	38, 222, 0, 0, 203, 0, 0, 199, 78, 185,
	207, 38, 84, 0, 79, 83, 85, 0, 208, 86,
	0, 87, 0, 0, 88, 0, 38, 0, 89,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:224
		{
			rootnode = stmt.NewStmtList(yyDollar[1].list)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:230
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:231
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:236
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:243
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:253
		{
			yyVAL.node = yyDollar[1].node
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:255
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:257
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:259
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 10:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:265
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 11:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:275
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 12:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:285
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 13:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:291
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 14:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:297
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:307
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 16:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:317
		{
			yyVAL.node = yyDollar[1].node
		}
	case 17:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:322
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:324
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:329
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:339
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:352
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 22:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:362
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:378
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:380
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:385
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:395
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:408
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:418
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:434
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:436
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:441
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:451
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:464
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:474
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 35:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:490
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)

			yyVAL.node = yyDollar[1].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:506
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(constant, yyDollar[2].token.Comments())

			constList := []node.Node{constant}

			yyVAL.node = stmt.NewConstList(constList)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:525
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:527
		{
			yyVAL.list = []node.Node{}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:533
		{
			yyVAL.node = yyDollar[1].node
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:535
		{
			yyVAL.node = yyDollar[1].node
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:537
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:539
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:549
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:551
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(label, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:564
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:570
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			if yyDollar[5].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:584
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[4].list))

			yyVAL.node = stmt.NewIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:593
		{
			yyVAL.node = stmt.NewWhile(yyDollar[1].token, yyDollar[2].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:599
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 50:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:605
		{
			yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:611
		{
			yyVAL.node = stmt.NewSwitch(yyDollar[1].token, yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:617
		{
			yyVAL.node = stmt.NewBreak(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:623
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:629
		{
			yyVAL.node = stmt.NewContinue(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:635
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:641
		{
			yyVAL.node = stmt.NewReturn(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:647
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:653
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:659
		{
			yyVAL.node = yyDollar[1].node
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:661
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:667
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:673
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:679
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:685
		{
			yyVAL.node = yyDollar[1].node
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:687
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:693
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:703
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:712
		{
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:712
		{
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:713
		{
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:714
		{
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:715
		{
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:716
		{
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:720
		{
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:721
		{
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:722
		{
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:723
		{
		}
	case 78:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php5/php5.y:724
		{
		}
	case 79:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line php5/php5.y:725
		{
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:728
		{
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:729
		{
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:729
		{
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:733
		{
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:734
		{
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:738
		{
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:739
		{
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:743
		{
		}
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:743
		{
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:743
		{
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:748
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:750
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:755
		{
			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:759
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:763
		{
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:767
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:768
		{
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:772
		{
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:773
		{
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:777
		{
		}
	case 100:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:779
		{
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:784
		{
		}
	case 102:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:788
		{
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:790
		{
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:794
		{
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:799
		{
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:800
		{
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:801
		{
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:802
		{
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:806
		{
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:807
		{
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:811
		{
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:825
		{
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:826
		{
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:831
		{
			yyVAL.foreachVariable = foreachVariable{nil, false}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:833
		{
			yyVAL.foreachVariable = yyDollar[2].foreachVariable
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:838
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:840
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:842
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:852
		{
			yyVAL.node = yyDollar[1].node
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:854
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:864
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:866
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:881
		{
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:882
		{
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:888
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:890
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:892
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:894
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:900
		{
			yyVAL.list = []node.Node{}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:902
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			positions.AddPosition(_case, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:909
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			positions.AddPosition(_default, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:926
		{
			yyVAL.node = yyDollar[1].node
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:928
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:938
		{
			yyVAL.list = []node.Node{}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:940
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:952
		{
			yyVAL.list = []node.Node{}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:954
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[5].list))

			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:969
		{
			yyVAL.node = nil
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:971
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:981
		{
			yyVAL.node = nil
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:983
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[3].list))

			yyVAL.node = stmt.NewAltElse(stmts)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1007
		{
		}
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1009
		{
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1014
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1015
		{
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1016
		{
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1017
		{
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1023
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1024
		{
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1025
		{
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1035
		{
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1036
		{
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1037
		{
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1038
		{
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1043
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1045
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1051
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1061
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1067
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1077
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[3].token))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1094
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1111
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[1].token))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1128
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1155
		{
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1158
		{
		}
	case 185:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:1160
		{
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1168
		{
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1169
		{
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1193
		{
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1197
		{
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1198
		{
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1202
		{
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1203
		{
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1207
		{
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1211
		{
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1212
		{
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1216
		{
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1217
		{
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1221
		{
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1222
		{
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1226
		{
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1227
		{
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1231
		{
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1232
		{
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1236
		{
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1237
		{
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1241
		{
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1242
		{
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1243
		{
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1244
		{
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1245
		{
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1246
		{
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1250
		{
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1251
		{
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1252
		{
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1253
		{
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1257
		{
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1258
		{
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1263
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1265
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1271
		{
			yyVAL.list = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1273
		{
			yyVAL.list = yyDollar[1].list
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1278
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1280
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1284
		{
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1285
		{
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1289
		{
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1290
		{
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1294
		{
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1294
		{
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1295
		{
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1296
		{
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1300
		{
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1301
		{
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1302
		{
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1307
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 245:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1322
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign_op.NewAssign(list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1331
		{
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1332
		{
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1333
		{
		}
	case 249:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1333
		{
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1334
		{
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1335
		{
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1336
		{
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1337
		{
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1338
		{
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1339
		{
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1340
		{
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1341
		{
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1342
		{
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1343
		{
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1344
		{
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1345
		{
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1346
		{
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1347
		{
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1348
		{
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1349
		{
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1350
		{
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1351
		{
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1351
		{
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1352
		{
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1352
		{
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1353
		{
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1353
		{
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1354
		{
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1354
		{
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1355
		{
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1356
		{
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1357
		{
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1358
		{
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1359
		{
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1360
		{
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1361
		{
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1362
		{
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1363
		{
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1364
		{
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1365
		{
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1366
		{
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1367
		{
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1368
		{
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1369
		{
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1370
		{
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1371
		{
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1372
		{
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1373
		{
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1374
		{
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1375
		{
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1376
		{
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1377
		{
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1378
		{
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1379
		{
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1380
		{
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1381
		{
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1383
		{
			yyVAL.node = yyDollar[1].node
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1384
		{
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1384
		{
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1385
		{
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1386
		{
		}
	case 307:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1387
		{
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1388
		{
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1389
		{
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1390
		{
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1391
		{
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1392
		{
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1393
		{
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1394
		{
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1395
		{
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1396
		{
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1397
		{
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1398
		{
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1399
		{
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1399
		{
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1400
		{
			yyVAL.node = yyDollar[1].node
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1401
		{
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1402
		{
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1403
		{
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1404
		{
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1405
		{
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1406
		{
		}
	case 328:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:1408
		{
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1409
		{
		}
	case 330:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php5/php5.y:1411
		{
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1415
		{
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1416
		{
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1417
		{
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1418
		{
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1423
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1429
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1435
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(str, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(str, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[str])
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1445
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1454
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1460
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1469
		{
			yyVAL.token = yyDollar[1].token
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1474
		{
			yyVAL.list = []node.Node{}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1476
		{
			yyVAL.list = yyDollar[3].list
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1481
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1497
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1513
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1529
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(identifier, yyDollar[2].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1547
		{
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1548
		{
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1549
		{
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1550
		{
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1551
		{
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1552
		{
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1553
		{
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1554
		{
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1559
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1565
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1571
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1577
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1586
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1592
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1598
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1607
		{
			yyVAL.node = yyDollar[1].node
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1609
		{
			yyVAL.node = yyDollar[1].node
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1614
		{
			yyVAL.node = yyDollar[1].node

			for _, f := range yyDollar[3].objectPropertyList {
				switch f.fetchType {
				case arrayFetchType:
					yyVAL.node = expr.NewArrayDimFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				case propertyFetchType:
					yyVAL.node = expr.NewPropertyFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				}
			}

			for _, f := range yyDollar[4].objectPropertyList {
				switch f.fetchType {
				case arrayFetchType:
					yyVAL.node = expr.NewArrayDimFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				case propertyFetchType:
					yyVAL.node = expr.NewPropertyFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				}
			}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1644
		{
			yyVAL.node = yyDollar[1].node
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1650
		{
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, yyDollar[2].objectPropertyList...)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1652
		{
			yyVAL.objectPropertyList = []objectProperty{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1658
		{
			yyVAL.objectPropertyList = yyDollar[2].objectPropertyList
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1663
		{
			yyVAL.node = nil
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1665
		{
			yyVAL.node = nil
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1667
		{
			yyVAL.node = yyDollar[1].node
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1671
		{
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1672
		{
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1673
		{
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1678
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1680
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1685
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1691
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1697
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1703
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1709
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1715
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1721
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1727
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1733
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1739
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1745
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)) /* TODO: mark as Heredoc*/
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1750
		{
			yyVAL.node = scalar.NewEncapsed(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1759
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1771
		{
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1775
		{
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1776
		{
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1777
		{
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1778
		{
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1779
		{
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1780
		{
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1781
		{
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1782
		{
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1783
		{
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1784
		{
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1788
		{
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1789
		{
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1790
		{
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1791
		{
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1792
		{
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1793
		{
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1794
		{
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1795
		{
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1796
		{
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1797
		{
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1798
		{
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1799
		{
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1800
		{
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1801
		{
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1802
		{
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1803
		{
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1804
		{
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1805
		{
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1806
		{
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1807
		{
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1808
		{
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1809
		{
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1810
		{
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1811
		{
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1812
		{
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1813
		{
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1814
		{
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1815
		{
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1816
		{
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1817
		{
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1818
		{
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1819
		{
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1820
		{
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1825
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1827
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1833
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1839
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1848
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1858
		{
			yyVAL.node = yyDollar[1].node
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1860
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1862
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1864
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1870
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1876
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1884
		{
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1885
		{
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1894
		{
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1895
		{
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1896
		{
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1897
		{
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1902
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1904
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1909
		{
			yyVAL.node = yyDollar[2].node
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1911
		{
			yyVAL.node = yyDollar[2].node
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1917
		{
			yyVAL.node = yyDollar[1].node
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1925
		{
			yyVAL.node = yyDollar[1].node
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1932
		{
			yyVAL.node = yyDollar[1].node
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1939
		{
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1941
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1945
		{
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1946
		{
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1951
		{
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1951
		{
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1955
		{
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1956
		{
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1960
		{
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1961
		{
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1965
		{
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1966
		{
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1967
		{
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1972
		{
			yyVAL.node = yyDollar[1].node
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1974
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1987
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1993
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2003
		{
			yyVAL.node = yyDollar[1].node
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2008
		{
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2010
		{
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2014
		{
			yyVAL.node = yyDollar[1].node
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2015
		{
			yyVAL.node = yyDollar[1].node
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2016
		{
			yyVAL.node = yyDollar[1].node
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2022
		{
			yyVAL.node = yyDollar[1].node
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2024
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2034
		{
			yyVAL.node = yyDollar[1].node
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2039
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2045
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2051
		{
			yyVAL.node = yyDollar[1].node
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2057
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2067
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2075
		{
			yyVAL.node = nil
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2076
		{
			yyVAL.node = yyDollar[1].node
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2082
		{
			yyVAL.objectPropertyList = yyDollar[1].objectPropertyList
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2084
		{
			op := objectProperty{yyDollar[1].node, propertyFetchType}
			yyVAL.objectPropertyList = []objectProperty{op}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2092
		{
			op := objectProperty{yyDollar[3].node, arrayFetchType}
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, op)
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2097
		{
			op := objectProperty{yyDollar[3].node, arrayFetchType}
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, op)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2102
		{
			op := objectProperty{yyDollar[1].node, propertyFetchType}
			yyVAL.objectPropertyList = []objectProperty{op}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2110
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2116
		{
			yyVAL.node = yyDollar[2].node
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2121
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(n, yyDollar[1].token.Comments())

			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2129
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(n, yyDollar[2].token.Comments())

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)

			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2144
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2146
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2152
		{
			yyVAL.node = yyDollar[1].node
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2154
		{
			yyVAL.node = expr.NewList(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2160
		{
			yyVAL.node = nil
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2166
		{
			yyVAL.list = nil
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2168
		{
			yyVAL.list = yyDollar[1].list
		}
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2173
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2181
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2189
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2197
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2205
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[6].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2213
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			comments.AddComments(arrayItem, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2221
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2229
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[2].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(arrayItem, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{arrayItem}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2240
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2242
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2249
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2251
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2261
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2271
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2284
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(fetch, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(fetch, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2300
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2306
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2320
		{
			yyVAL.node = yyDollar[2].node
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2325
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2331
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2343
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2356
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2362
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2368
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2374
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2380
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2386
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2392
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2398
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2407
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2409
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2413
		{
			yyVAL.node = yyDollar[1].node
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2414
		{
			yyVAL.node = yyDollar[1].node
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2419
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2429
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2442
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2455
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	}
	goto yystack /* stack new state and value */
}
