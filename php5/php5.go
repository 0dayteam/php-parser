//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	//    "fmt"
	//    "strings"
	"strconv"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign_op"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"

//    "github.com/z7zmey/php-parser/node/expr/binary_op"
//    "github.com/z7zmey/php-parser/node/expr/cast"
)

//line php5/php5.y:22
type yySymType struct {
	yys                     int
	node                    node.Node
	token                   token.Token
	boolWithToken           boolWithToken
	list                    []node.Node
	foreachVariable         foreachVariable
	nodesWithEndToken       *nodesWithEndToken
	simpleIndirectReference simpleIndirectReference
	//    str string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:3145

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	104, 444,
	105, 444,
	-2, 442,
	-1, 101,
	78, 341,
	-2, 420,
	-1, 113,
	78, 460,
	123, 456,
	-2, 466,
	-1, 153,
	104, 444,
	105, 444,
	-2, 442,
	-1, 203,
	121, 315,
	124, 315,
	-2, 439,
	-1, 204,
	104, 444,
	105, 444,
	121, 316,
	124, 316,
	-2, 442,
	-1, 270,
	78, 460,
	-2, 466,
	-1, 297,
	78, 343,
	-2, 422,
	-1, 301,
	123, 457,
	-2, 467,
	-1, 310,
	78, 342,
	-2, 421,
	-1, 376,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 277,
	-1, 377,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 278,
	-1, 378,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 279,
	-1, 379,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 280,
	-1, 380,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 281,
	-1, 381,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 282,
	-1, 382,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 283,
	-1, 383,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 284,
	-1, 390,
	104, 444,
	105, 444,
	-2, 442,
	-1, 461,
	104, 444,
	105, 444,
	124, 523,
	135, 523,
	-2, 442,
	-1, 462,
	124, 524,
	135, 524,
	-2, 439,
	-1, 463,
	104, 444,
	105, 444,
	-2, 442,
	-1, 485,
	124, 154,
	135, 154,
	-2, 439,
	-1, 486,
	104, 444,
	105, 444,
	124, 155,
	135, 155,
	-2, 442,
	-1, 492,
	123, 481,
	-2, 525,
	-1, 498,
	123, 481,
	-2, 526,
	-1, 520,
	78, 341,
	-2, 378,
	-1, 567,
	124, 140,
	-2, 145,
	-1, 568,
	124, 140,
	-2, 145,
	-1, 578,
	121, 317,
	124, 317,
	-2, 439,
	-1, 579,
	104, 444,
	105, 444,
	121, 318,
	124, 318,
	-2, 442,
	-1, 678,
	78, 343,
	-2, 380,
	-1, 707,
	124, 140,
	-2, 145,
	-1, 781,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 406,
	-1, 782,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 407,
	-1, 783,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 408,
	-1, 784,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 409,
	-1, 785,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 410,
	-1, 786,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 411,
	-1, 787,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 412,
	-1, 788,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 413,
	-1, 791,
	78, 342,
	-2, 379,
	-1, 840,
	37, 199,
	-2, 196,
	-1, 974,
	29, 187,
	-2, 4,
	-1, 986,
	124, 140,
	-2, 145,
	-1, 1005,
	121, 191,
	-2, 193,
}

const yyPrivate = 57344

const yyLast = 8391

var yyAct = [...]int{

	101, 1015, 844, 724, 968, 451, 199, 443, 726, 122,
	130, 418, 295, 338, 809, 114, 712, 736, 473, 591,
	419, 680, 589, 923, 603, 818, 460, 388, 97, 60,
	896, 263, 730, 543, 314, 318, 446, 141, 157, 2,
	38, 576, 329, 327, 257, 6, 4, 137, 139, 129,
	328, 144, 484, 5, 476, 227, 227, 136, 25, 178,
	650, 288, 984, 140, 42, 161, 962, 955, 981, 940,
	937, 43, 824, 191, 944, 449, 943, 120, 650, 982,
	266, 191, 652, 651, 492, 739, 120, 926, 706, 854,
	942, 498, 935, 120, 565, 271, 152, 125, 583, 120,
	583, 250, 654, 297, 515, 650, 936, 1011, 269, 652,
	651, 629, 615, 203, 660, 661, 662, 653, 655, 656,
	654, 240, 630, 616, 516, 310, 493, 737, 315, 319,
	304, 650, 322, 670, 671, 668, 669, 672, 674, 673,
	675, 660, 661, 662, 653, 655, 656, 654, 337, 650,
	178, 901, 356, 652, 651, 177, 179, 180, 178, 324,
	227, 829, 509, 309, 582, 902, 228, 113, 355, 229,
	653, 655, 656, 654, 38, 583, 510, 795, 581, 542,
	117, 331, 120, 334, 450, 232, 161, 662, 653, 655,
	656, 654, 266, 450, 227, 474, 125, 240, 120, 119,
	450, 650, 563, 559, 505, 652, 651, 271, 119, 751,
	120, 158, 357, 564, 560, 119, 200, 353, 506, 912,
	269, 119, 227, 384, 350, 50, 358, 125, 998, 120,
	423, 354, 103, 672, 674, 673, 675, 660, 661, 662,
	653, 655, 656, 654, 348, 421, 311, 270, 958, 132,
	153, 1028, 911, 909, 394, 862, 856, 793, 349, 747,
	312, 227, 125, 133, 120, 228, 391, 204, 229, 455,
	125, 300, 120, 636, 628, 592, 452, 299, 448, 627,
	226, 226, 301, 621, 232, 620, 594, 230, 230, 593,
	472, 608, 227, 750, 601, 592, 228, 607, 191, 229,
	435, 436, 293, 292, 119, 286, 280, 125, 240, 120,
	489, 1027, 264, 130, 448, 232, 439, 508, 253, 448,
	119, 512, 252, 503, 1010, 520, 436, 435, 435, 953,
	436, 228, 302, 159, 229, 490, 351, 176, 175, 267,
	496, 191, 268, 742, 999, 462, 464, 38, 501, 471,
	232, 119, 6, 4, 920, 483, 715, 520, 232, 270,
	5, 887, 504, 590, 959, 884, 540, 882, 485, 181,
	182, 174, 177, 179, 180, 178, 228, 545, 871, 229,
	176, 175, 831, 918, 438, 352, 119, 828, 547, 690,
	538, 631, 230, 539, 119, 232, 294, 622, 618, 428,
	426, 572, 306, 572, 1022, 986, 227, 934, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 389,
	390, 296, 138, 585, 264, 714, 230, 827, 821, 707,
	447, 119, 38, 571, 679, 577, 489, 296, 584, 457,
	448, 448, 568, 445, 811, 810, 294, 420, 567, 536,
	342, 287, 277, 343, 230, 612, 606, 274, 431, 273,
	249, 490, 496, 221, 613, 195, 447, 194, 193, 448,
	143, 447, 448, 121, 448, 578, 1019, 877, 1018, 491,
	386, 551, 134, 308, 497, 307, 442, 1007, 227, 996,
	990, 989, 928, 230, 917, 700, 701, 881, 813, 461,
	463, 807, 806, 634, 635, 800, 710, 315, 696, 638,
	639, 319, 546, 700, 701, 544, 520, 477, 541, 500,
	396, 346, 486, 678, 230, 520, 155, 125, 987, 910,
	602, 978, 520, 520, 520, 520, 520, 950, 933, 38,
	892, 642, 632, 890, 6, 4, 645, 732, 575, 305,
	196, 434, 5, 223, 224, 697, 875, 530, 804, 805,
	895, 227, 227, 227, 692, 693, 520, 647, 572, 572,
	125, 572, 731, 294, 734, 735, 38, 38, 702, 716,
	704, 258, 266, 812, 227, 227, 437, 677, 711, 530,
	454, 644, 447, 447, 90, 514, 741, 271, 503, 124,
	746, 699, 422, 577, 740, 491, 497, 718, 448, 744,
	269, 743, 733, 738, 124, 993, 609, 256, 684, 458,
	294, 447, 453, 425, 447, 227, 447, 227, 424, 579,
	303, 580, 125, 125, 611, 298, 123, 445, 230, 614,
	649, 683, 320, 756, 294, 259, 260, 125, 294, 468,
	819, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 791, 758,
	520, 759, 258, 760, 125, 865, 467, 517, 462, 592,
	721, 848, 849, 850, 847, 846, 845, 728, 729, 284,
	794, 792, 485, 125, 316, 131, 456, 520, 572, 281,
	285, 816, 433, 477, 262, 227, 573, 570, 842, 574,
	230, 511, 801, 507, 843, 207, 402, 841, 61, 53,
	127, 128, 974, 400, 830, 833, 321, 802, 572, 466,
	206, 991, 822, 258, 897, 470, 259, 260, 530, 270,
	832, 478, 479, 573, 826, 1016, 574, 530, 494, 606,
	447, 797, 723, 744, 530, 530, 530, 530, 530, 859,
	851, 857, 44, 445, 294, 131, 294, 823, 848, 849,
	850, 847, 846, 845, 225, 233, 389, 713, 713, 294,
	520, 238, 992, 230, 230, 230, 520, 520, 530, 162,
	898, 573, 562, 798, 574, 336, 468, 259, 260, 420,
	420, 814, 700, 701, 264, 1026, 230, 230, 1009, 983,
	227, 878, 227, 879, 44, 520, 960, 932, 572, 930,
	572, 815, 900, 886, 876, 549, 885, 1012, 893, 703,
	700, 701, 461, 904, 572, 874, 596, 1006, 598, 597,
	477, 963, 477, 938, 905, 125, 486, 230, 908, 230,
	891, 38, 762, 761, 720, 452, 648, 880, 227, 258,
	646, 520, 643, 913, 437, 599, 907, 903, 513, 480,
	397, 448, 393, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	939, 927, 530, 922, 323, 258, 202, 520, 38, 518,
	283, 201, 914, 198, 135, 681, 527, 550, 924, 398,
	254, 924, 469, 259, 260, 919, 251, 921, 520, 530,
	820, 520, 558, 572, 817, 572, 385, 230, 929, 889,
	931, 518, 362, 361, 360, 258, 520, 38, 359, 38,
	437, 258, 852, 520, 948, 191, 282, 38, 572, 38,
	1, 894, 988, 941, 1017, 965, 946, 973, 284, 259,
	260, 341, 749, 951, 38, 520, 755, 572, 864, 38,
	1001, 956, 572, 444, 38, 1005, 605, 586, 587, 588,
	973, 840, 1002, 967, 176, 175, 966, 975, 976, 842,
	906, 482, 572, 38, 38, 843, 1021, 401, 841, 259,
	260, 899, 530, 572, 1003, 259, 260, 839, 530, 530,
	836, 569, 258, 447, 725, 38, 997, 255, 174, 177,
	179, 180, 178, 1014, 1020, 713, 445, 420, 1013, 745,
	722, 392, 230, 387, 230, 1024, 163, 530, 339, 694,
	537, 38, 961, 957, 289, 964, 752, 38, 191, 848,
	849, 850, 847, 846, 845, 459, 160, 1023, 156, 317,
	979, 313, 126, 604, 1004, 972, 1029, 985, 971, 970,
	969, 834, 838, 477, 837, 835, 259, 260, 399, 39,
	230, 727, 14, 530, 13, 825, 172, 176, 175, 1000,
	518, 717, 947, 333, 803, 691, 10, 248, 74, 518,
	75, 115, 265, 63, 88, 595, 518, 518, 518, 518,
	518, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 89, 519, 100, 530,
	73, 11, 325, 99, 98, 78, 118, 525, 3, 347,
	518, 40, 168, 170, 169, 191, 0, 0, 0, 0,
	530, 0, 0, 530, 208, 209, 210, 211, 213, 214,
	215, 216, 217, 218, 219, 220, 212, 0, 530, 0,
	0, 0, 0, 0, 0, 530, 811, 810, 0, 0,
	0, 855, 192, 172, 176, 175, 0, 0, 0, 860,
	861, 0, 682, 0, 0, 0, 0, 530, 0, 685,
	686, 687, 688, 689, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 663, 664, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 0, 0, 518, 617, 0, 0, 0, 0,
	650, 0, 676, 658, 652, 651, 0, 208, 209, 210,
	211, 213, 214, 215, 216, 217, 218, 219, 220, 212,
	0, 518, 0, 916, 667, 666, 657, 659, 670, 671,
	668, 669, 672, 674, 673, 675, 660, 661, 662, 653,
	655, 656, 654, 0, 0, 0, 0, 0, 561, 0,
	0, 0, 665, 663, 664, 0, 0, 0, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 790, 0, 0, 682, 0, 116,
	650, 0, 676, 658, 652, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 518, 0, 0, 0, 0, 0,
	518, 518, 0, 0, 667, 666, 657, 659, 670, 671,
	668, 669, 672, 674, 673, 675, 660, 661, 662, 653,
	655, 656, 654, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 231, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 30, 208, 209, 210, 211, 213,
	214, 215, 216, 217, 218, 219, 220, 212, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 146, 150, 154,
	0, 0, 0, 164, 0, 518, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 205, 869, 0, 0,
	0, 0, 0, 872, 873, 0, 0, 222, 0, 0,
	0, 234, 235, 236, 237, 0, 0, 239, 0, 241,
	242, 243, 244, 245, 246, 247, 0, 0, 0, 0,
	0, 518, 261, 0, 0, 0, 0, 275, 276, 0,
	278, 279, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 290, 518, 0, 0, 518, 208, 209, 210, 211,
	213, 214, 215, 216, 217, 218, 219, 220, 212, 0,
	518, 0, 0, 0, 0, 0, 0, 518, 915, 0,
	0, 272, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 340, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 0, 0, 154,
	231, 0, 0, 0, 0, 0, 0, 650, 0, 0,
	658, 652, 651, 404, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 0, 0, 0, 0,
	0, 231, 666, 657, 659, 670, 671, 668, 669, 672,
	674, 673, 675, 660, 661, 662, 653, 655, 656, 654,
	0, 0, 0, 0, 239, 0, 430, 432, 432, 0,
	0, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 154,
	0, 0, 465, 0, 0, 432, 0, 0, 0, 0,
	650, 432, 290, 658, 652, 651, 0, 432, 432, 0,
	0, 154, 0, 0, 432, 495, 665, 663, 664, 0,
	499, 0, 0, 0, 667, 666, 657, 659, 670, 671,
	668, 669, 672, 674, 673, 675, 660, 661, 662, 653,
	655, 656, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 870, 0, 0, 650, 231, 676, 658, 652, 651,
	0, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 0, 0, 552, 553, 554, 555, 556, 667, 666,
	657, 659, 670, 671, 668, 669, 672, 674, 673, 675,
	660, 661, 662, 653, 655, 656, 654, 0, 0, 0,
	557, 0, 0, 0, 665, 663, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 650, 0, 0, 658, 652, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 650, 868, 676, 658, 652, 651, 657, 659,
	670, 671, 668, 669, 672, 674, 673, 675, 660, 661,
	662, 653, 655, 656, 654, 610, 667, 666, 657, 659,
	670, 671, 668, 669, 672, 674, 673, 675, 660, 661,
	662, 653, 655, 656, 654, 0, 0, 0, 0, 623,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 0, 0,
	231, 231, 231, 0, 0, 0, 0, 0, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 231, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 0, 0, 340, 698, 192, 172,
	176, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 231, 0, 231, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 0,
	0, 0, 0, 0, 0, 432, 0, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 432, 753, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 858, 192, 172, 176,
	175, 0, 0, 0, 665, 663, 664, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 0, 0,
	0, 799, 650, 0, 676, 658, 652, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 0,
	0, 658, 652, 651, 0, 808, 667, 666, 657, 659,
	670, 671, 668, 669, 672, 674, 673, 675, 660, 661,
	662, 653, 655, 656, 654, 659, 670, 671, 668, 669,
	672, 674, 673, 675, 660, 661, 662, 653, 655, 656,
	654, 0, 0, 0, 853, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 432, 432, 0, 0, 231,
	0, 231, 866, 0, 0, 0, 0, 0, 0, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 15, 24, 35, 0, 231, 36, 9,
	0, 26, 340, 31, 80, 81, 7, 45, 47, 49,
	0, 0, 883, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 8, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 641, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 15, 24, 35, 0, 0, 36,
	9, 0, 26, 0, 31, 80, 81, 7, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 8, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 502, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 15, 24, 35, 0, 0,
	36, 9, 0, 26, 0, 31, 80, 81, 7, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 8, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 0, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 330,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 1030, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	330, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 1025,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 330, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	1008, 34, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 330, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 995, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 994, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 330, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 330, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 980, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	977, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 330, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 0, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 330, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 954, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 952, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 888, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 330, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 0, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	695, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 330,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 0, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	330, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 566,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 330, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	326, 34, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 330, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 0, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 949, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 925, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 0, 34, 719, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 0, 34, 335, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 0, 34, 332, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 796, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 665, 663, 664, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 757, 0, 0, 91, 76, 16, 0, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 0, 0, 650, 0, 676, 658, 652, 651,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 666,
	657, 659, 670, 671, 668, 669, 672, 674, 673, 675,
	660, 661, 662, 653, 655, 656, 654, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 0, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 754, 0, 0, 0, 0, 0, 0, 192, 172,
	176, 175, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 708,
	0, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	0, 0, 168, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 705, 0, 0, 0, 0,
	0, 0, 192, 172, 176, 175, 0, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 640, 0, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 0, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 637, 0, 0, 0, 0, 0, 0, 192, 172,
	176, 175, 168, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 619,
	0, 0, 192, 172, 176, 175, 0, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 600, 0, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 168, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 172, 176, 175, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 427, 0, 0, 192, 172, 176, 175, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 0, 0, 0, 192,
	172, 176, 175, 0, 0, 0, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	395, 0, 0, 0, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 168, 170, 169, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 345, 0, 0,
	0, 0, 0, 192, 172, 176, 175, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 344, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 165, 0, 0, 0, 0, 0, 192, 172, 176,
	175, 665, 663, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 0, 650,
	0, 676, 658, 652, 651, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 666, 657, 659, 670, 671, 668,
	669, 672, 674, 673, 675, 660, 661, 662, 653, 655,
	656, 654, 0, 0, 0, 192, 172, 176, 175, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 0, 0, 192, 172,
	176, 175, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 650,
	0, 676, 658, 652, 651, 169, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 666, 657, 659, 670, 671, 668,
	669, 672, 674, 673, 675, 660, 661, 662, 653, 655,
	656, 654, 0, 192, 172, 176, 175, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 192, 172, 176, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 650, 0, 676, 658, 652,
	651, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	666, 657, 659, 670, 671, 668, 669, 672, 674, 673,
	675, 660, 661, 662, 653, 655, 656, 654, 0, 172,
	176, 175, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 0,
	172, 176, 175, 0, 0, 0, 0, 82, 83, 71,
	0, 104, 105, 125, 87, 120, 0, 0, 0, 0,
	0, 94, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 488, 84, 85, 86,
	191, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 148, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 0, 0, 0, 0, 62, 481, 96, 176,
	175, 487, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 0, 104, 105, 125, 87, 120, 0, 0, 0,
	0, 0, 94, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 0, 0,
	0, 44, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	191, 0, 0, 142, 112, 108, 102, 488, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 147, 148, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 172, 176,
	175, 91, 76, 0, 0, 0, 0, 62, 0, 96,
	0, 0, 487, 57, 56, 58, 59, 72, 119, 0,
	0, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 82, 83,
	71, 0, 104, 105, 125, 87, 120, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 147, 148, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 0, 0, 0, 0, 62, 0, 96,
	0, 0, 867, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 0, 104, 105, 125, 87, 120, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 147, 148, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 0, 0, 0, 0, 62, 0,
	96, 0, 0, 626, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 0, 104, 105, 125, 87, 120, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 191, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 147, 148, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	172, 176, 175, 91, 76, 0, 0, 0, 0, 62,
	0, 96, 0, 0, 624, 57, 56, 58, 59, 72,
	119, 0, 0, 0, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	82, 83, 71, 0, 104, 105, 125, 87, 120, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 147, 148, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 0, 0, 0, 0, 62,
	0, 96, 0, 0, 291, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 0, 104, 105, 125, 87, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 0,
	62, 429, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 147, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 405, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 147, 148, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 0, 0,
	151, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 0, 104, 105,
	125, 87, 120, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 147, 148, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 0,
	0, 149, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 0, 104,
	105, 125, 87, 120, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 147, 148,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	0, 0, 145, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 0,
	104, 105, 125, 87, 120, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 147,
	148, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 650, 91,
	76, 658, 652, 651, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 671, 668, 669,
	672, 674, 673, 675, 660, 661, 662, 653, 655, 656,
	654, 82, 83, 71, 0, 104, 105, 125, 441, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 147, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 104, 105, 125, 77, 41, 148, 0, 0, 0,
	0, 528, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 0, 526, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 521, 112, 108, 522, 104, 105, 125, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 789, 535, 0, 524, 0,
	0, 0, 534, 533, 531, 532, 0, 0, 523, 0,
	526, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 521, 112, 108,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 0, 524, 0, 0, 0, 534, 533, 531,
	532,
}
var yyPact = [...]int{

	-1000, -1000, 2457, -1000, -1000, -1000, -1000, 350, 517, 693,
	128, -1000, 360, -1000, -1000, 914, -1000, 299, 299, 5077,
	347, 299, 7681, 7550, 7419, 405, 199, 787, 7812, -1000,
	5820, 345, 344, 342, -1000, 431, 7812, 913, 88, 911,
	906, 7812, -1000, -1000, -1000, -1000, 688, -1000, 673, -1000,
	1400, 340, 7812, 449, 252, 252, 7812, 7812, 7812, 7812,
	-1000, -1000, 8098, -1000, 7812, 7812, 7812, 7812, 7812, 7812,
	7812, 337, -1000, -1000, 197, 193, 1020, 7812, 657, 260,
	336, 334, 7812, 7812, 329, 7812, 7812, -1000, 181, -1000,
	-1000, 949, 903, -1000, 180, 328, 7026, -1000, 178, 177,
	-1000, 314, 845, 557, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 152, 198, -1000, 552, 298, -1000, 430,
	-1000, 278, 364, -1000, 845, -1000, 125, 622, 560, -1000,
	707, 845, -1000, 904, -1000, 23, 4160, 4946, 8098, 4815,
	784, 88, 532, 7812, 331, -1000, 5773, -1000, 735, -1000,
	5726, -1000, 400, 1038, 5908, -1000, 123, -1000, -1000, 217,
	96, 88, 16, 91, 5908, -1000, -1000, -1000, -1000, -1000,
	7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812,
	7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812,
	7812, 260, 358, 252, 7812, 872, -1000, 5679, 399, 870,
	-1000, 678, 671, -1000, 1400, 5632, -1000, -1000, 7288, 7812,
	7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812, 7812,
	7812, 186, -1000, -1000, -1000, -1000, -1000, 314, 520, 845,
	550, 545, -1000, -1000, -108, -108, -17, -108, 276, 5588,
	275, -108, -108, -108, -108, -108, -108, -108, -1000, 7157,
	-1000, 7812, 7812, 7812, 433, 670, 943, -1000, 259, 7967,
	252, 6077, 65, 298, 544, -1000, 491, 508, 845, 649,
	152, 198, 541, 7812, 7812, 5908, 5908, 7812, 5908, 5908,
	7812, 569, 670, 731, -1000, 857, 7812, 7026, 164, 60,
	5544, 252, 7812, 7812, 869, -1000, 6333, 314, 74, 7812,
	7812, 152, 430, 81, -1000, 7812, 398, -1000, -1000, 2326,
	314, -1000, 623, 83, -1000, 694, 845, 41, -1000, 692,
	845, 868, 566, -32, 8258, -1000, -1000, -1000, -1000, -1000,
	326, -1000, -1000, -1000, -1000, -1000, 299, -1000, 397, 44,
	5908, -1000, 394, 391, -1000, -1000, -1000, -1000, -1000, 199,
	-1000, 7812, -1000, -1000, 823, -1000, 8258, -1000, 7812, 7812,
	7812, 7812, 7812, 6036, 6862, 6330, 978, -9, -9, -9,
	-17, -108, -17, -17, 875, 875, 251, 251, 251, 251,
	208, 208, 208, 208, -1000, 7812, -1000, 79, -1000, -1000,
	1299, 773, 78, -42, 4029, -1000, -1000, 325, 319, 661,
	674, 429, 674, 7812, 6077, 87, 6077, 6077, 6077, 6077,
	6077, 6077, 6077, 6077, 6077, 6077, 6077, 6077, 40, -1000,
	-1000, 315, 845, 314, 65, 65, 238, -1000, -1000, -1000,
	-108, 163, 5908, 160, -1000, -1000, -1000, -1000, 836, 865,
	5463, 169, 410, 298, 172, -1000, -1000, 152, 198, -1000,
	7812, -1000, -1000, 170, 845, 491, 65, 152, 170, -12,
	-1000, 1400, -1000, 1151, 274, 5415, 159, -1000, -1000, -1000,
	157, 273, -1000, -1000, 6876, 6745, -1000, -1000, 153, 148,
	-1000, -1000, -13, 267, -1000, -1000, 1400, 252, 7812, -1000,
	298, 298, -1000, -1000, 147, 5371, 298, 298, -1000, 5323,
	-1000, 2195, -1000, -1000, -1000, -1000, 622, 862, 562, -1000,
	560, 860, 538, -1000, 856, 8258, -1000, 5864, -1000, -1000,
	491, 505, 845, 311, 8258, -1000, -1000, -1000, -1000, 624,
	540, 8258, 8258, 8258, 8258, 8258, 265, 471, 4291, 3898,
	387, 7812, 7812, 481, -1000, 808, -1000, -1000, 5275, -48,
	306, -1000, 5908, 6202, 6450, 5951, 6077, 5227, 7812, 385,
	252, 297, 297, 4684, 854, 8258, 721, 637, 637, 428,
	674, -1000, 491, 492, 845, -1000, -8, -1000, -1000, 1400,
	-1000, 260, -51, 186, 186, 314, -1000, -1000, 218, 632,
	7812, -1000, 65, -1000, -1000, 133, -1000, -1000, -1000, -1000,
	-1000, 7812, -1000, -1000, 168, 84, -1000, 7812, 7812, 152,
	5181, -1000, 491, -1000, -1000, -1000, 7812, -1000, -1000, -1000,
	-1000, -1000, -1000, 5133, 252, 5908, 252, -1000, -1000, -1000,
	6464, -1000, -1000, 5908, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 853, -1000, -1000, 852, -1000, -1000,
	8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258,
	8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258,
	8258, 8258, 8258, 8258, 8258, 8258, 8183, 845, 491, 8258,
	131, 42, 5089, 574, 751, -65, -65, 6, 6, 1987,
	384, -1000, 299, 5077, 465, 381, -1000, 380, 5908, -1000,
	7812, 323, 463, 377, 780, -1000, 8258, 637, -1000, 6161,
	-1000, -1000, 592, -1000, 252, 305, 592, -1000, -1000, -1000,
	-64, -1000, 712, 304, 263, 26, -1000, 88, -1000, -1000,
	-1000, 258, -1000, -8, 845, 491, 971, 674, -1000, 7812,
	-1000, -35, 7812, 632, -1000, 130, 298, -1000, 1940, 632,
	7812, 7812, 129, 1851, -1000, 628, -1000, 6614, -1000, -1000,
	-1000, -1000, -1000, 1737, 6, 6, -65, -65, -65, -65,
	2003, -20, 7803, 24, 24, 6, 5994, 6120, 1155, 1717,
	1512, 76, 76, 76, 76, -47, -47, -47, -47, 8258,
	1649, 491, 254, -1000, -1000, 8258, 8258, -1000, -1000, -1000,
	-1000, 5077, -1000, 461, 299, 355, -1000, 7812, 1075, -1000,
	-1000, -1000, -1000, -1000, 376, -1000, 243, 7812, 241, 297,
	-1000, 186, 237, 3767, 8258, -1000, 424, 674, 421, 637,
	477, 700, 680, 491, -1000, -1000, 820, 30, -1000, 735,
	593, -1000, 844, 674, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 298, 6077, -1000, 127, -1000, -1000, 409, -1000,
	126, 93, -1000, -1000, -1000, 65, 5908, 252, -1000, 1595,
	8258, -1000, 1245, 5864, -1000, 373, 261, -1000, 230, -1000,
	4291, -1000, 700, 6161, 4553, -1000, -37, 4553, 371, -1000,
	-1000, 817, -1000, -1000, 815, -1000, 419, 284, -1000, -29,
	-66, -1000, 843, 88, -1000, -67, -45, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1595, 8258, -1000, -1000, 4291,
	4422, 4291, 418, -1000, -1000, -1000, -1000, -1000, -1000, 3636,
	205, 3505, -69, -1000, 236, -1000, 814, 8258, -70, 841,
	8258, -1000, 674, -1000, 722, 5864, 4291, -1000, -1000, -1000,
	-1000, 3374, -1000, 412, -1000, 8258, 3243, -56, -1000, 807,
	-74, -1000, 8258, 282, -1000, -1000, 408, 722, -1000, 370,
	369, 696, 763, 537, -1000, 3112, 2981, 368, -1000, -1000,
	-1000, -1000, 216, -1000, 8258, -1000, 637, -1000, -1000, -1000,
	-1000, 674, 593, 837, 366, -1000, -1000, 2850, -1000, 806,
	-1000, 200, -28, -1000, 827, -1000, -1000, -1000, 714, -1000,
	357, 674, -1000, -1000, 714, -1000, 281, -1000, -1000, -1000,
	-1000, -1000, 674, 2719, 803, -1000, 187, 132, -1000, 2588,
	-1000,
}
var yyPgo = [...]int{

	0, 37, 1161, 1158, 49, 34, 35, 594, 1157, 1156,
	167, 232, 1369, 458, 1434, 71, 64, 54, 729, 225,
	1155, 28, 1154, 1153, 1152, 43, 1151, 38, 124, 1150,
	1148, 1147, 1146, 44, 1125, 1124, 26, 1123, 20, 36,
	180, 1122, 728, 31, 1121, 32, 1120, 1118, 29, 1117,
	58, 50, 42, 1116, 1115, 1114, 1113, 1112, 27, 23,
	1111, 1105, 1, 1104, 1102, 1101, 8, 1099, 1098, 1095,
	1094, 1092, 52, 4, 1090, 1089, 1088, 1085, 1084, 2,
	1083, 39, 0, 1082, 1081, 1079, 57, 1078, 1076, 617,
	1075, 1064, 61, 11, 1063, 30, 1060, 1059, 1058, 13,
	33, 1056, 1053, 1051, 1050, 1048, 1043, 3, 1034, 17,
	1031, 1030, 1027, 1021, 1017, 41, 1011, 1010, 1006, 1003,
	1002, 1001, 999, 998, 22, 997, 19, 24, 996, 7,
	993, 988, 986, 982, 15, 16, 25, 5, 12, 981,
	974, 973, 6, 971, 970, 14, 962, 958, 954, 953,
	952, 946, 944, 942, 936, 930, 929, 927, 687, 21,
	926, 925, 18,
}
var yyR1 = [...]int{

	0, 144, 81, 81, 82, 82, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 83, 83, 4,
	4, 4, 4, 84, 84, 5, 5, 5, 5, 85,
	85, 6, 6, 6, 6, 53, 53, 86, 86, 24,
	24, 24, 24, 25, 25, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 104, 104, 61, 61, 105, 105, 106,
	106, 62, 102, 102, 58, 51, 52, 142, 142, 143,
	143, 63, 64, 64, 67, 67, 67, 67, 68, 68,
	2, 114, 114, 110, 110, 115, 115, 136, 136, 135,
	135, 135, 57, 57, 59, 59, 60, 60, 103, 103,
	139, 139, 139, 139, 100, 100, 100, 145, 145, 56,
	56, 96, 96, 97, 97, 54, 54, 55, 55, 107,
	107, 108, 108, 66, 66, 65, 65, 65, 65, 138,
	138, 138, 116, 116, 72, 72, 72, 72, 87, 87,
	27, 27, 27, 88, 88, 88, 88, 109, 109, 69,
	69, 69, 69, 71, 117, 117, 141, 141, 118, 118,
	119, 119, 73, 73, 74, 120, 120, 77, 77, 76,
	75, 75, 78, 78, 140, 140, 111, 111, 112, 112,
	121, 121, 79, 79, 79, 79, 79, 79, 113, 113,
	113, 113, 70, 70, 101, 101, 99, 99, 98, 98,
	124, 124, 122, 122, 123, 123, 123, 125, 125, 42,
	15, 15, 15, 146, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 147, 15, 148, 15, 149, 15, 150, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 151,
	152, 15, 153, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 154, 15, 15, 15, 15, 15, 15,
	15, 156, 15, 157, 15, 50, 50, 50, 50, 47,
	47, 47, 47, 46, 46, 1, 95, 95, 94, 94,
	94, 94, 23, 23, 23, 23, 23, 23, 23, 23,
	11, 11, 11, 11, 45, 45, 45, 43, 43, 41,
	41, 132, 132, 131, 49, 49, 49, 155, 155, 155,
	137, 137, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 8, 28, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 35,
	35, 35, 35, 29, 29, 29, 29, 29, 29, 29,
	159, 159, 162, 162, 161, 161, 161, 161, 14, 14,
	48, 48, 16, 17, 18, 19, 19, 133, 133, 126,
	128, 128, 80, 127, 127, 127, 40, 40, 44, 44,
	12, 22, 22, 20, 20, 20, 21, 21, 21, 10,
	10, 10, 9, 9, 13, 13, 129, 129, 130, 130,
	130, 39, 39, 134, 134, 93, 93, 38, 38, 38,
	92, 92, 91, 91, 91, 91, 91, 91, 91, 91,
	89, 89, 89, 89, 33, 33, 33, 33, 33, 33,
	34, 34, 34, 37, 37, 37, 37, 37, 37, 37,
	37, 90, 90, 36, 36, 30, 30, 31, 32,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 4,
	3, 5, 4, 3, 4, 4, 2, 3, 1, 1,
	3, 2, 4, 3, 1, 1, 3, 2, 4, 3,
	1, 1, 3, 2, 4, 5, 4, 2, 0, 1,
	1, 1, 4, 1, 2, 3, 5, 8, 3, 5,
	9, 3, 2, 3, 2, 3, 2, 3, 3, 2,
	3, 3, 3, 1, 2, 5, 8, 8, 5, 1,
	6, 3, 3, 0, 9, 0, 4, 1, 0, 1,
	2, 8, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 9, 7, 6, 1, 2, 1, 2, 0, 2,
	1, 0, 2, 0, 2, 1, 3, 0, 2, 1,
	2, 4, 1, 4, 1, 4, 1, 4, 3, 5,
	3, 4, 4, 5, 0, 5, 4, 1, 1, 1,
	4, 0, 4, 0, 5, 0, 2, 0, 3, 1,
	0, 1, 3, 4, 6, 0, 1, 1, 1, 2,
	3, 3, 1, 3, 1, 1, 2, 2, 3, 1,
	1, 2, 4, 3, 5, 1, 3, 2, 0, 3,
	2, 1, 8, 3, 1, 3, 1, 3, 0, 1,
	1, 2, 2, 2, 3, 1, 3, 1, 1, 3,
	4, 3, 0, 1, 1, 3, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 5, 4, 3, 1, 0, 1, 3, 1,
	2, 1, 4, 3, 2, 1, 1, 0, 1, 3,
	6, 3, 4, 0, 7, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 0, 4, 0, 4, 0, 4, 0, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 4, 0,
	0, 7, 0, 5, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 0, 3, 1, 1, 1, 3, 2,
	1, 0, 10, 0, 11, 2, 2, 4, 4, 4,
	4, 4, 4, 4, 3, 1, 0, 4, 3, 4,
	1, 2, 2, 4, 3, 4, 4, 4, 4, 2,
	1, 1, 3, 2, 1, 3, 2, 1, 1, 4,
	1, 2, 0, 2, 0, 2, 1, 0, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 1, 3,
	2, 4, 3, 1, 1, 1, 4, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 2, 2, 3, 1,
	1, 3, 2, 1, 1, 1, 1, 3, 3, 1,
	0, 2, 0, 1, 5, 3, 3, 1, 1, 1,
	3, 3, 1, 1, 1, 5, 1, 2, 0, 3,
	4, 4, 1, 1, 1, 0, 1, 2, 3, 3,
	1, 4, 4, 1, 1, 1, 1, 2, 1, 4,
	4, 1, 1, 4, 0, 1, 1, 1, 4, 4,
	1, 1, 3, 1, 2, 3, 1, 1, 4, 0,
	0, 2, 5, 3, 3, 1, 6, 4, 4, 2,
	2, 2, 1, 2, 1, 4, 3, 3, 6, 3,
	1, 1, 1, 4, 4, 4, 2, 2, 4, 2,
	2, 1, 3, 1, 1, 3, 3, 3, 3,
}
var yyChk = [...]int{

	-1000, -144, -81, -3, -25, -51, -52, 51, 79, 44,
	-53, -26, 10, -63, -64, 38, 119, 7, 21, 20,
	23, 30, 34, 35, 39, -50, 46, 98, 19, 14,
	-14, 48, 25, 27, 121, 40, 43, 36, -1, -67,
	-2, 97, -16, -15, 37, 52, 99, 53, 100, 54,
	-19, 59, 92, -18, 104, 105, 130, 129, 131, 132,
	-48, -42, 123, -37, 107, 108, 109, 110, 111, 112,
	113, 6, 133, -29, -47, -46, 118, 96, -20, 91,
	49, 50, 4, 5, 84, 85, 86, 11, -35, -32,
	-7, 117, 74, 62, 18, 60, 125, -21, -22, -23,
	-30, -82, 82, -11, 8, 9, 66, 67, 81, 63,
	64, 65, 80, -10, -134, -44, -12, -40, -9, 134,
	12, 123, -82, 119, 82, 10, -83, 37, 38, -4,
	-82, 82, 121, 135, 122, 10, -86, -48, 123, -48,
	-25, -1, 79, 123, -48, 121, -14, 97, 98, 121,
	-14, 121, -15, -19, -14, 121, -87, -27, 12, 134,
	-88, -1, 12, -101, -14, 121, 149, 150, 87, 89,
	88, 151, 128, 152, 163, 130, 129, 164, 167, 165,
	166, 161, 162, 155, 156, 153, 154, 157, 158, 159,
	160, 90, 127, 123, 123, 123, 119, -14, 10, -142,
	128, 10, 10, -15, -19, -14, 52, 52, 136, 137,
	138, 139, 148, 140, 141, 142, 143, 144, 145, 146,
	147, 123, -14, 104, 105, -18, -19, -82, 79, 82,
	-11, -12, 98, -18, -14, -14, -14, -14, -42, -14,
	-50, -14, -14, -14, -14, -14, -14, -14, -49, 123,
	-48, -154, 125, 125, -155, 17, -89, -33, 12, 76,
	77, -14, 57, -43, -11, -41, -82, 79, 82, -21,
	-10, -134, -12, 123, 123, -14, -14, 123, -14, -14,
	125, -89, 17, 17, 75, -89, 125, 123, -92, -91,
	-14, 128, 125, 125, 82, -138, 123, -82, 78, 125,
	119, -10, 134, 78, -138, 119, 124, 121, 119, -81,
	-82, 121, 135, -84, -5, -82, 82, -85, -6, -82,
	82, 29, -82, 10, 136, -24, 120, -25, -51, -52,
	51, -25, 122, -56, -25, 122, 21, -142, -99, -98,
	-14, -139, 119, 122, 121, 121, 121, 121, 121, 135,
	-16, 119, -19, 121, 135, -142, 136, 121, 135, -147,
	-148, -149, -150, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -43, -151, 122, -102, -58, -19,
	-19, -15, -103, 10, -86, 121, 121, 10, -156, -68,
	55, -114, 55, 58, -14, 128, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -93, -38,
	-19, 59, 82, -82, 78, 78, 124, 124, 124, 124,
	-14, -13, -14, -13, 118, -33, -33, 17, 125, 57,
	-14, 11, -19, -129, -130, -40, -39, -10, -134, 10,
	119, -137, -138, 78, 82, -82, 57, -10, 78, -90,
	-36, -19, -15, -19, -15, -14, -13, 117, 75, 75,
	-13, -92, 126, -162, 135, 58, -17, -19, -13, -13,
	10, 124, -116, -50, -72, -15, -19, 128, 83, -138,
	-39, -40, 10, 52, -13, -14, -39, -40, 10, -14,
	121, -81, 120, -138, -4, 121, 135, 29, -82, 121,
	135, 29, -82, 10, 29, 136, -28, -158, -7, -31,
	-82, 79, 82, 60, 125, -8, 62, -160, 18, 74,
	-11, 131, 132, 130, 129, 123, 123, -96, -86, -86,
	-48, 121, 135, -100, 121, -100, 121, -27, -14, 12,
	-157, -28, -14, -14, -14, -14, -14, -14, -153, 124,
	135, 29, 29, 124, 135, 136, 120, 123, 123, -110,
	56, -45, -82, 79, 82, 119, -115, -45, -15, -19,
	-19, 91, 124, 135, 123, -82, -125, -123, -122, -124,
	125, -126, 57, 126, 126, -34, 10, 13, 12, 10,
	120, 125, 120, -127, -80, -128, -138, 125, 119, -10,
	-14, -40, -82, -129, -40, 124, 135, 124, 124, 124,
	126, 126, 124, -14, 128, -14, 128, 126, 126, 124,
	135, 124, -17, -14, -138, -138, 126, 120, -138, -138,
	120, 120, -5, 10, 29, -6, 10, 29, 10, -28,
	125, 130, 129, 164, 167, 165, 166, 151, 128, 152,
	161, 162, 163, 88, 89, 87, 150, 149, 155, 156,
	153, 154, 157, 159, 158, 160, 127, 82, -82, 123,
	-159, -161, -158, 17, 78, -158, -158, -158, -158, -158,
	124, -54, 93, 94, -97, 22, 121, -99, -14, 120,
	32, 33, -100, 31, -100, 120, 136, 123, 122, -14,
	121, -58, -135, -19, 128, 59, -135, -60, -25, 122,
	10, -28, -104, 41, -107, -108, -66, -65, 60, 61,
	-45, -107, 119, -115, 82, -82, -109, 135, -43, 136,
	-38, -93, 125, -124, -126, -13, -129, 126, -14, -133,
	125, 125, -13, -14, 120, -132, -36, 58, -17, -17,
	-72, 10, 10, -158, -158, -158, -158, -158, -158, -158,
	-158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
	-158, -158, -158, -158, -158, -158, -158, -158, -158, 122,
	-158, -82, -159, 126, -162, 135, 58, 10, 52, 124,
	121, -48, -25, -55, 93, 94, 121, 121, -14, -145,
	122, 121, 120, 121, 31, -28, -107, -152, -136, 58,
	-19, 123, -136, -86, 136, -61, 42, 123, 124, 135,
	-142, 124, -109, -82, 120, -69, -111, -70, -71, -112,
	-121, 47, 38, 44, -79, 103, 102, 101, 98, 99,
	100, -45, -146, -14, 124, -13, 126, -127, 126, -126,
	-13, -13, 126, 120, -131, 57, -14, 128, 126, -158,
	122, 124, -158, -158, -25, 95, -48, 122, -99, -145,
	-86, 121, 124, -14, 124, -135, -93, 124, 28, -28,
	119, -45, 119, -66, -143, 83, -95, 44, 120, -113,
	12, 121, 135, -1, -79, 10, -117, -45, -137, 126,
	120, 126, 126, -129, -17, -158, 58, 121, 122, -86,
	124, -86, -95, -59, -25, 122, 124, -59, 121, -86,
	12, -86, 12, 119, 123, 121, 135, 136, 10, -142,
	136, -141, 135, 121, 119, -158, -86, -57, -25, 122,
	119, -86, 120, 124, 120, 136, -86, -94, 12, 128,
	12, -28, 136, 10, -28, -45, -118, -119, -73, -74,
	-75, -76, -77, -45, 10, -86, -86, 26, 119, -28,
	120, 124, 135, 12, 136, -28, 123, 120, -73, 121,
	121, 45, 29, 78, 24, 120, 121, -86, 12, 128,
	-28, -107, -120, -45, -78, -79, 10, 121, 120, 12,
	124, 135, 10, -105, -106, -62, 41, -140, 121, 119,
	-45, -62, 123, -86, -45, 120, 12, 124, 119, -86,
	120,
}
var yyDef = [...]int{

	3, -2, 1, 2, 6, 7, 8, 0, 0, 0,
	0, 43, 4, 85, 86, 0, 38, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 63,
	0, 0, 0, 0, 69, 0, 0, 0, 87, 0,
	0, 310, 438, 439, 325, 94, 0, 96, 0, 100,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 354, 303, 305, 306, 307, 357, 0, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 424, 425,
	426, 0, 0, 429, 364, 0, 490, 463, 464, 465,
	419, -2, 0, 0, 362, 363, 365, 366, 367, 368,
	369, 370, 371, -2, 0, 468, 0, 0, 471, 483,
	472, 0, 0, 3, 0, 4, 0, 0, 0, 18,
	19, 0, 16, 0, 44, 0, 0, 0, 0, 0,
	0, 87, 0, 216, 0, 52, 0, 310, 340, 54,
	0, 56, 439, -2, 0, 59, 0, 159, 160, 0,
	0, 87, 165, 0, 215, 64, 252, 254, 256, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 38, 0, 0, 311,
	88, 98, 101, -2, -2, 0, 95, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 235, 248, 250, 249, 444, 341, 0, 0,
	0, 0, 340, 251, 273, 274, 275, 276, 287, 0,
	0, 295, 296, 297, 298, 299, 300, 301, 302, 0,
	356, 0, 474, 474, 0, 358, 359, 502, 504, 0,
	0, 309, 0, 360, 347, 348, 341, 0, 0, 350,
	-2, 0, 0, 0, 0, 516, 517, 0, 519, 520,
	474, 0, 0, 0, 373, 0, 474, 490, 0, 432,
	495, 0, 474, 474, 0, 332, 0, -2, 0, 474,
	0, -2, 484, 0, 339, 0, 0, 10, 3, 0,
	-2, 13, 0, 0, 24, 25, 0, 0, 30, 31,
	0, 0, 21, 0, 0, 37, 45, 39, 40, 41,
	0, 131, 38, 48, 129, 38, 0, 311, 0, 217,
	219, 51, 124, 124, 53, 55, 57, 58, 60, 0,
	161, 0, 442, 61, 0, 313, 0, 62, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, -2, -2, -2, -2,
	-2, -2, -2, -2, 285, 0, 292, 0, 82, 84,
	-2, 439, 0, 0, 0, 71, 72, 0, 0, 103,
	0, 0, 0, 0, 231, 0, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 0, 486,
	487, 0, 0, 343, 0, 0, 227, 440, 441, 355,
	304, 0, 475, 0, 308, 503, 500, 501, 0, 0,
	0, 423, 0, 455, 476, 477, 480, 456, 0, 481,
	0, 229, 361, 0, 0, 343, 0, 467, 0, 0,
	521, -2, -2, -2, 439, 0, 0, 427, 372, 428,
	0, 0, 324, 491, 433, 0, 499, 443, 0, 0,
	5, 149, 0, 0, 152, -2, -2, 0, 0, 334,
	0, 458, -2, 528, 0, 0, 0, 459, -2, 0,
	9, 0, 12, 333, 17, 14, 0, 0, 27, 15,
	0, 0, 33, 20, 0, 0, 36, 375, 376, 377,
	-2, 0, 0, 0, 430, 383, 384, 385, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 133, 0,
	0, 216, 0, 0, 124, 0, 124, 158, 0, 163,
	0, 166, 214, 253, 255, 257, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, -2, -2, 0,
	0, 99, 344, 0, 0, 168, 102, 105, -2, -2,
	232, 0, 0, 489, 489, 342, 288, 228, 225, 226,
	474, 221, 0, 320, 319, 0, 510, 511, 512, 506,
	507, 0, 509, 448, 453, 454, 452, 474, 0, 457,
	0, 458, 342, 352, 459, 513, 0, 514, 515, 518,
	322, 321, 323, 493, 0, 494, 0, 461, 462, 150,
	0, 151, 156, 157, 335, 336, 469, 470, 337, 338,
	473, 11, 23, 26, 0, 29, 32, 0, 22, 35,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 430,
	0, 432, 437, 0, 0, 393, 394, 416, 417, 0,
	0, 46, 0, 0, 137, 0, 49, 0, 218, 120,
	0, 0, 0, 0, 0, 162, 0, -2, 290, 293,
	65, 83, 107, 109, 0, 0, 107, 68, 116, 38,
	0, 118, 75, 0, 0, 139, 141, 87, 146, 147,
	148, 0, 168, 104, 0, 346, 198, 0, 233, 0,
	485, 0, 474, 224, 220, 0, 455, 505, 0, 445,
	474, 474, 0, 0, 482, 349, 522, 0, 497, 498,
	153, 28, 34, 0, 387, 388, 389, 390, 391, 392,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	405, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	0, -2, 0, 382, 431, 433, 0, 374, 527, 418,
	42, 0, 136, 0, 0, 0, 130, 216, 0, 38,
	127, 128, 121, 122, 0, 164, 0, 0, 0, 0,
	110, 489, 0, 0, 0, 70, 0, 0, 0, 145,
	89, 326, 198, 345, 93, 167, 0, 0, 171, 0,
	-2, 197, 0, 0, 200, 202, 203, 204, 205, 206,
	207, 106, 360, 230, 488, 0, 223, 449, 0, 447,
	0, 0, 478, 479, 351, 0, 492, 0, 386, 414,
	0, 381, 435, 436, 132, 0, 0, 38, 0, 38,
	126, 123, 326, 291, 0, 108, 0, 0, 0, 119,
	38, 0, 38, 142, 0, 90, 0, 0, 92, 0,
	210, 170, 0, 87, 201, 0, 0, 174, 234, 222,
	508, 451, 450, 353, 496, 415, 0, 47, 38, 138,
	0, 125, 0, 66, 114, 38, 111, 67, 117, 0,
	0, 0, 143, 38, 0, 169, 0, 0, 0, 0,
	0, 173, 0, 176, 178, 434, 134, 50, 112, 38,
	38, 0, 76, 0, 91, 0, 0, 0, 330, 0,
	208, 211, 0, 0, 213, 175, 0, 179, 180, 0,
	0, 188, 0, 0, -2, 0, 0, 0, 38, 144,
	312, 327, 0, 331, 0, 212, -2, 177, 181, 182,
	183, 0, 192, 0, 0, 314, 115, 0, 328, 0,
	209, 0, 184, 185, 0, -2, 189, 113, 78, 329,
	0, 0, 190, 74, 77, 79, 0, 172, 194, 38,
	186, 80, 0, 0, 0, 195, 0, 0, 38, 0,
	81,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:235
		{
			rootnode = stmt.NewStmtList(yyDollar[1].list)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:241
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:242
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:247
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:254
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:264
		{
			yyVAL.node = yyDollar[1].node
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:266
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:268
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:270
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 10:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:276
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 11:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:286
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 12:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:296
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 13:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:302
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 14:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:308
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:318
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 16:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:328
		{
			yyVAL.node = yyDollar[1].node
		}
	case 17:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:333
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:335
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:340
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:350
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:363
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 22:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:373
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:389
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:391
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:396
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:406
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:419
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:429
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:445
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:447
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:452
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:462
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:475
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:485
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 35:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:501
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)

			yyVAL.node = yyDollar[1].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:517
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(constant, yyDollar[2].token.Comments())

			constList := []node.Node{constant}

			yyVAL.node = stmt.NewConstList(constList)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:536
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:538
		{
			yyVAL.list = []node.Node{}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:544
		{
			yyVAL.node = yyDollar[1].node
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:546
		{
			yyVAL.node = yyDollar[1].node
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:548
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:550
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:560
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:562
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(label, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:575
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:581
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			if yyDollar[5].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:595
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[4].list))

			yyVAL.node = stmt.NewIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:604
		{
			yyVAL.node = stmt.NewWhile(yyDollar[1].token, yyDollar[2].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:610
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 50:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:616
		{
			yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:622
		{
			yyVAL.node = stmt.NewSwitch(yyDollar[1].token, yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:628
		{
			yyVAL.node = stmt.NewBreak(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:634
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:640
		{
			yyVAL.node = stmt.NewContinue(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:646
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:652
		{
			yyVAL.node = stmt.NewReturn(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:658
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:664
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:670
		{
			yyVAL.node = yyDollar[1].node
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:672
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:678
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:684
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:690
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:696
		{
			yyVAL.node = yyDollar[1].node
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:698
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:704
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:714
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:724
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:730
		{
			yyVAL.node = stmt.NewNop()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:736
		{
			yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)

			if yyDollar[6].node == nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:748
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:754
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(label, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:767
		{
			yyVAL.list = []node.Node{}
		}
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:769
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(catch, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(catch, yyDollar[1].token.Comments())

			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:787
		{
			yyVAL.node = nil
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:789
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:798
		{
			yyVAL.list = yyDollar[1].list
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:800
		{
			yyVAL.list = []node.Node{}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:805
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:807
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:812
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:829
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:831
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:836
		{
			yyVAL.node = yyDollar[1].node
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:841
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:846
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:851
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:853
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:858
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:860
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:865
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewFunction(name, yyDollar[2].boolWithToken.value, yyDollar[5].list, nil, yyDollar[8].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:878
		{
			switch n := yyDollar[1].node.(type) {
			case *stmt.Class:
				name := node.NewIdentifier(yyDollar[2].token.Value)
				positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.ClassName = name
				n.Stmts = yyDollar[6].list
				n.Extends = yyDollar[3].node
				n.Implements = yyDollar[4].list

			case *stmt.Trait:
				// TODO: is it possible that trait extend or implement
				name := node.NewIdentifier(yyDollar[2].token.Value)
				positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.TraitName = name
				n.Stmts = yyDollar[6].list
			}

			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:899
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewInterface(name, yyDollar[3].list, yyDollar[5].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:913
		{
			yyVAL.node = stmt.NewClass(nil, nil, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:919
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(classModifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:929
		{
			yyVAL.node = stmt.NewTrait(nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:935
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(classModifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:948
		{
			yyVAL.node = nil
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:950
		{
			yyVAL.node = yyDollar[2].node
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:955
		{
			yyVAL.token = yyDollar[1].token
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:960
		{
			yyVAL.list = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:962
		{
			yyVAL.list = yyDollar[2].list
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:967
		{
			yyVAL.list = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:969
		{
			yyVAL.list = yyDollar[2].list
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:974
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:976
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:981
		{
			yyVAL.foreachVariable = foreachVariable{nil, false}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:983
		{
			yyVAL.foreachVariable = yyDollar[2].foreachVariable
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:988
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:990
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:992
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1002
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1004
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1014
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1016
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1026
		{
			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1028
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1038
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(name, yyDollar[1].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(constant, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{constant}
		}
	case 119:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1050
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, constant)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1066
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1068
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1070
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 123:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1072
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1078
		{
			yyVAL.list = []node.Node{}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1080
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			positions.AddPosition(_case, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1087
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			positions.AddPosition(_default, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1104
		{
			yyVAL.node = yyDollar[1].node
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1106
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1116
		{
			yyVAL.list = []node.Node{}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1118
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1130
		{
			yyVAL.list = []node.Node{}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1132
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[5].list))

			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1147
		{
			yyVAL.node = nil
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1149
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1159
		{
			yyVAL.node = nil
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1161
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[3].list))

			yyVAL.node = stmt.NewAltElse(stmts)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1174
		{
			yyVAL.list = yyDollar[1].list
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1176
		{
			yyVAL.list = nil
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1181
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1183
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1188
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[2].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[3].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1214
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[2].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[3].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1244
		{
			yyVAL.node = nil
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1246
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1252
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1258
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1264
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1266
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1268
		{
			arg := node.NewArgument(yyDollar[2].node, false, false)
			positions.AddPosition(arg, positionBuilder.NewNodePosition(yyDollar[2].node))
			comments.AddComments(arg, comments[yyDollar[2].node])

			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{arg}, yyDollar[3].token}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1280
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1282
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1287
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1293
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1299
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, false, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1305
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1314
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1316
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1322
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1332
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1338
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1348
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[3].token))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 164:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1365
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1382
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[1].token))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1399
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1421
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1423
		{
			yyVAL.list = []node.Node{}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1429
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1435
		{
			yyVAL.node = yyDollar[1].node
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1437
		{
			yyVAL.node = yyDollar[1].node
		}
	case 172:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1439
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(name, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].boolWithToken.value, yyDollar[6].list, nil, yyDollar[8].nodesWithEndToken.nodes, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[8].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1452
		{
			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1461
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1463
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1468
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1470
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1475
		{
			yyVAL.list = nil
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1477
		{
			yyVAL.list = yyDollar[1].list
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1482
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1484
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1489
		{
			yyVAL.node = yyDollar[1].node
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1491
		{
			yyVAL.node = yyDollar[1].node
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1496
		{
			name := name.NewName(yyDollar[3].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[3].list))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1509
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1511
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1516
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(nil, name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1526
		{
			yyVAL.node = yyDollar[1].node
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1531
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(target, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1544
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1554
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1563
		{
			yyVAL.node = nil
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1565
		{
			yyVAL.node = yyDollar[1].node
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1570
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1572
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1577
		{
			yyVAL.list = yyDollar[1].list
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1579
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(modifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(modifier, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{modifier}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1590
		{
			yyVAL.list = nil
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1592
		{
			yyVAL.list = yyDollar[1].list
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1597
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1599
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1604
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1610
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1616
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1622
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1628
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1634
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1643
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			positions.AddPosition(property, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1659
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[5].node, "")
			positions.AddPosition(property, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1675
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			positions.AddPosition(property, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1691
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[3].node, "")
			positions.AddPosition(property, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1710
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			yyDollar[1].node.(*stmt.ConstList).Consts = append(yyDollar[1].node.(*stmt.ConstList).Consts, constant)
			positions.AddPosition(yyDollar[1].node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1725
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(constant, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewClassConstList(nil, []node.Node{constant})
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1742
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1744
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1750
		{
			yyVAL.list = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1752
		{
			yyVAL.list = yyDollar[1].list
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1757
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1759
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1764
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1766
		{
			yyVAL.list = yyDollar[1].list
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1771
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1778
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[2].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[2].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1788
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1790
		{
			yyVAL.list = yyDollar[1].list
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1792
		{
			yyVAL.list = yyDollar[1].list
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1797
		{
			yyVAL.list = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1799
		{
			yyVAL.list = yyDollar[1].list
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1804
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1819
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign_op.NewAssign(list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1828
		{
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1829
		{
		}
	case 233:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1830
		{
		}
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1830
		{
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1831
		{
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1832
		{
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1833
		{
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1834
		{
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1835
		{
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1836
		{
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1837
		{
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1838
		{
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1839
		{
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1840
		{
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1841
		{
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1842
		{
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1843
		{
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1844
		{
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1845
		{
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1846
		{
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1847
		{
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1848
		{
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1848
		{
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1849
		{
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1849
		{
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1850
		{
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1850
		{
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1851
		{
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1851
		{
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1852
		{
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1853
		{
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1854
		{
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1855
		{
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1856
		{
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1857
		{
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1858
		{
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1859
		{
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1860
		{
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1861
		{
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1862
		{
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1863
		{
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1864
		{
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1865
		{
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1866
		{
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1867
		{
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1868
		{
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1869
		{
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1870
		{
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1871
		{
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1872
		{
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1873
		{
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1874
		{
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1875
		{
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1876
		{
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1877
		{
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1878
		{
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1880
		{
			yyVAL.node = yyDollar[1].node
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1882
		{
			yyVAL.node = yyDollar[2].node

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn
				}
			}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1907
		{
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1908
		{
		}
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1909
		{
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1910
		{
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1911
		{
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1912
		{
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1913
		{
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1914
		{
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1915
		{
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1916
		{
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1917
		{
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1918
		{
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1919
		{
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1920
		{
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1921
		{
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1921
		{
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1922
		{
			yyVAL.node = yyDollar[1].node
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1923
		{
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1924
		{
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1925
		{
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1926
		{
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1927
		{
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1928
		{
		}
	case 312:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:1930
		{
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1931
		{
		}
	case 314:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php5/php5.y:1933
		{
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1937
		{
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1938
		{
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1939
		{
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1940
		{
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1945
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1951
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1957
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(str, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(str, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[str])
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1967
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1976
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1982
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1991
		{
			yyVAL.token = yyDollar[1].token
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1996
		{
			yyVAL.list = []node.Node{}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1998
		{
			yyVAL.list = yyDollar[3].list
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2003
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2019
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2035
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2051
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(identifier, yyDollar[2].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2070
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewFunctionCall(name, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(name, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2080
		{
			funcName := name.NewRelative(yyDollar[3].list)
			positions.AddPosition(funcName, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(funcName, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[funcName])
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2090
		{
			funcName := name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(funcName, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(funcName, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[funcName])
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2100
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2106
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2112
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2118
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2124
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2133
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2139
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2145
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2151
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2160
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2166
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2172
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2181
		{
			yyVAL.node = yyDollar[1].node
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2183
		{
			yyVAL.node = yyDollar[1].node
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2188
		{
			yyVAL.node = yyDollar[1].node

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2236
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2242
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2244
		{
			yyVAL.list = []node.Node{}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2250
		{
			yyVAL.list = yyDollar[2].list
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2255
		{
			yyVAL.node = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2257
		{
			yyVAL.node = nil
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2259
		{
			yyVAL.node = yyDollar[1].node
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2263
		{
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2264
		{
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2265
		{
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2270
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2272
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2277
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2283
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2289
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2295
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2301
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2307
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2313
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2319
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2325
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2331
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2337
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)) /* TODO: mark as Heredoc*/
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2342
		{
			yyVAL.node = scalar.NewEncapsed(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2351
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2363
		{
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2367
		{
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2368
		{
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2369
		{
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2370
		{
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2371
		{
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2372
		{
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2373
		{
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2374
		{
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2375
		{
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2376
		{
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2380
		{
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2381
		{
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2382
		{
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2383
		{
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2384
		{
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2385
		{
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2386
		{
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2387
		{
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2388
		{
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2389
		{
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2390
		{
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2391
		{
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2392
		{
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2393
		{
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2394
		{
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2395
		{
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2396
		{
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2397
		{
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2398
		{
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2399
		{
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2400
		{
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2401
		{
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2402
		{
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2403
		{
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2404
		{
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2405
		{
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2406
		{
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2407
		{
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2408
		{
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2409
		{
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2410
		{
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2411
		{
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2412
		{
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2417
		{
			yyVAL.node = yyDollar[1].node
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2419
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2425
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2431
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2440
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2450
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2452
		{
			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2454
		{
			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2456
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2462
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2468
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2476
		{
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2477
		{
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2486
		{
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2487
		{
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2488
		{
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2489
		{
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2494
		{
			yyVAL.node = yyDollar[1].node
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2496
		{
			yyVAL.node = yyDollar[1].node
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2501
		{
			yyVAL.node = yyDollar[2].node
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2503
		{
			yyVAL.node = yyDollar[2].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2509
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2517
		{
			yyVAL.node = yyDollar[1].node
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2524
		{
			yyVAL.node = yyDollar[1].node
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2531
		{
			yyVAL.node = yyDollar[1].node

			if yyDollar[4].list != nil {
				yyDollar[4].list[0].(*expr.MethodCall).Method = yyDollar[3].list[len(yyDollar[3].list)-1].(*expr.PropertyFetch).Property
				yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
			}

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2584
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2589
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2591
		{
			yyVAL.list = []node.Node{}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2597
		{
			if yyDollar[3].list != nil {
				yyDollar[3].list[0].(*expr.MethodCall).Method = yyDollar[2].list[len(yyDollar[2].list)-1].(*expr.PropertyFetch).Property
				yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
			}

			yyVAL.list = yyDollar[2].list
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2609
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2616
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = []node.Node{yyDollar[1].node, fetch}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2626
		{
			yyVAL.node = expr.NewMethodCall(nil, nil, yyDollar[1].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].nodesWithEndToken.nodes, yyDollar[1].nodesWithEndToken.endToken))
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2634
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2636
		{
			yyVAL.list = yyDollar[1].list
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2638
		{
			yyVAL.list = nil
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2643
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2645
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2658
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2664
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2674
		{
			yyVAL.node = yyDollar[1].node
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2679
		{
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2681
		{
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2685
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2686
		{
			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2687
		{
			yyVAL.node = yyDollar[1].node
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2693
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2695
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2705
		{
			yyVAL.node = yyDollar[1].node
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2710
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2716
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2722
		{
			yyVAL.node = yyDollar[1].node
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2728
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2738
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2746
		{
			yyVAL.node = nil
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2747
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2753
		{
			yyVAL.list = yyDollar[1].list
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2755
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2765
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2772
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2779
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2789
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2795
		{
			yyVAL.node = yyDollar[2].node
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2800
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(n, yyDollar[1].token.Comments())

			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2808
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(n, yyDollar[2].token.Comments())

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)

			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2823
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2825
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2831
		{
			yyVAL.node = yyDollar[1].node
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2833
		{
			yyVAL.node = expr.NewList(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2839
		{
			yyVAL.node = nil
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2845
		{
			yyVAL.list = nil
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2847
		{
			yyVAL.list = yyDollar[1].list
		}
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2852
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2860
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2868
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2876
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2884
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[6].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2892
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			comments.AddComments(arrayItem, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2900
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2908
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[2].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(arrayItem, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{arrayItem}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2919
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2921
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2928
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2930
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2940
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2950
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2963
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(fetch, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(fetch, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2979
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2985
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2999
		{
			yyVAL.node = yyDollar[2].node
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3004
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3010
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3022
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3035
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3041
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3047
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3053
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3059
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3065
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3071
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3077
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3086
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3088
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3092
		{
			yyVAL.node = yyDollar[1].node
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3093
		{
			yyVAL.node = yyDollar[1].node
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3098
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3108
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3121
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3134
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	}
	goto yystack /* stack new state and value */
}
