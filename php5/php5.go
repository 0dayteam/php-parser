//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	//    "fmt"
	//    "strings"
	"strconv"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign_op"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"

//    "github.com/z7zmey/php-parser/node/expr/binary_op"
//    "github.com/z7zmey/php-parser/node/expr/cast"
)

//line php5/php5.y:22
type yySymType struct {
	yys   int
	node  node.Node
	token token.Token
	//    boolWithToken boolWithToken
	list                    []node.Node
	foreachVariable         foreachVariable
	nodesWithEndToken       *nodesWithEndToken
	simpleIndirectReference simpleIndirectReference
	objectPropertyList      []objectProperty
	//    str string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:2567

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	104, 452,
	105, 452,
	-2, 450,
	-1, 101,
	78, 349,
	-2, 428,
	-1, 113,
	78, 470,
	123, 466,
	-2, 476,
	-1, 153,
	104, 452,
	105, 452,
	-2, 450,
	-1, 203,
	121, 323,
	124, 323,
	-2, 447,
	-1, 204,
	104, 452,
	105, 452,
	121, 324,
	124, 324,
	-2, 450,
	-1, 270,
	78, 470,
	-2, 476,
	-1, 297,
	78, 351,
	-2, 430,
	-1, 301,
	123, 467,
	-2, 477,
	-1, 310,
	78, 350,
	-2, 429,
	-1, 376,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 284,
	-1, 377,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 285,
	-1, 378,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 286,
	-1, 379,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 287,
	-1, 380,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 288,
	-1, 381,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 289,
	-1, 382,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 290,
	-1, 383,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 291,
	-1, 390,
	104, 452,
	105, 452,
	-2, 450,
	-1, 442,
	123, 461,
	-2, 465,
	-1, 460,
	104, 452,
	105, 452,
	124, 533,
	135, 533,
	-2, 450,
	-1, 461,
	124, 534,
	135, 534,
	-2, 447,
	-1, 462,
	104, 452,
	105, 452,
	-2, 450,
	-1, 484,
	124, 157,
	135, 157,
	-2, 447,
	-1, 485,
	104, 452,
	105, 452,
	124, 158,
	135, 158,
	-2, 450,
	-1, 491,
	123, 491,
	-2, 535,
	-1, 497,
	123, 491,
	-2, 536,
	-1, 519,
	78, 349,
	-2, 386,
	-1, 567,
	124, 143,
	-2, 148,
	-1, 575,
	121, 325,
	124, 325,
	-2, 447,
	-1, 576,
	104, 452,
	105, 452,
	121, 326,
	124, 326,
	-2, 450,
	-1, 583,
	57, 234,
	125, 234,
	-2, 233,
	-1, 669,
	78, 351,
	-2, 388,
	-1, 698,
	124, 143,
	-2, 148,
	-1, 715,
	124, 143,
	-2, 148,
	-1, 771,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 414,
	-1, 772,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 415,
	-1, 773,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 416,
	-1, 774,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 417,
	-1, 775,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 418,
	-1, 776,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 419,
	-1, 777,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 420,
	-1, 778,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 421,
	-1, 781,
	78, 350,
	-2, 387,
	-1, 831,
	57, 229,
	-2, 231,
	-1, 883,
	37, 204,
	-2, 201,
	-1, 938,
	123, 461,
	-2, 465,
	-1, 990,
	29, 192,
	-2, 4,
	-1, 1012,
	124, 143,
	-2, 148,
	-1, 1016,
	121, 196,
	-2, 198,
}

const yyPrivate = 57344

const yyLast = 8461

var yyAct = [...]int{

	101, 716, 1020, 594, 834, 475, 430, 199, 887, 122,
	130, 984, 832, 450, 442, 718, 825, 472, 703, 417,
	914, 799, 808, 515, 671, 338, 459, 327, 871, 728,
	4, 418, 97, 388, 263, 60, 445, 318, 314, 542,
	157, 129, 329, 288, 2, 6, 257, 140, 483, 328,
	641, 178, 5, 137, 139, 227, 227, 144, 25, 42,
	641, 975, 1011, 962, 978, 961, 191, 191, 977, 43,
	958, 928, 971, 953, 814, 976, 1024, 641, 191, 960,
	266, 643, 642, 972, 917, 929, 448, 731, 120, 644,
	646, 647, 645, 113, 152, 580, 508, 497, 141, 120,
	697, 38, 645, 297, 564, 176, 175, 250, 514, 356,
	509, 203, 269, 504, 136, 653, 644, 646, 647, 645,
	50, 240, 491, 324, 120, 310, 161, 505, 315, 319,
	826, 820, 322, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 178, 153, 641, 829, 620, 337,
	643, 642, 177, 179, 180, 178, 357, 353, 580, 621,
	227, 785, 204, 606, 492, 331, 579, 334, 309, 355,
	358, 354, 117, 270, 607, 226, 226, 580, 663, 665,
	664, 666, 651, 652, 653, 644, 646, 647, 645, 348,
	562, 558, 266, 311, 227, 449, 125, 240, 120, 722,
	641, 563, 559, 349, 643, 642, 449, 312, 301, 132,
	119, 995, 541, 473, 200, 963, 937, 103, 295, 350,
	903, 119, 227, 133, 269, 120, 384, 120, 158, 902,
	422, 449, 840, 835, 783, 38, 651, 652, 653, 644,
	646, 647, 645, 300, 736, 420, 119, 161, 627, 299,
	125, 619, 120, 618, 612, 611, 599, 951, 585, 584,
	432, 227, 598, 896, 391, 228, 471, 740, 229, 454,
	739, 438, 230, 230, 592, 293, 125, 292, 120, 286,
	352, 280, 253, 252, 232, 270, 1036, 465, 1028, 947,
	911, 870, 227, 469, 191, 865, 862, 264, 860, 477,
	478, 833, 434, 435, 849, 819, 493, 681, 240, 622,
	125, 394, 120, 130, 389, 390, 613, 507, 609, 228,
	119, 511, 229, 909, 427, 519, 425, 996, 435, 434,
	434, 470, 435, 176, 175, 489, 304, 4, 232, 437,
	495, 306, 419, 461, 463, 228, 294, 119, 229, 302,
	159, 1027, 6, 500, 503, 482, 446, 519, 1012, 5,
	125, 924, 120, 855, 232, 456, 484, 174, 177, 179,
	180, 178, 539, 952, 119, 296, 138, 230, 817, 267,
	550, 441, 268, 544, 811, 351, 715, 296, 801, 800,
	546, 191, 446, 698, 460, 462, 670, 446, 232, 581,
	119, 570, 567, 535, 342, 227, 287, 343, 38, 264,
	277, 230, 476, 274, 294, 273, 249, 485, 221, 195,
	194, 193, 582, 691, 692, 143, 121, 386, 134, 228,
	176, 175, 229, 1008, 119, 444, 1033, 885, 1032, 230,
	1004, 578, 1003, 886, 993, 919, 884, 537, 232, 908,
	538, 308, 859, 307, 603, 803, 90, 691, 692, 797,
	489, 495, 181, 182, 174, 177, 179, 180, 178, 796,
	604, 490, 575, 790, 701, 687, 496, 545, 230, 543,
	540, 499, 451, 396, 119, 346, 155, 227, 1001, 258,
	901, 593, 623, 38, 436, 125, 1038, 891, 892, 893,
	890, 889, 888, 968, 944, 923, 315, 922, 868, 230,
	319, 802, 822, 727, 305, 519, 488, 446, 446, 926,
	196, 433, 669, 576, 519, 577, 223, 224, 4, 502,
	853, 519, 519, 519, 519, 519, 794, 795, 640, 683,
	684, 600, 529, 6, 633, 690, 446, 636, 125, 446,
	5, 446, 875, 259, 260, 638, 635, 990, 294, 125,
	227, 227, 227, 125, 725, 519, 688, 124, 570, 668,
	453, 421, 124, 726, 529, 570, 1007, 675, 457, 266,
	707, 227, 227, 693, 452, 695, 256, 513, 712, 424,
	709, 423, 303, 702, 466, 298, 490, 496, 467, 38,
	569, 733, 809, 835, 123, 742, 724, 476, 294, 294,
	574, 269, 732, 730, 843, 674, 227, 571, 227, 455,
	572, 748, 230, 749, 125, 602, 571, 262, 444, 572,
	605, 320, 400, 125, 746, 316, 38, 38, 207, 510,
	294, 488, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 781,
	750, 519, 270, 284, 720, 721, 787, 461, 281, 285,
	389, 704, 704, 891, 892, 893, 890, 889, 888, 206,
	784, 484, 294, 571, 1005, 782, 572, 872, 519, 570,
	806, 419, 419, 506, 230, 131, 227, 816, 625, 626,
	1021, 714, 792, 61, 629, 630, 570, 818, 788, 791,
	258, 805, 321, 44, 1006, 570, 824, 821, 460, 641,
	812, 561, 529, 643, 642, 53, 476, 336, 476, 258,
	1034, 529, 485, 837, 436, 125, 838, 839, 529, 529,
	529, 529, 529, 1010, 823, 997, 294, 661, 662, 659,
	660, 663, 665, 664, 666, 651, 652, 653, 644, 646,
	647, 645, 127, 128, 729, 294, 238, 230, 230, 230,
	519, 517, 529, 467, 259, 260, 519, 519, 973, 258,
	225, 233, 258, 955, 283, 925, 264, 436, 230, 230,
	921, 502, 468, 259, 260, 548, 587, 162, 589, 588,
	227, 1025, 227, 517, 1017, 519, 741, 131, 570, 852,
	857, 570, 597, 856, 979, 813, 810, 570, 863, 956,
	854, 864, 44, 230, 258, 230, 873, 898, 867, 876,
	899, 895, 258, 804, 691, 692, 227, 282, 932, 519,
	900, 905, 284, 259, 260, 125, 259, 260, 904, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 918, 570, 529, 913,
	915, 258, 931, 915, 752, 751, 255, 711, 259, 260,
	694, 691, 692, 935, 639, 637, 259, 260, 519, 634,
	936, 590, 38, 512, 858, 529, 479, 397, 393, 323,
	202, 201, 198, 230, 729, 135, 595, 596, 938, 446,
	704, 738, 419, 672, 526, 549, 398, 446, 957, 942,
	254, 898, 964, 251, 557, 807, 385, 583, 362, 361,
	114, 360, 359, 827, 519, 259, 260, 38, 735, 519,
	734, 570, 897, 570, 830, 831, 476, 883, 1015, 988,
	910, 517, 912, 1013, 987, 986, 985, 974, 519, 519,
	517, 930, 980, 920, 570, 983, 982, 517, 517, 517,
	517, 517, 959, 933, 1031, 1002, 1000, 529, 882, 881,
	880, 998, 999, 529, 529, 954, 570, 927, 444, 38,
	879, 38, 519, 570, 1023, 1016, 444, 869, 878, 38,
	481, 517, 1026, 719, 940, 570, 894, 230, 570, 230,
	271, 945, 529, 717, 573, 1022, 401, 948, 949, 38,
	40, 723, 568, 399, 38, 39, 451, 38, 38, 566,
	874, 14, 13, 1, 341, 608, 516, 842, 965, 966,
	745, 443, 1019, 230, 38, 38, 529, 208, 209, 210,
	211, 213, 214, 215, 216, 217, 218, 219, 220, 212,
	125, 1018, 120, 994, 713, 392, 934, 387, 163, 339,
	685, 536, 950, 38, 289, 458, 160, 156, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 529, 885, 517, 317, 706,
	313, 126, 886, 815, 38, 884, 708, 941, 38, 333,
	793, 682, 271, 10, 248, 74, 75, 115, 1035, 228,
	265, 63, 229, 1039, 517, 88, 586, 89, 518, 100,
	981, 73, 989, 11, 325, 99, 98, 78, 232, 118,
	524, 529, 3, 0, 0, 0, 529, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 891, 892, 893, 890,
	889, 888, 0, 0, 0, 529, 529, 0, 705, 0,
	0, 0, 0, 0, 119, 1014, 0, 0, 877, 30,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1029, 0, 0, 1030, 560, 529,
	0, 0, 146, 150, 154, 0, 517, 0, 164, 0,
	0, 0, 517, 517, 0, 0, 197, 0, 0, 447,
	655, 205, 0, 116, 447, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 234, 235, 236, 237,
	0, 517, 239, 0, 241, 242, 243, 244, 245, 246,
	247, 0, 0, 0, 0, 0, 641, 261, 667, 649,
	643, 642, 275, 276, 0, 278, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 290, 0, 231, 231,
	658, 657, 648, 650, 661, 662, 659, 660, 663, 665,
	664, 666, 651, 652, 653, 644, 646, 647, 645, 0,
	0, 0, 0, 272, 0, 208, 209, 210, 211, 213,
	214, 215, 216, 217, 218, 219, 220, 212, 239, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 447, 0, 0, 0, 0,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 0, 447, 154, 0, 447, 0, 447, 0,
	517, 0, 0, 231, 0, 517, 0, 0, 403, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 0, 0, 0, 517, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 429, 431, 431, 0, 0, 0, 0, 517, 439,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 154, 154, 0, 0, 464, 0, 0,
	431, 0, 0, 0, 0, 0, 431, 290, 0, 0,
	0, 0, 431, 431, 0, 0, 154, 0, 0, 431,
	494, 0, 0, 0, 231, 498, 347, 0, 641, 0,
	0, 649, 643, 642, 0, 0, 0, 0, 0, 271,
	0, 208, 209, 210, 211, 213, 214, 215, 216, 217,
	218, 219, 220, 212, 0, 231, 661, 662, 659, 660,
	663, 665, 664, 666, 651, 652, 653, 644, 646, 647,
	645, 547, 168, 170, 169, 191, 0, 0, 551, 552,
	553, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	673, 0, 0, 0, 0, 0, 0, 676, 677, 678,
	679, 680, 0, 0, 0, 556, 801, 800, 0, 0,
	0, 0, 192, 172, 176, 175, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 208, 209, 210, 211, 213, 214, 215,
	216, 217, 218, 219, 220, 212, 0, 0, 231, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 624, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 780, 0, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 689, 0, 907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 654, 655, 0, 447, 0, 0, 0,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 431, 743,
	0, 0, 0, 231, 231, 231, 0, 154, 0, 0,
	641, 0, 667, 649, 643, 642, 0, 0, 0, 0,
	0, 154, 272, 0, 231, 231, 847, 0, 0, 0,
	0, 0, 850, 851, 658, 657, 648, 650, 661, 662,
	659, 660, 663, 665, 664, 666, 651, 652, 653, 644,
	646, 647, 645, 0, 0, 0, 0, 0, 0, 231,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 667, 649, 643, 642, 0, 0,
	0, 798, 0, 0, 0, 906, 0, 0, 0, 0,
	0, 0, 0, 656, 654, 655, 658, 657, 648, 650,
	661, 662, 659, 660, 663, 665, 664, 666, 651, 652,
	653, 644, 646, 647, 645, 0, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 0, 0, 0, 848, 431,
	431, 641, 0, 667, 649, 643, 642, 844, 0, 231,
	656, 654, 655, 0, 939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 657, 648, 650, 661,
	662, 659, 660, 663, 665, 664, 666, 651, 652, 653,
	644, 646, 647, 645, 0, 0, 0, 0, 641, 846,
	667, 649, 643, 642, 0, 0, 0, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 0,
	0, 0, 658, 657, 648, 650, 661, 662, 659, 660,
	663, 665, 664, 666, 651, 652, 653, 644, 646, 647,
	645, 0, 0, 431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 231,
	33, 0, 0, 21, 0, 0, 431, 22, 23, 37,
	44, 15, 24, 35, 0, 0, 36, 9, 0, 26,
	0, 31, 80, 81, 7, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 8, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 632, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 15, 24, 35, 0, 0, 36, 9, 0,
	26, 0, 31, 80, 81, 7, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 8, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 501, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 15, 24, 35, 0, 0, 36, 9,
	0, 26, 0, 31, 80, 81, 7, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 8, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 0, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 1040, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 330, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 1037, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 330,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 1009, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	330, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 992,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 991, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 330, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	0, 34, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 330, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 970, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 330, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 969, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 967,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 330, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 330, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 946, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 866, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 330, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 0, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 686, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 0, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 330, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 565, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 330,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 326, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	330, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 0,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	0, 34, 943, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 0, 34, 916, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 710, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 335, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 0, 34, 332, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 191, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 0, 34, 0, 62, 0,
	96, 172, 176, 175, 57, 56, 58, 59, 72, 119,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 0, 0, 841, 0, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 0, 0, 836, 192, 172, 176, 175, 656, 654,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 786, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 789, 641, 0, 667, 649,
	643, 642, 656, 654, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 0, 0,
	658, 657, 648, 650, 661, 662, 659, 660, 663, 665,
	664, 666, 651, 652, 653, 644, 646, 647, 645, 0,
	641, 0, 667, 649, 643, 642, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 657, 648, 650, 661, 662,
	659, 660, 663, 665, 664, 666, 651, 652, 653, 644,
	646, 647, 645, 0, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 744, 0, 0,
	0, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 699, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 0, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 696, 0, 0, 0, 0, 0, 0, 192, 172,
	176, 175, 0, 0, 0, 0, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 631,
	0, 0, 0, 0, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 628, 0, 0,
	0, 0, 0, 0, 192, 172, 176, 175, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 610, 0, 0, 192, 172,
	176, 175, 0, 0, 0, 0, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 591,
	0, 0, 0, 0, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 172, 176,
	175, 168, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 426, 0,
	0, 192, 172, 176, 175, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 0, 0, 0, 192, 172, 176, 175, 0,
	0, 0, 168, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 395, 0, 0, 0,
	0, 0, 192, 172, 176, 175, 0, 0, 0, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 345, 0, 0, 0, 0, 0, 192,
	172, 176, 175, 0, 0, 0, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	344, 0, 0, 0, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 168, 170, 169, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 165, 0, 0,
	0, 0, 0, 192, 172, 176, 175, 656, 654, 655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 0, 641, 0, 667, 649, 643,
	642, 168, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	657, 648, 650, 661, 662, 659, 660, 663, 665, 664,
	666, 651, 652, 653, 644, 646, 647, 645, 0, 0,
	0, 192, 172, 176, 175, 654, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 641, 0, 667, 649, 643, 642, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 657, 648, 650,
	661, 662, 659, 660, 663, 665, 664, 666, 651, 652,
	653, 644, 646, 647, 645, 0, 0, 192, 172, 176,
	175, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 0, 192,
	172, 176, 175, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	192, 172, 176, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 641, 0, 0, 649, 643, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 649, 643, 642, 658, 657, 648, 650, 661,
	662, 659, 660, 663, 665, 664, 666, 651, 652, 653,
	644, 646, 647, 645, 657, 648, 650, 661, 662, 659,
	660, 663, 665, 664, 666, 651, 652, 653, 644, 646,
	647, 645, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 176, 175, 0, 0, 0, 0, 82, 83, 71,
	0, 104, 105, 125, 87, 120, 0, 0, 0, 0,
	0, 94, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 487, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 148, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 641,
	91, 76, 649, 643, 642, 0, 62, 480, 96, 0,
	0, 486, 57, 56, 58, 59, 72, 119, 0, 0,
	0, 0, 0, 0, 0, 648, 650, 661, 662, 659,
	660, 663, 665, 664, 666, 651, 652, 653, 644, 646,
	647, 645, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 191, 0, 0, 142, 112, 108,
	102, 487, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 147, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 172, 176, 175, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 486, 57, 56, 58,
	59, 72, 119, 0, 0, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 641, 0, 0, 649, 643, 642, 0, 0,
	0, 0, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 650,
	661, 662, 659, 660, 663, 665, 664, 666, 651, 652,
	653, 644, 646, 647, 645, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 191, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 147, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 176, 175, 845, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 147, 148, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 0, 0,
	0, 0, 62, 0, 96, 0, 0, 617, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 0, 104, 105,
	125, 87, 120, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 191, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 147, 148, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 172, 176, 175, 91, 76, 0,
	0, 0, 0, 62, 0, 96, 0, 0, 615, 57,
	56, 58, 59, 72, 119, 0, 0, 0, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 82, 83, 71, 0, 104, 105,
	125, 87, 120, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 147, 148, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 0,
	0, 0, 0, 62, 0, 96, 0, 0, 291, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 0, 104,
	105, 125, 87, 120, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 191,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 148,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	0, 0, 0, 0, 62, 428, 96, 172, 176, 175,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 0,
	104, 105, 125, 87, 120, 0, 0, 0, 0, 0,
	94, 0, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 0, 0, 44,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 147,
	148, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 0, 0, 0, 0, 62, 0, 96, 0, 0,
	404, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	0, 104, 105, 125, 87, 120, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	147, 148, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 0, 0, 151, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 0, 104, 105, 125, 87, 120, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 147, 148, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 0, 0, 149, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 0, 104, 105, 125, 87, 120, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 147, 148, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 0, 0, 145, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 0, 104, 105, 125, 87, 120, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 147, 148, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 0, 0, 0, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 0, 104, 105, 125, 440, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 147, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 104, 105, 125, 77, 41, 148, 0, 0, 0,
	0, 527, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 525, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 0, 520, 112, 108, 521, 104, 105, 125, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 779, 534, 0, 523, 0,
	0, 0, 533, 532, 530, 531, 0, 0, 522, 0,
	525, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 0, 520, 112, 108,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 523, 0, 0, 0, 533, 532, 530,
	531,
}
var yyPact = [...]int{

	-1000, -1000, 2335, -1000, -1000, -1000, -1000, 303, 485, 735,
	88, -1000, 306, -1000, -1000, 915, -1000, 253, 253, 4955,
	302, 253, 7775, 7644, 7513, 365, 216, 795, 7906, -1000,
	5866, 298, 297, 296, -1000, 401, 7906, 912, 86, 911,
	910, 7906, -1000, -1000, -1000, -1000, 637, -1000, 586, -1000,
	1507, 295, 7906, 422, 240, 240, 7906, 7906, 7906, 7906,
	-1000, -1000, 8168, -1000, 7906, 7906, 7906, 7906, 7906, 7906,
	7906, 293, -1000, -1000, 158, 157, 879, 7906, 570, 300,
	292, 290, 7906, 7906, 287, 7906, 7906, -1000, 156, -1000,
	-1000, 830, 777, -1000, 154, 283, 7120, -1000, 152, 150,
	-1000, 264, 845, 517, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 124, 215, -1000, 514, 252, -1000, 395,
	-1000, 217, 332, -1000, 845, -1000, 72, 553, 549, -1000,
	693, 845, -1000, 909, -1000, -13, 4038, 4824, 8168, 4693,
	716, 86, 490, 7906, 285, -1000, 5819, -1000, 686, -1000,
	5772, -1000, 364, 1395, 5954, -1000, 68, -1000, -1000, 266,
	36, 86, -27, 35, 5954, -1000, -1000, -1000, -1000, -1000,
	7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906,
	7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906,
	7906, 300, 305, 240, 7906, 908, -1000, 5725, 362, 907,
	-1000, 577, -1000, -1000, 1507, 5678, -1000, -1000, 7382, 7906,
	7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906, 7906,
	7906, 186, -1000, -1000, -1000, -1000, -1000, 264, 489, 845,
	513, 511, -1000, -1000, -116, -116, -23, -116, 202, 5634,
	200, -116, -116, -116, -116, -116, -116, -116, -1000, 7251,
	-1000, 7906, 7906, 7906, 403, 822, 780, -1000, 214, 8037,
	240, 6123, 76, 252, 506, -1000, 476, 488, 845, 562,
	124, 215, 500, 7906, 7906, 5954, 5954, 7906, 5954, 5954,
	7906, 477, 822, 708, -1000, 727, 7906, 7120, 140, 78,
	5590, 240, 7906, 7906, 906, -1000, 6393, 264, 112, 7906,
	7906, 124, 395, 87, -1000, 7906, 360, -1000, -1000, 2204,
	264, -1000, 623, -8, -1000, 674, 845, -25, -1000, 610,
	845, 903, 558, -28, 8328, -1000, -1000, -1000, -1000, -1000,
	280, -1000, -1000, -1000, -1000, -1000, 253, -1000, 359, 77,
	5954, -1000, 358, 356, -1000, -1000, -1000, -1000, -1000, 216,
	-1000, 7906, -1000, -1000, 793, -1000, 8328, -1000, 7906, 7906,
	7906, 7906, 7906, 6082, 6956, 6705, 7249, -12, -12, -12,
	-23, -116, -23, -23, 204, 204, -24, -24, -24, -24,
	301, 301, 301, 301, -1000, 7906, -1000, 67, -1000, -1000,
	1199, 702, 66, -32, 3907, -1000, -1000, -1000, 279, -1000,
	538, 555, 7906, 6123, 350, 6123, 6123, 6123, 6123, 6123,
	6123, 6123, 6123, 6123, 6123, 6123, 6123, 42, -1000, -1000,
	276, 845, 264, 76, 76, -1000, -1000, -1000, -1000, -116,
	133, 5954, 132, -1000, -1000, -1000, -1000, 796, 901, 5509,
	149, 371, -1000, 137, -1000, -1000, 124, 215, -1000, 7906,
	-1000, -1000, 213, 845, 476, 76, 124, 213, 39, -1000,
	1507, -1000, 931, 194, 5461, 129, -1000, -1000, -1000, 128,
	192, -1000, -1000, 6970, 6839, -1000, -1000, 127, 125, -1000,
	-1000, 24, 185, -1000, -1000, 1507, 240, 7906, -1000, 252,
	252, -1000, -1000, 122, 5417, 252, 252, -1000, 5369, -1000,
	2073, -1000, -1000, -1000, -1000, 553, 899, 527, -1000, 549,
	895, 526, -1000, 894, 8328, -1000, 5910, -1000, -1000, 476,
	487, 845, 273, 8328, -1000, -1000, -1000, -1000, 598, 499,
	8328, 8328, 8328, 8328, 8328, 183, 446, 4169, 3776, 354,
	7906, 7906, 425, -1000, 869, -1000, -1000, 5321, -36, 270,
	-1000, 5954, 6262, 6534, 6040, 6123, 5273, 7906, 353, 240,
	1070, 1070, 4562, 887, 8328, 670, 263, 614, 550, -1000,
	476, 482, 845, 394, 538, -1000, 1507, -1000, 300, -49,
	186, 186, 264, -1000, -1000, -1000, 118, -1000, -1000, -1000,
	-1000, -1000, 7906, -1000, -1000, 145, 142, 252, 7906, 7906,
	124, 5227, -1000, 476, -1000, -1000, -1000, 7906, -1000, -1000,
	-1000, -1000, -1000, -1000, 5179, 240, 5954, 240, -1000, -1000,
	-1000, 6548, -1000, -1000, 5954, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 885, -1000, -1000, 884, -1000,
	-1000, 8328, 8328, 8328, 8328, 8328, 8328, 8328, 8328, 8328,
	8328, 8328, 8328, 8328, 8328, 8328, 8328, 8328, 8328, 8328,
	8328, 8328, 8328, 8328, 8328, 8328, 8328, 8253, 845, 476,
	8328, 108, 26, 5135, 523, 666, -65, -65, -75, -75,
	5091, 352, -1000, 253, 4955, 443, 348, -1000, 338, 5954,
	-1000, 7906, 267, 391, 334, 812, -1000, 8328, 614, -1000,
	4953, -1000, -1000, 544, -1000, 240, 261, 544, -1000, -1000,
	-1000, -62, -1000, 665, 255, 614, 181, -4, -1000, 86,
	-1000, -1000, -1000, 393, 538, 845, 476, -1000, -5, -1000,
	-1000, 7906, -1000, 23, -1000, 176, -1000, 5047, 546, 7906,
	7906, -1000, 106, 5003, -1000, 557, -1000, 6708, -1000, -1000,
	-1000, -1000, -1000, 1873, -75, -75, -65, -65, -65, -65,
	6577, 604, 1393, -48, -48, -75, 1161, 1767, 5997, 6384,
	6184, 21, 21, 21, 21, 75, 75, 75, 75, 8328,
	1826, 476, 180, -1000, -1000, 8328, 8328, -1000, -1000, -1000,
	-1000, 4955, -1000, 435, 253, 241, -1000, 7906, 1475, -1000,
	-1000, -1000, -1000, -1000, 331, -1000, 174, 7906, 172, 1070,
	-1000, 186, 171, 3645, 8328, -1000, 389, 538, 167, 653,
	614, 469, -1000, -5, 476, 1088, 538, 252, 6123, -1000,
	-1000, 138, 546, 7906, -1000, 76, 370, -1000, 103, 94,
	-1000, -1000, -1000, 76, 5954, 240, -1000, 6166, 8328, -1000,
	1695, 5910, -1000, 328, 201, -1000, 166, -1000, 4169, -1000,
	653, 4953, 4431, -1000, -40, 4431, 324, -1000, -1000, 788,
	388, 386, 238, -1000, 783, -1000, 399, -1000, -1000, -1000,
	-50, -1000, 686, 585, -1000, 838, 538, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7906, 546, -1000, 90,
	-1000, -1000, -1000, -1000, -1000, -1000, 6166, 8328, -1000, -1000,
	4169, 4300, 4169, 385, -1000, -1000, -1000, -1000, -1000, -1000,
	3514, 165, -1000, -1000, 245, -63, -1000, 781, -1000, 819,
	86, -1000, -66, -56, -1000, 89, 546, -1000, -1000, 5910,
	4169, -1000, -1000, -1000, -1000, 3383, -1000, 384, 3252, 3121,
	-52, -1000, 776, 8328, -60, -68, -72, 814, 8328, -1000,
	538, -1000, 547, -1000, -1000, 2990, 2859, 323, -1000, -1000,
	-1000, -1000, 199, -1000, -1000, -1000, 743, 8328, 8328, -1000,
	-1000, -1000, 368, 547, -1000, 321, 319, 649, 695, 498,
	-1000, 312, -1000, -1000, 2728, -1000, 741, -74, -1000, -1000,
	235, -1000, -1000, -1000, -1000, 538, 585, 804, -1000, 669,
	-1000, 8328, 614, -59, -1000, 801, -1000, -1000, -1000, 669,
	-1000, 228, -1000, 164, 538, -1000, -1000, 538, 317, -1000,
	728, -1000, -1000, -1000, 162, 2597, 377, -1000, -1000, 2466,
	-1000,
}
var yyPgo = [...]int{

	0, 98, 1172, 41, 38, 37, 456, 1170, 1169, 93,
	217, 1253, 6, 1209, 69, 59, 5, 735, 120, 1167,
	32, 1166, 1165, 1164, 27, 1163, 40, 23, 1161, 1159,
	1158, 1157, 46, 1156, 1155, 26, 1151, 31, 36, 172,
	1150, 713, 34, 1147, 199, 1146, 1145, 35, 1144, 58,
	49, 42, 1143, 1141, 1140, 1139, 1137, 33, 20, 1136,
	1133, 2, 44, 0, 1131, 1130, 1128, 114, 1097, 1096,
	586, 1095, 1094, 43, 19, 1092, 28, 1091, 1090, 1089,
	25, 39, 1088, 1087, 1085, 1084, 1081, 1062, 950, 18,
	22, 14, 1061, 1060, 1057, 13, 218, 1054, 1053, 1052,
	1051, 7, 1050, 1049, 1, 1045, 1043, 1042, 1041, 16,
	1040, 1036, 1034, 29, 21, 1033, 15, 1023, 1020, 48,
	1018, 1010, 1007, 1005, 1000, 999, 998, 996, 994, 993,
	992, 986, 985, 11, 976, 975, 974, 973, 969, 968,
	8, 967, 12, 4, 965, 964, 962, 960, 958, 953,
	952, 951, 949, 948, 947, 946, 945, 944, 943, 940,
	936, 935, 1056, 24, 934, 933, 17, 3, 931, 928,
	927, 926, 822,
}
var yyR1 = [...]int{

	0, 98, 62, 62, 63, 63, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 64, 64, 3,
	3, 3, 3, 65, 65, 4, 4, 4, 4, 66,
	66, 5, 5, 5, 5, 52, 52, 67, 67, 23,
	23, 23, 23, 24, 24, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 85, 85, 60, 60, 86, 86, 87,
	87, 61, 83, 83, 57, 50, 51, 101, 101, 102,
	102, 103, 99, 107, 100, 111, 100, 105, 105, 105,
	105, 106, 106, 110, 112, 112, 108, 108, 113, 113,
	90, 90, 89, 89, 89, 56, 56, 58, 58, 59,
	59, 84, 84, 97, 97, 97, 97, 81, 81, 81,
	114, 114, 55, 55, 77, 77, 78, 78, 53, 53,
	54, 54, 104, 104, 115, 115, 116, 116, 117, 117,
	117, 117, 96, 96, 96, 118, 118, 119, 119, 119,
	119, 68, 68, 26, 26, 26, 69, 69, 69, 69,
	109, 109, 122, 120, 120, 120, 127, 120, 125, 129,
	129, 130, 130, 131, 131, 132, 132, 133, 133, 134,
	137, 137, 138, 138, 136, 135, 135, 139, 139, 128,
	128, 121, 121, 126, 126, 141, 141, 140, 140, 140,
	140, 140, 140, 123, 123, 123, 123, 124, 124, 82,
	82, 80, 80, 79, 79, 142, 142, 144, 144, 146,
	145, 145, 145, 147, 148, 147, 41, 14, 14, 14,
	149, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 150,
	14, 151, 14, 152, 14, 153, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 154, 14, 155, 156, 14,
	157, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 158, 14, 14, 14, 14, 14, 14, 14, 160,
	14, 161, 14, 49, 49, 49, 49, 46, 46, 46,
	46, 45, 45, 1, 76, 76, 75, 75, 75, 75,
	22, 22, 22, 22, 22, 22, 22, 22, 10, 10,
	10, 10, 44, 44, 44, 42, 42, 40, 40, 93,
	93, 94, 48, 48, 48, 159, 159, 159, 95, 95,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 7, 27, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 34, 34, 34,
	34, 28, 28, 28, 28, 28, 28, 28, 163, 163,
	166, 166, 165, 165, 165, 165, 13, 13, 47, 47,
	15, 16, 17, 18, 18, 168, 168, 169, 143, 170,
	170, 172, 171, 167, 167, 167, 39, 39, 43, 43,
	11, 21, 21, 19, 19, 19, 20, 20, 20, 9,
	9, 9, 8, 8, 12, 12, 91, 91, 92, 92,
	92, 38, 38, 88, 88, 74, 74, 37, 37, 37,
	73, 73, 72, 72, 72, 72, 72, 72, 72, 72,
	70, 70, 70, 70, 32, 32, 32, 32, 32, 32,
	33, 33, 33, 36, 36, 36, 36, 36, 36, 36,
	36, 71, 71, 35, 35, 29, 29, 30, 31,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 4,
	3, 5, 4, 3, 4, 4, 2, 3, 1, 1,
	3, 2, 4, 3, 1, 1, 3, 2, 4, 3,
	1, 1, 3, 2, 4, 5, 4, 2, 0, 1,
	1, 1, 4, 1, 2, 3, 5, 8, 3, 5,
	9, 3, 2, 3, 2, 3, 2, 3, 3, 2,
	3, 3, 3, 1, 2, 5, 8, 8, 5, 1,
	6, 3, 3, 0, 9, 0, 4, 1, 0, 1,
	2, 8, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 0, 10, 0, 8, 0, 7, 1, 2, 1,
	2, 0, 2, 1, 0, 2, 0, 2, 1, 3,
	0, 2, 1, 2, 4, 1, 4, 1, 4, 1,
	4, 3, 5, 3, 4, 4, 5, 0, 5, 4,
	1, 1, 1, 4, 0, 4, 0, 5, 0, 2,
	0, 3, 1, 0, 1, 3, 4, 6, 0, 1,
	1, 1, 2, 3, 3, 1, 3, 1, 1, 2,
	2, 3, 1, 1, 2, 4, 3, 5, 1, 3,
	2, 0, 0, 4, 2, 1, 0, 9, 3, 1,
	3, 1, 3, 0, 1, 1, 2, 2, 2, 3,
	1, 3, 1, 1, 3, 4, 3, 0, 1, 1,
	3, 1, 1, 0, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 5, 4, 3,
	1, 0, 1, 3, 1, 2, 1, 4, 3, 0,
	3, 1, 1, 0, 0, 2, 3, 6, 3, 4,
	0, 7, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 0,
	4, 0, 4, 0, 4, 0, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 0, 5, 0, 0, 7,
	0, 5, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 0, 3, 1, 1, 1, 3, 2, 1, 0,
	10, 0, 11, 2, 2, 4, 4, 4, 4, 4,
	4, 4, 3, 1, 0, 4, 3, 4, 1, 2,
	2, 4, 3, 4, 4, 4, 4, 2, 1, 1,
	3, 2, 1, 3, 2, 1, 1, 4, 1, 2,
	0, 2, 0, 2, 1, 0, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 3, 1, 1, 1, 1, 3, 2, 4,
	3, 1, 1, 1, 4, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 2, 2, 3, 1, 1, 3,
	2, 1, 1, 1, 1, 3, 3, 1, 0, 2,
	0, 1, 5, 3, 3, 1, 1, 1, 3, 3,
	1, 1, 1, 5, 1, 2, 0, 0, 4, 4,
	4, 0, 2, 1, 1, 0, 1, 2, 3, 3,
	1, 4, 4, 1, 1, 1, 1, 2, 1, 4,
	4, 1, 1, 4, 0, 1, 1, 1, 4, 4,
	1, 1, 3, 1, 2, 3, 1, 1, 4, 0,
	0, 2, 5, 3, 3, 1, 6, 4, 4, 2,
	2, 2, 1, 2, 1, 4, 3, 3, 6, 3,
	1, 1, 1, 4, 4, 4, 2, 2, 4, 2,
	2, 1, 3, 1, 1, 3, 3, 3, 3,
}
var yyChk = [...]int{

	-1000, -98, -62, -2, -24, -50, -51, 51, 79, 44,
	-52, -25, 10, -99, -100, 38, 119, 7, 21, 20,
	23, 30, 34, 35, 39, -49, 46, 98, 19, 14,
	-13, 48, 25, 27, 121, 40, 43, 36, -1, -105,
	-110, 97, -15, -14, 37, 52, 99, 53, 100, 54,
	-18, 59, 92, -17, 104, 105, 130, 129, 131, 132,
	-47, -41, 123, -36, 107, 108, 109, 110, 111, 112,
	113, 6, 133, -28, -46, -45, 118, 96, -19, 91,
	49, 50, 4, 5, 84, 85, 86, 11, -34, -31,
	-6, 117, 74, 62, 18, 60, 125, -20, -21, -22,
	-29, -63, 82, -10, 8, 9, 66, 67, 81, 63,
	64, 65, 80, -9, -88, -43, -11, -39, -8, 134,
	12, 123, -63, 119, 82, 10, -64, 37, 38, -3,
	-63, 82, 121, 135, 122, 10, -67, -47, 123, -47,
	-24, -1, 79, 123, -47, 121, -13, 97, 98, 121,
	-13, 121, -14, -18, -13, 121, -68, -26, 12, 134,
	-69, -1, 12, -82, -13, 121, 149, 150, 87, 89,
	88, 151, 128, 152, 163, 130, 129, 164, 167, 165,
	166, 161, 162, 155, 156, 153, 154, 157, 158, 159,
	160, 90, 127, 123, 123, 123, 119, -13, 10, -101,
	128, 10, 10, -14, -18, -13, 52, 52, 136, 137,
	138, 139, 148, 140, 141, 142, 143, 144, 145, 146,
	147, 123, -13, 104, 105, -17, -18, -63, 79, 82,
	-10, -11, 98, -17, -13, -13, -13, -13, -41, -13,
	-49, -13, -13, -13, -13, -13, -13, -13, -48, 123,
	-47, -158, 125, 125, -159, 17, -70, -32, 12, 76,
	77, -13, 57, -42, -10, -40, -63, 79, 82, -20,
	-9, -88, -11, 123, 123, -13, -13, 123, -13, -13,
	125, -70, 17, 17, 75, -70, 125, 123, -73, -72,
	-13, 128, 125, 125, 82, -96, 123, -63, 78, 125,
	119, -9, 134, 78, -96, 119, 124, 121, 119, -62,
	-63, 121, 135, -65, -4, -63, 82, -66, -5, -63,
	82, 29, -63, 10, 136, -23, 120, -24, -50, -51,
	51, -24, 122, -55, -24, 122, 21, -101, -80, -79,
	-13, -97, 119, 122, 121, 121, 121, 121, 121, 135,
	-15, 119, -18, 121, 135, -101, 136, 121, 135, -150,
	-151, -152, -153, -13, -13, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -13, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -42, -155, 122, -83, -57, -18,
	-18, -14, -84, 10, -67, 121, 121, 10, -160, -106,
	55, -111, 58, -13, 128, -13, -13, -13, -13, -13,
	-13, -13, -13, -13, -13, -13, -13, -74, -37, -18,
	59, 82, -63, 78, 78, 124, 124, 124, 124, -13,
	-12, -13, -12, 118, -32, -32, 17, 125, 57, -13,
	11, -18, -91, -92, -39, -38, -9, -88, 10, 119,
	-95, -96, 78, 82, -63, 57, -9, 78, -71, -35,
	-18, -14, -18, -14, -13, -12, 117, 75, 75, -12,
	-73, 126, -166, 135, 58, -16, -18, -12, -12, 10,
	124, -118, -49, -119, -14, -18, 128, 83, -96, -38,
	-39, 10, 52, -12, -13, -38, -39, 10, -13, 121,
	-62, 120, -96, -3, 121, 135, 29, -63, 121, 135,
	29, -63, 10, 29, 136, -27, -162, -6, -30, -63,
	79, 82, 60, 125, -7, 62, -164, 18, 74, -10,
	131, 132, 130, 129, 123, 123, -77, -67, -67, -47,
	121, 135, -81, 121, -81, 121, -26, -13, 12, -161,
	-27, -13, -13, -13, -13, -13, -13, -157, 124, 135,
	29, 29, 124, 135, 136, 120, -103, 123, -107, -44,
	-63, 79, 82, -112, 55, -14, -18, -18, 91, 124,
	135, 123, -63, -154, 126, 126, -33, 10, 13, 12,
	10, 120, 125, 120, -167, -171, -170, -172, 125, 119,
	-9, -13, -39, -63, -91, -39, 124, 135, 124, 124,
	124, 126, 126, 124, -13, 128, -13, 128, 126, 126,
	124, 135, 124, -16, -13, -96, -96, 126, 120, -96,
	-96, 120, 120, -4, 10, 29, -5, 10, 29, 10,
	-27, 125, 130, 129, 164, 167, 165, 166, 151, 128,
	152, 161, 162, 163, 88, 89, 87, 150, 149, 155,
	156, 153, 154, 157, 159, 158, 160, 127, 82, -63,
	123, -163, -165, -162, 17, 78, -162, -162, -162, -162,
	-162, 124, -53, 93, 94, -78, 22, 121, -80, -13,
	120, 32, 33, -81, 31, -81, 120, 136, 123, 122,
	-13, 121, -57, -89, -18, 128, 59, -89, -59, -24,
	122, 10, -27, -85, 41, 123, -104, -115, -116, -117,
	60, 61, -44, -108, 56, 82, -63, 119, -113, -44,
	-42, 136, -37, -74, -147, -148, 126, -13, -168, 125,
	125, -96, -12, -13, 120, -93, -35, 58, -16, -16,
	-119, 10, 10, -162, -162, -162, -162, -162, -162, -162,
	-162, -162, -162, -162, -162, -162, -162, -162, -162, -162,
	-162, -162, -162, -162, -162, -162, -162, -162, -162, 122,
	-162, -63, -163, 126, -166, 135, 58, 10, 52, 124,
	121, -47, -24, -54, 93, 94, 121, 121, -13, -114,
	122, 121, 120, 121, 31, -27, -104, -156, -90, 58,
	-18, 123, -90, -67, 136, -60, 42, 123, -104, 124,
	135, -101, 119, -113, -63, -109, 135, -149, -13, 124,
	-145, -144, -142, 125, -143, 57, 126, -143, -12, -12,
	126, 120, -94, 57, -13, 128, 126, -162, 122, 124,
	-162, -162, -24, 95, -47, 122, -80, -114, -67, 121,
	124, -13, 124, -89, -74, 124, 28, -27, 119, -44,
	124, -76, 44, -116, -102, 83, -109, 120, -120, -121,
	-124, -125, -126, -141, 47, 38, 44, -140, 103, 102,
	101, 98, 99, 100, -44, -95, 125, -146, -143, -12,
	-91, 120, 126, 126, -91, -16, -162, 58, 121, 122,
	-67, 124, -67, -76, -58, -24, 122, 124, -58, 121,
	-67, 12, 119, 119, 123, 12, 120, -122, 121, 135,
	-1, -140, 10, -129, -44, -12, -142, 126, -169, -162,
	-67, -56, -24, 122, 119, -67, 120, 124, -67, -67,
	-75, 12, 128, 136, -123, 12, 10, -101, 136, -130,
	135, 121, 119, 126, -167, -67, -67, 26, 119, 120,
	120, 124, 135, 12, -27, 121, 135, 136, 136, 10,
	-27, -44, -131, -132, -133, -134, -135, -136, -138, -44,
	10, 24, 120, 121, -67, 12, 128, 12, -27, -27,
	-127, 120, -133, 121, 121, 45, 29, 78, 121, 120,
	12, 136, 123, -137, -44, -139, -140, 10, -86, -87,
	-61, 41, -27, -104, 135, 10, -61, 123, 124, -44,
	-44, -128, 121, 119, 12, -67, 124, 120, 119, -67,
	120,
}
var yyDef = [...]int{

	3, -2, 1, 2, 6, 7, 8, 0, 0, 0,
	0, 43, 4, 85, 86, 0, 38, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 63,
	0, 0, 0, 0, 69, 0, 0, 0, 87, 0,
	0, 318, 446, 447, 333, 97, 0, 99, 0, 103,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 294, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 362, 311, 313, 314, 315, 365, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 432, 433,
	434, 0, 0, 437, 372, 0, 500, 473, 474, 475,
	427, -2, 0, 0, 370, 371, 373, 374, 375, 376,
	377, 378, 379, -2, 0, 478, 0, 0, 481, 493,
	482, 0, 0, 3, 0, 4, 0, 0, 0, 18,
	19, 0, 16, 0, 44, 0, 0, 0, 0, 0,
	0, 87, 0, 221, 0, 52, 0, 318, 348, 54,
	0, 56, 447, -2, 0, 59, 0, 162, 163, 0,
	0, 87, 168, 0, 220, 64, 259, 261, 263, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 38, 0, 0, 319,
	88, 101, 95, -2, -2, 0, 98, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 499, 242, 255, 257, 256, 452, 349, 0, 0,
	0, 0, 348, 258, 280, 281, 282, 283, 294, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 310, 0,
	364, 0, 484, 484, 0, 366, 367, 512, 514, 0,
	0, 317, 0, 368, 355, 356, 349, 0, 0, 358,
	-2, 0, 0, 0, 0, 526, 527, 0, 529, 530,
	484, 0, 0, 0, 381, 0, 484, 500, 0, 440,
	505, 0, 484, 484, 0, 340, 0, -2, 0, 484,
	0, -2, 494, 0, 347, 0, 0, 10, 3, 0,
	-2, 13, 0, 0, 24, 25, 0, 0, 30, 31,
	0, 0, 21, 0, 0, 37, 45, 39, 40, 41,
	0, 134, 38, 48, 132, 38, 0, 319, 0, 222,
	224, 51, 127, 127, 53, 55, 57, 58, 60, 0,
	164, 0, 450, 61, 0, 321, 0, 62, 0, 0,
	0, 0, 0, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, -2, -2, -2, -2,
	-2, -2, -2, -2, 292, 0, 300, 0, 82, 84,
	-2, 447, 0, 0, 0, 71, 72, 91, 0, 93,
	0, 104, 0, 238, 0, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 0, 496, 497,
	0, 0, 351, 0, 0, 295, 448, 449, 363, 312,
	0, 485, 0, 316, 513, 510, 511, 0, 0, 0,
	431, 0, -2, 486, 487, 490, 466, 0, 491, 0,
	236, 369, 0, 0, 351, 0, 477, 0, 0, 531,
	-2, -2, -2, 447, 0, 0, 435, 380, 436, 0,
	0, 332, 501, 441, 0, 509, 451, 0, 0, 5,
	152, 0, 0, 155, -2, -2, 0, 0, 342, 0,
	468, -2, 538, 0, 0, 0, 469, -2, 0, 9,
	0, 12, 341, 17, 14, 0, 0, 27, 15, 0,
	0, 33, 20, 0, 0, 36, 383, 384, 385, -2,
	0, 0, 0, 438, 391, 392, 393, 372, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 136, 0, 0,
	221, 0, 0, 127, 0, 127, 161, 0, 166, 0,
	169, 219, 260, 262, 264, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, -2, 106, 102,
	352, 0, 0, 0, 0, -2, -2, 239, 0, 0,
	499, 499, 350, -2, 328, 327, 0, 520, 521, 522,
	516, 517, 0, 519, 456, 463, 464, 0, 484, 0,
	467, 0, 468, 350, 360, 469, 523, 0, 524, 525,
	528, 330, 329, 331, 503, 0, 504, 0, 471, 472,
	153, 0, 154, 159, 160, 343, 344, 479, 480, 345,
	346, 483, 11, 23, 26, 0, 29, 32, 0, 22,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	438, 0, 440, 445, 0, 0, 401, 402, 424, 425,
	0, 0, 46, 0, 0, 140, 0, 49, 0, 223,
	123, 0, 0, 0, 0, 0, 165, 0, -2, 298,
	301, 65, 83, 110, 112, 0, 0, 110, 68, 119,
	38, 0, 121, 75, 0, -2, 0, 142, 144, 87,
	149, 150, 151, 0, 0, 0, 354, 171, 105, 108,
	240, 0, 495, 0, 296, 0, 515, 0, 453, 484,
	484, 462, 0, 0, 492, 357, 532, 0, 507, 508,
	156, 28, 34, 0, 395, 396, 397, 398, 399, 400,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	0, -2, 0, 390, 439, 441, 0, 382, 537, 426,
	42, 0, 139, 0, 0, 0, 133, 221, 0, 38,
	130, 131, 124, 125, 0, 167, 0, 0, 0, 0,
	113, 499, 0, 0, 0, 70, 0, 0, 0, 334,
	148, 89, 171, 107, 353, 203, 0, 368, 237, 498,
	235, -2, 232, 484, 226, 0, 0, 455, 0, 0,
	488, 489, 359, 0, 502, 0, 394, 422, 0, 389,
	443, 444, 135, 0, 0, 38, 0, 38, 129, 126,
	334, 299, 0, 111, 0, 0, 0, 122, 38, 0,
	0, 0, 0, 145, 0, 90, 203, 96, 170, 172,
	0, 175, 0, -2, 202, 0, 0, 205, 207, 208,
	209, 210, 211, 212, 109, 241, 484, 0, 225, 0,
	457, 518, 460, 459, 361, 506, 423, 0, 47, 38,
	141, 0, 128, 0, 66, 117, 38, 114, 67, 120,
	0, 0, 38, 38, 0, 146, 94, 0, 174, 0,
	87, 206, 0, 0, 179, 0, 230, 228, -2, 442,
	137, 50, 115, 38, 38, 0, 76, 0, 0, 0,
	0, 338, 0, 0, 0, 215, 0, 0, 0, 178,
	0, 181, 183, 227, 458, 0, 0, 0, 38, 92,
	320, 335, 0, 339, 147, 173, 0, 0, 0, 176,
	218, 180, 0, 184, 185, 0, 0, 193, 0, 0,
	-2, 0, 322, 118, 0, 336, 0, 213, 216, 217,
	0, 182, 186, 187, 188, 0, 197, 0, 116, 78,
	337, 0, -2, 189, 190, 0, -2, 194, 74, 77,
	79, 0, 214, 0, 0, 195, 80, 0, 0, 191,
	0, 177, 199, 38, 0, 0, 0, 200, 38, 0,
	81,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:227
		{
			rootnode = stmt.NewStmtList(yyDollar[1].list)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:233
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:234
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:239
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:246
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:256
		{
			yyVAL.node = yyDollar[1].node
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:258
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:260
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:262
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 10:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:268
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 11:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:278
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 12:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:288
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 13:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:294
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 14:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:300
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:310
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 16:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:320
		{
			yyVAL.node = yyDollar[1].node
		}
	case 17:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:325
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:327
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:332
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:342
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:355
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 22:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:365
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:381
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:383
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:388
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:398
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:411
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:421
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:437
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:439
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:444
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:454
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:467
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:477
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 35:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:493
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)

			yyVAL.node = yyDollar[1].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:509
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(constant, yyDollar[2].token.Comments())

			constList := []node.Node{constant}

			yyVAL.node = stmt.NewConstList(constList)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:528
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:530
		{
			yyVAL.list = []node.Node{}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:536
		{
			yyVAL.node = yyDollar[1].node
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:538
		{
			yyVAL.node = yyDollar[1].node
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:540
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:542
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:552
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:554
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(label, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:567
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:573
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			if yyDollar[5].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:587
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[4].list))

			yyVAL.node = stmt.NewIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:596
		{
			yyVAL.node = stmt.NewWhile(yyDollar[1].token, yyDollar[2].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:602
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 50:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:608
		{
			yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:614
		{
			yyVAL.node = stmt.NewSwitch(yyDollar[1].token, yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:620
		{
			yyVAL.node = stmt.NewBreak(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:626
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:632
		{
			yyVAL.node = stmt.NewContinue(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:638
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:644
		{
			yyVAL.node = stmt.NewReturn(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:650
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:656
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:662
		{
			yyVAL.node = yyDollar[1].node
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:664
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:670
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:676
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:682
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:688
		{
			yyVAL.node = yyDollar[1].node
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:690
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:696
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:706
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:716
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:722
		{
			yyVAL.node = stmt.NewNop()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:728
		{
			yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)

			if yyDollar[6].node == nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:740
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:746
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(label, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:759
		{
			yyVAL.list = []node.Node{}
		}
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:761
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(catch, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(catch, yyDollar[1].token.Comments())

			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:779
		{
			yyVAL.node = nil
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:781
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:790
		{
			yyVAL.list = yyDollar[1].list
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:792
		{
			yyVAL.list = []node.Node{}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:797
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:799
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:804
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:821
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:823
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:828
		{
			yyVAL.node = yyDollar[1].node
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:832
		{
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:836
		{
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:840
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:841
		{
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:845
		{
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:846
		{
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:850
		{
		}
	case 92:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:852
		{
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:857
		{
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:861
		{
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:863
		{
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:867
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:872
		{
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:873
		{
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:874
		{
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:875
		{
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:879
		{
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:880
		{
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:884
		{
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:898
		{
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:899
		{
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:904
		{
			yyVAL.foreachVariable = foreachVariable{nil, false}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:906
		{
			yyVAL.foreachVariable = yyDollar[2].foreachVariable
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:911
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:913
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:915
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:925
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:927
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:937
		{
			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:939
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:949
		{
			yyVAL.node = yyDollar[1].node
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:951
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:961
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(name, yyDollar[1].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(constant, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{constant}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:973
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, constant)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:989
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:991
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:993
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:995
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1001
		{
			yyVAL.list = []node.Node{}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1003
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			positions.AddPosition(_case, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1010
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			positions.AddPosition(_default, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1027
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1029
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1039
		{
			yyVAL.list = []node.Node{}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1041
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1053
		{
			yyVAL.list = []node.Node{}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1055
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[5].list))

			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1070
		{
			yyVAL.node = nil
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1072
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1082
		{
			yyVAL.node = nil
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1084
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[3].list))

			yyVAL.node = stmt.NewAltElse(stmts)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1108
		{
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1110
		{
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1115
		{
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1116
		{
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1117
		{
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1118
		{
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1124
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1125
		{
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1126
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1136
		{
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1137
		{
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1138
		{
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1139
		{
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1144
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1146
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1152
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1162
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1168
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1178
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[3].token))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1195
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1212
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[1].token))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1229
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1256
		{
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1259
		{
		}
	case 177:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:1261
		{
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1269
		{
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1270
		{
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1294
		{
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1298
		{
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1299
		{
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1303
		{
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1304
		{
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1308
		{
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1312
		{
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1313
		{
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1317
		{
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1318
		{
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1322
		{
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1323
		{
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1327
		{
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1328
		{
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1332
		{
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1333
		{
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1337
		{
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1338
		{
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1342
		{
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1343
		{
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1344
		{
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1345
		{
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1346
		{
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1347
		{
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1351
		{
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1352
		{
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1353
		{
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1354
		{
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1358
		{
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1359
		{
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1364
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1366
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1372
		{
			yyVAL.list = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1374
		{
			yyVAL.list = yyDollar[1].list
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1379
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1381
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1385
		{
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1386
		{
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1390
		{
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1391
		{
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1395
		{
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1395
		{
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1396
		{
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1397
		{
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1401
		{
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1402
		{
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1403
		{
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1408
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 237:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1423
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign_op.NewAssign(list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1432
		{
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1433
		{
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1434
		{
		}
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1434
		{
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1435
		{
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1436
		{
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1437
		{
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1438
		{
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1439
		{
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1440
		{
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1441
		{
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1442
		{
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1443
		{
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1444
		{
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1445
		{
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1446
		{
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1447
		{
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1448
		{
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1449
		{
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1450
		{
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1451
		{
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1452
		{
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1452
		{
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1453
		{
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1453
		{
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1454
		{
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1454
		{
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1455
		{
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1455
		{
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1456
		{
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1457
		{
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1458
		{
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1459
		{
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1460
		{
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1461
		{
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1462
		{
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1463
		{
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1464
		{
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1465
		{
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1466
		{
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1467
		{
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1468
		{
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1469
		{
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1470
		{
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1471
		{
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1472
		{
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1473
		{
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1474
		{
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1475
		{
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1476
		{
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1477
		{
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1478
		{
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1479
		{
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1480
		{
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1481
		{
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1482
		{
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1484
		{
			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1485
		{
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1485
		{
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1486
		{
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1487
		{
		}
	case 299:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1488
		{
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1489
		{
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1490
		{
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1491
		{
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1492
		{
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1493
		{
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1494
		{
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1495
		{
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1496
		{
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1497
		{
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1498
		{
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1499
		{
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1500
		{
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1500
		{
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1501
		{
			yyVAL.node = yyDollar[1].node
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1502
		{
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1503
		{
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1504
		{
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1505
		{
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1506
		{
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1507
		{
		}
	case 320:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:1509
		{
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1510
		{
		}
	case 322:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php5/php5.y:1512
		{
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1516
		{
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1517
		{
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1518
		{
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1519
		{
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1524
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1530
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1536
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(str, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(str, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[str])
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1546
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1555
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1561
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1570
		{
			yyVAL.token = yyDollar[1].token
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1575
		{
			yyVAL.list = []node.Node{}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1577
		{
			yyVAL.list = yyDollar[3].list
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1582
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1598
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1614
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1630
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(identifier, yyDollar[2].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1648
		{
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1649
		{
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1650
		{
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1651
		{
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1652
		{
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1653
		{
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1654
		{
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1655
		{
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1660
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1666
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1672
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1678
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1687
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1693
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1699
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1708
		{
			yyVAL.node = yyDollar[1].node
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1710
		{
			yyVAL.node = yyDollar[1].node
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1715
		{
			yyVAL.node = yyDollar[1].node

			for _, f := range yyDollar[3].objectPropertyList {
				switch f.fetchType {
				case arrayFetchType:
					yyVAL.node = expr.NewArrayDimFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				case propertyFetchType:
					yyVAL.node = expr.NewPropertyFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				}
			}

			for _, f := range yyDollar[4].objectPropertyList {
				switch f.fetchType {
				case arrayFetchType:
					yyVAL.node = expr.NewArrayDimFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				case propertyFetchType:
					yyVAL.node = expr.NewPropertyFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				}
			}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1745
		{
			yyVAL.node = yyDollar[1].node
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1751
		{
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, yyDollar[2].objectPropertyList...)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1753
		{
			yyVAL.objectPropertyList = []objectProperty{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1759
		{
			yyVAL.objectPropertyList = yyDollar[2].objectPropertyList
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1764
		{
			yyVAL.node = nil
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1766
		{
			yyVAL.node = nil
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1768
		{
			yyVAL.node = yyDollar[1].node
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1772
		{
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1773
		{
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1774
		{
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1779
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1781
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1786
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1792
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1798
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1804
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1810
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1816
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1822
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1828
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1834
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1840
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1846
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)) /* TODO: mark as Heredoc*/
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1851
		{
			yyVAL.node = scalar.NewEncapsed(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1860
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1872
		{
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1876
		{
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1877
		{
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1878
		{
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1879
		{
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1880
		{
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1881
		{
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1882
		{
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1883
		{
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1884
		{
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1885
		{
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1889
		{
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1890
		{
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1891
		{
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1892
		{
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1893
		{
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1894
		{
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1895
		{
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1896
		{
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1897
		{
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1898
		{
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1899
		{
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1900
		{
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1901
		{
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1902
		{
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1903
		{
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1904
		{
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1905
		{
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1906
		{
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1907
		{
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1908
		{
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1909
		{
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1910
		{
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1911
		{
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1912
		{
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1913
		{
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1914
		{
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1915
		{
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1916
		{
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1917
		{
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1918
		{
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1919
		{
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1920
		{
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1921
		{
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1926
		{
			yyVAL.node = yyDollar[1].node
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1928
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1934
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1940
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1949
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1959
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1961
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1963
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1965
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1971
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1977
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1985
		{
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1986
		{
		}
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1995
		{
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1996
		{
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1997
		{
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1998
		{
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2003
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2005
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2010
		{
			yyVAL.node = yyDollar[2].node
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2012
		{
			yyVAL.node = yyDollar[2].node
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2018
		{
			yyVAL.node = yyDollar[1].node
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2026
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2033
		{
			yyVAL.node = yyDollar[1].node
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2040
		{
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2042
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2046
		{
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2047
		{
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2052
		{
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2052
		{
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2056
		{
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2057
		{
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2061
		{
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2062
		{
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2066
		{
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2067
		{
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2068
		{
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2073
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2075
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2088
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2094
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2104
		{
			yyVAL.node = yyDollar[1].node
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2109
		{
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2111
		{
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2115
		{
			yyVAL.node = yyDollar[1].node
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2116
		{
			yyVAL.node = yyDollar[1].node
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2117
		{
			yyVAL.node = yyDollar[1].node
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2123
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2125
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2135
		{
			yyVAL.node = yyDollar[1].node
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2140
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2146
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2152
		{
			yyVAL.node = yyDollar[1].node
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2158
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2168
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2176
		{
			yyVAL.node = nil
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2177
		{
			yyVAL.node = yyDollar[1].node
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2183
		{
			yyVAL.objectPropertyList = yyDollar[1].objectPropertyList
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2185
		{
			op := objectProperty{yyDollar[1].node, propertyFetchType}
			yyVAL.objectPropertyList = []objectProperty{op}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2193
		{
			op := objectProperty{yyDollar[3].node, arrayFetchType}
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, op)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2198
		{
			op := objectProperty{yyDollar[3].node, arrayFetchType}
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, op)
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2203
		{
			op := objectProperty{yyDollar[1].node, propertyFetchType}
			yyVAL.objectPropertyList = []objectProperty{op}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2211
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2217
		{
			yyVAL.node = yyDollar[2].node
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2222
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(n, yyDollar[1].token.Comments())

			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2230
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(n, yyDollar[2].token.Comments())

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)

			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2245
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2247
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2253
		{
			yyVAL.node = yyDollar[1].node
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2255
		{
			yyVAL.node = expr.NewList(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2261
		{
			yyVAL.node = nil
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2267
		{
			yyVAL.list = nil
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2269
		{
			yyVAL.list = yyDollar[1].list
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2274
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2282
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2290
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2298
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2306
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[6].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2314
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			comments.AddComments(arrayItem, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2322
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2330
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[2].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(arrayItem, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{arrayItem}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2341
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2343
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2350
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2352
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2362
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2372
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2385
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(fetch, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(fetch, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2401
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2407
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2421
		{
			yyVAL.node = yyDollar[2].node
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2426
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2432
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2444
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2457
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2463
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2469
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2475
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2481
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2487
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2493
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2499
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2508
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2510
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2514
		{
			yyVAL.node = yyDollar[1].node
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2515
		{
			yyVAL.node = yyDollar[1].node
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2520
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2530
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2543
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2556
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	}
	goto yystack /* stack new state and value */
}
