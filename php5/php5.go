//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	//    "fmt"
	//    "strings"
	"strconv"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign_op"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"

//    "github.com/z7zmey/php-parser/node/expr/binary_op"
//    "github.com/z7zmey/php-parser/node/expr/cast"
)

//line php5/php5.y:22
type yySymType struct {
	yys                     int
	node                    node.Node
	token                   token.Token
	boolWithToken           boolWithToken
	list                    []node.Node
	foreachVariable         foreachVariable
	nodesWithEndToken       *nodesWithEndToken
	simpleIndirectReference simpleIndirectReference
	objectPropertyList      []objectProperty
	//    str string
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:2803

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	104, 447,
	105, 447,
	-2, 445,
	-1, 101,
	78, 344,
	-2, 423,
	-1, 113,
	78, 465,
	123, 461,
	-2, 471,
	-1, 153,
	104, 447,
	105, 447,
	-2, 445,
	-1, 203,
	121, 318,
	124, 318,
	-2, 442,
	-1, 204,
	104, 447,
	105, 447,
	121, 319,
	124, 319,
	-2, 445,
	-1, 270,
	78, 465,
	-2, 471,
	-1, 297,
	78, 346,
	-2, 425,
	-1, 301,
	123, 462,
	-2, 472,
	-1, 310,
	78, 345,
	-2, 424,
	-1, 376,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 279,
	-1, 377,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 280,
	-1, 378,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 281,
	-1, 379,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 282,
	-1, 380,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 283,
	-1, 381,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 284,
	-1, 382,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 285,
	-1, 383,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 286,
	-1, 390,
	104, 447,
	105, 447,
	-2, 445,
	-1, 443,
	123, 456,
	-2, 460,
	-1, 461,
	104, 447,
	105, 447,
	124, 528,
	135, 528,
	-2, 445,
	-1, 462,
	124, 529,
	135, 529,
	-2, 442,
	-1, 463,
	104, 447,
	105, 447,
	-2, 445,
	-1, 485,
	124, 154,
	135, 154,
	-2, 442,
	-1, 486,
	104, 447,
	105, 447,
	124, 155,
	135, 155,
	-2, 445,
	-1, 492,
	123, 486,
	-2, 530,
	-1, 498,
	123, 486,
	-2, 531,
	-1, 520,
	78, 344,
	-2, 381,
	-1, 567,
	124, 140,
	-2, 145,
	-1, 568,
	124, 140,
	-2, 145,
	-1, 578,
	121, 320,
	124, 320,
	-2, 442,
	-1, 579,
	104, 447,
	105, 447,
	121, 321,
	124, 321,
	-2, 445,
	-1, 586,
	57, 229,
	125, 229,
	-2, 228,
	-1, 672,
	78, 346,
	-2, 383,
	-1, 701,
	124, 140,
	-2, 145,
	-1, 773,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 409,
	-1, 774,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 410,
	-1, 775,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 411,
	-1, 776,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 412,
	-1, 777,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 413,
	-1, 778,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 414,
	-1, 779,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 415,
	-1, 780,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 416,
	-1, 783,
	78, 345,
	-2, 382,
	-1, 832,
	37, 199,
	-2, 196,
	-1, 848,
	57, 224,
	-2, 226,
	-1, 947,
	123, 456,
	-2, 460,
	-1, 977,
	29, 187,
	-2, 4,
	-1, 991,
	124, 140,
	-2, 145,
	-1, 1010,
	121, 191,
	-2, 193,
}

const yyPrivate = 57344

const yyLast = 8422

var yyAct = [...]int{

	101, 1020, 836, 718, 971, 597, 431, 443, 724, 122,
	130, 851, 849, 451, 706, 199, 113, 720, 418, 730,
	801, 473, 810, 516, 922, 338, 674, 460, 891, 327,
	295, 419, 4, 576, 388, 97, 263, 318, 157, 314,
	136, 60, 329, 543, 2, 6, 446, 129, 257, 140,
	288, 328, 484, 644, 5, 227, 227, 476, 25, 137,
	139, 178, 43, 144, 42, 989, 943, 449, 942, 120,
	965, 958, 191, 986, 939, 936, 934, 925, 896, 816,
	266, 492, 941, 120, 987, 1016, 846, 152, 583, 498,
	935, 120, 897, 114, 733, 648, 270, 583, 978, 700,
	623, 609, 565, 297, 203, 644, 515, 191, 652, 646,
	645, 624, 610, 250, 644, 269, 582, 356, 646, 645,
	324, 240, 731, 493, 200, 310, 821, 583, 315, 319,
	787, 301, 322, 664, 665, 662, 663, 666, 668, 667,
	669, 654, 655, 656, 647, 649, 650, 648, 304, 178,
	654, 655, 656, 647, 649, 650, 648, 337, 509, 120,
	227, 644, 120, 563, 559, 646, 645, 331, 309, 334,
	644, 505, 510, 271, 564, 560, 450, 355, 169, 191,
	117, 177, 179, 180, 178, 506, 141, 158, 542, 38,
	450, 119, 266, 357, 227, 474, 1003, 240, 450, 656,
	647, 649, 650, 648, 946, 119, 353, 358, 270, 647,
	649, 650, 648, 119, 161, 348, 192, 172, 176, 175,
	354, 311, 227, 911, 350, 910, 904, 269, 384, 349,
	423, 857, 961, 852, 103, 312, 785, 394, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 391, 132, 300,
	433, 227, 738, 1032, 630, 299, 1027, 622, 621, 455,
	615, 614, 133, 742, 125, 125, 120, 120, 588, 447,
	602, 119, 587, 472, 302, 271, 601, 466, 457, 230,
	230, 741, 227, 470, 452, 595, 125, 293, 120, 478,
	479, 850, 439, 292, 435, 436, 494, 286, 240, 159,
	280, 253, 1004, 130, 264, 447, 252, 508, 1015, 956,
	447, 512, 919, 38, 709, 520, 882, 879, 489, 877,
	436, 435, 435, 866, 436, 161, 462, 464, 471, 4,
	823, 503, 191, 228, 228, 490, 229, 229, 962, 820,
	496, 684, 6, 501, 294, 483, 448, 520, 625, 485,
	504, 5, 232, 232, 616, 228, 612, 428, 229, 991,
	438, 426, 306, 538, 933, 917, 539, 581, 540, 296,
	551, 176, 175, 351, 232, 191, 138, 545, 547, 819,
	813, 701, 448, 708, 230, 296, 673, 448, 119, 119,
	584, 572, 568, 572, 567, 125, 227, 120, 536, 571,
	294, 577, 287, 181, 182, 174, 177, 179, 180, 178,
	119, 803, 802, 585, 176, 175, 264, 342, 230, 277,
	343, 872, 125, 274, 120, 273, 125, 249, 120, 221,
	195, 447, 447, 445, 194, 193, 143, 308, 121, 307,
	1024, 386, 1023, 1012, 489, 606, 230, 134, 174, 177,
	179, 180, 178, 1001, 607, 603, 578, 694, 695, 995,
	447, 490, 496, 447, 228, 447, 994, 229, 927, 491,
	916, 421, 694, 695, 497, 876, 805, 799, 227, 798,
	792, 704, 690, 232, 546, 230, 38, 544, 541, 500,
	396, 228, 346, 155, 229, 267, 992, 315, 268, 258,
	909, 319, 596, 1033, 437, 125, 520, 983, 448, 448,
	232, 628, 629, 672, 232, 520, 230, 632, 633, 119,
	953, 4, 520, 520, 520, 520, 520, 932, 887, 643,
	885, 870, 726, 575, 6, 626, 636, 448, 639, 305,
	448, 196, 448, 5, 434, 804, 119, 223, 224, 530,
	119, 227, 227, 227, 796, 797, 520, 691, 572, 572,
	693, 572, 725, 259, 260, 729, 890, 710, 294, 577,
	641, 38, 266, 638, 227, 227, 728, 124, 696, 715,
	698, 530, 256, 712, 90, 705, 686, 687, 270, 671,
	454, 422, 124, 735, 727, 491, 497, 998, 744, 125,
	125, 125, 678, 458, 467, 734, 503, 269, 732, 227,
	453, 227, 425, 125, 123, 840, 841, 842, 839, 838,
	837, 743, 677, 294, 605, 424, 294, 445, 748, 608,
	230, 125, 977, 303, 298, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 783, 462, 520, 271, 750, 752, 751, 125,
	573, 320, 316, 574, 281, 285, 468, 485, 38, 514,
	284, 722, 723, 811, 511, 131, 852, 786, 258, 860,
	784, 520, 572, 507, 321, 808, 127, 128, 456, 227,
	573, 573, 262, 574, 574, 570, 402, 794, 400, 258,
	207, 996, 230, 61, 807, 38, 38, 892, 793, 825,
	206, 818, 572, 814, 1021, 717, 44, 822, 997, 644,
	843, 562, 294, 646, 645, 336, 824, 294, 855, 856,
	530, 131, 854, 1031, 815, 53, 294, 294, 1014, 530,
	789, 468, 259, 260, 988, 162, 530, 530, 530, 530,
	530, 666, 668, 667, 669, 654, 655, 656, 647, 649,
	650, 648, 520, 259, 260, 834, 238, 258, 520, 520,
	44, 835, 437, 963, 833, 230, 230, 230, 931, 929,
	530, 895, 790, 806, 694, 695, 549, 1017, 258, 1011,
	225, 233, 227, 437, 227, 966, 264, 520, 230, 230,
	572, 874, 572, 869, 937, 873, 880, 900, 886, 697,
	694, 695, 881, 125, 754, 899, 572, 753, 871, 888,
	884, 714, 875, 642, 902, 840, 841, 842, 839, 838,
	837, 259, 260, 230, 640, 230, 637, 907, 903, 258,
	908, 906, 593, 227, 283, 258, 520, 893, 912, 447,
	282, 469, 259, 260, 513, 452, 480, 447, 397, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 921, 926, 530, 923,
	393, 944, 923, 918, 938, 920, 520, 323, 945, 518,
	913, 202, 284, 259, 260, 201, 928, 198, 930, 259,
	260, 135, 600, 598, 258, 530, 599, 520, 947, 255,
	520, 740, 572, 230, 572, 590, 448, 592, 591, 951,
	968, 518, 976, 979, 448, 675, 527, 906, 949, 520,
	964, 550, 398, 967, 254, 954, 520, 251, 558, 517,
	809, 572, 385, 959, 586, 993, 362, 361, 360, 976,
	359, 844, 984, 737, 736, 905, 847, 848, 832, 990,
	520, 1009, 572, 980, 981, 1006, 975, 572, 259, 260,
	1010, 1007, 38, 974, 973, 1008, 972, 970, 969, 940,
	901, 1, 889, 1005, 1022, 341, 530, 572, 898, 191,
	859, 1026, 530, 530, 1002, 1025, 747, 444, 572, 482,
	401, 894, 831, 445, 828, 569, 1029, 719, 1019, 1018,
	716, 445, 392, 387, 163, 339, 230, 688, 230, 537,
	960, 530, 289, 459, 160, 156, 192, 172, 176, 175,
	317, 313, 38, 126, 830, 1028, 829, 827, 399, 39,
	721, 14, 13, 817, 1034, 711, 950, 333, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 230, 795, 685,
	530, 10, 248, 74, 75, 38, 115, 38, 265, 63,
	518, 88, 589, 89, 519, 38, 100, 38, 561, 518,
	73, 11, 325, 50, 99, 98, 518, 518, 518, 518,
	518, 78, 118, 525, 834, 3, 38, 191, 40, 0,
	835, 38, 0, 833, 0, 0, 38, 0, 153, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 0, 0, 204, 0, 38, 38, 0,
	0, 530, 0, 0, 530, 0, 176, 175, 226, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 38,
	0, 0, 0, 530, 840, 841, 842, 839, 838, 837,
	530, 0, 0, 0, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 38, 826, 0, 0, 0,
	0, 38, 0, 0, 530, 208, 209, 210, 211, 213,
	214, 215, 216, 217, 218, 219, 220, 212, 0, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 0, 0, 518, 208,
	209, 210, 211, 213, 214, 215, 216, 217, 218, 219,
	220, 212, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 518, 0, 0, 0, 0,
	0, 0, 30, 208, 209, 210, 211, 213, 214, 215,
	216, 217, 218, 219, 220, 212, 0, 389, 390, 0,
	0, 0, 0, 0, 0, 146, 150, 154, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 205, 420, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 234,
	235, 236, 237, 0, 0, 239, 0, 241, 242, 243,
	244, 245, 246, 247, 0, 0, 518, 0, 0, 0,
	261, 0, 518, 518, 442, 275, 276, 0, 278, 279,
	0, 0, 0, 0, 0, 0, 0, 461, 463, 290,
	0, 0, 0, 0, 231, 231, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 477, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 340, 208, 209, 210,
	211, 213, 214, 215, 216, 217, 218, 219, 220, 212,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 676, 0, 0, 154, 0, 0,
	0, 679, 680, 681, 682, 683, 0, 0, 0, 231,
	518, 404, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 0, 0, 0, 579, 0, 580,
	0, 518, 0, 0, 518, 0, 0, 0, 0, 0,
	0, 272, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 518, 430, 432, 432, 0, 0, 0,
	518, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 154, 154, 0, 0,
	465, 0, 0, 432, 518, 0, 0, 0, 0, 432,
	290, 0, 0, 0, 0, 432, 432, 0, 0, 154,
	0, 0, 432, 495, 0, 0, 0, 0, 499, 0,
	231, 477, 0, 0, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	782, 231, 0, 676, 0, 0, 0, 0, 0, 168,
	170, 169, 191, 0, 548, 0, 0, 0, 0, 0,
	0, 552, 553, 554, 555, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 389, 707, 707, 0, 557, 192,
	172, 176, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 420, 420, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	168, 170, 169, 191, 461, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 477, 0, 0, 0, 486, 0,
	0, 864, 0, 604, 0, 231, 0, 867, 868, 0,
	0, 0, 0, 0, 803, 802, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 617, 619, 0,
	0, 0, 0, 0, 0, 644, 0, 0, 652, 646,
	645, 627, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 651, 653, 664, 665, 662, 663, 666, 668, 667,
	669, 654, 655, 656, 647, 649, 650, 648, 0, 0,
	0, 0, 812, 0, 0, 914, 0, 231, 0, 0,
	0, 0, 0, 0, 340, 692, 0, 915, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 657, 658, 0,
	0, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 432, 745, 0, 0, 0, 0,
	231, 231, 231, 154, 644, 0, 670, 652, 646, 645,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 272, 0, 231, 231, 707, 0, 420, 661, 660,
	651, 653, 664, 665, 662, 663, 666, 668, 667, 669,
	654, 655, 656, 647, 649, 650, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 644, 0,
	670, 652, 646, 645, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 0, 659,
	657, 658, 661, 660, 651, 653, 664, 665, 662, 663,
	666, 668, 667, 669, 654, 655, 656, 647, 649, 650,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 845, 644, 0, 670,
	652, 646, 645, 0, 432, 432, 0, 0, 0, 0,
	0, 0, 861, 659, 657, 658, 0, 0, 231, 0,
	0, 661, 660, 651, 653, 664, 665, 662, 663, 666,
	668, 667, 669, 654, 655, 656, 647, 649, 650, 648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 863, 670, 652, 646, 645, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 661, 660, 651, 653, 664,
	665, 662, 663, 666, 668, 667, 669, 654, 655, 656,
	647, 649, 650, 648, 0, 0, 0, 0, 0, 0,
	0, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 432, 0, 94, 28, 19, 18, 0,
	20, 231, 32, 231, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 15, 24, 35, 0, 0,
	36, 9, 0, 26, 0, 31, 80, 81, 7, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 432, 0, 0,
	0, 92, 231, 0, 0, 0, 8, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 635, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 15, 24, 35, 0,
	0, 36, 9, 0, 26, 0, 31, 80, 81, 7,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 8, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 502, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 15, 24, 35,
	0, 0, 36, 9, 0, 26, 0, 31, 80, 81,
	7, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 8, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 0,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 330, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	1035, 34, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 330, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 1030, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 330, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 1013, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 330, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 1000, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 999, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 330, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 0, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 330, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 985, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 982, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 0, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 330, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 957, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 330,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 955, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 883, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	330, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 0,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 689, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 330, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	0, 34, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 330, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 566, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 330, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 326, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 330, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 0, 34, 952, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 0, 34, 924, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 0, 34, 713, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 0, 34, 335,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 0, 34,
	332, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 168, 170,
	169, 191, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 0,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 0, 0, 0, 853, 192, 172,
	176, 175, 659, 657, 658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 788, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 791,
	644, 0, 670, 652, 646, 645, 659, 657, 658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 749, 0, 0, 661, 660, 651, 653, 664, 665,
	662, 663, 666, 668, 667, 669, 654, 655, 656, 647,
	649, 650, 648, 0, 644, 0, 670, 652, 646, 645,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 660,
	651, 653, 664, 665, 662, 663, 666, 668, 667, 669,
	654, 655, 656, 647, 649, 650, 648, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 0, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 746, 0, 0, 0, 0, 0, 0, 192, 172,
	176, 175, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 702,
	0, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	0, 0, 168, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 699, 0, 0, 0, 0,
	0, 0, 192, 172, 176, 175, 0, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 634, 0, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 0, 168, 170,
	169, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 631, 0, 0, 0, 0, 0, 0, 192, 172,
	176, 175, 168, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 613,
	0, 0, 192, 172, 176, 175, 0, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 594, 0, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 168, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 172, 176, 175, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 427, 0, 0, 192, 172, 176, 175, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 0, 0, 0, 192,
	172, 176, 175, 0, 0, 0, 168, 170, 169, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	395, 0, 0, 0, 0, 0, 192, 172, 176, 175,
	0, 0, 0, 168, 170, 169, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 345, 0, 0,
	0, 0, 0, 192, 172, 176, 175, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 344, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 165, 0, 0, 0, 0, 0, 192, 172, 176,
	175, 659, 657, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 0, 644,
	0, 670, 652, 646, 645, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 660, 651, 653, 664, 665, 662,
	663, 666, 668, 667, 669, 654, 655, 656, 647, 649,
	650, 648, 0, 0, 0, 192, 172, 176, 175, 657,
	658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 644, 0, 670, 652,
	646, 645, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	661, 660, 651, 653, 664, 665, 662, 663, 666, 668,
	667, 669, 654, 655, 656, 647, 649, 650, 648, 0,
	0, 192, 172, 176, 175, 0, 658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 644, 0, 670, 652, 646, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 660, 651, 653,
	664, 665, 662, 663, 666, 668, 667, 669, 654, 655,
	656, 647, 649, 650, 648, 644, 0, 0, 652, 646,
	645, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	660, 651, 653, 664, 665, 662, 663, 666, 668, 667,
	669, 654, 655, 656, 647, 649, 650, 648, 0, 172,
	176, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 0, 0, 652, 646, 645,
	166, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 660,
	651, 653, 664, 665, 662, 663, 666, 668, 667, 669,
	654, 655, 656, 647, 649, 650, 648, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 176, 175, 0, 0,
	0, 0, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 488, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	644, 62, 481, 96, 646, 645, 487, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 664, 665,
	662, 663, 666, 668, 667, 669, 654, 655, 656, 647,
	649, 650, 648, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 191, 0, 0, 142, 112,
	108, 102, 488, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 147, 148, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 172, 176, 175, 91, 76, 0, 0,
	0, 0, 62, 0, 96, 0, 0, 487, 57, 56,
	58, 59, 72, 119, 0, 0, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 644, 0, 0, 652, 646, 645, 0,
	0, 0, 0, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 0, 0,
	653, 664, 665, 662, 663, 666, 668, 667, 669, 654,
	655, 656, 647, 649, 650, 648, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 191, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 147, 148, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 0, 0,
	0, 0, 62, 0, 96, 176, 175, 862, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 0, 104, 105,
	125, 87, 120, 0, 0, 0, 0, 0, 94, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 147, 148, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 0,
	0, 0, 0, 62, 0, 96, 0, 0, 620, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 0, 104,
	105, 125, 87, 120, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 191, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 147, 148,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 172, 176, 175, 91, 76,
	0, 0, 0, 0, 62, 0, 96, 0, 0, 618,
	57, 56, 58, 59, 72, 119, 0, 0, 0, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 82, 83, 71, 0, 104,
	105, 125, 87, 120, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 147, 148,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	0, 0, 0, 0, 62, 0, 96, 0, 0, 291,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 0,
	104, 105, 125, 87, 120, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	191, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	148, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 0, 0, 0, 0, 62, 429, 96, 172, 176,
	175, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	0, 104, 105, 125, 87, 120, 0, 0, 0, 0,
	0, 94, 0, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	147, 148, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 0, 0, 0, 0, 62, 0, 96, 0,
	0, 405, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 0, 104, 105, 125, 87, 120, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 147, 148, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 0, 0, 151, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 0, 104, 105, 125, 87, 120, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 147, 148, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 0, 0, 149, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 0, 104, 105, 125, 87, 120, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 147, 148, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 0, 0, 145, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 0, 104, 105, 125, 87, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 147, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 441,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 147, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 104, 105, 125, 77, 41, 148, 0, 0,
	0, 0, 528, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 0, 0,
	0, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 0, 526, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 521, 112, 108, 522, 104, 105, 125,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 535, 0, 524,
	0, 0, 0, 534, 533, 531, 532, 0, 0, 523,
	0, 526, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 521, 112,
	108, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 524, 0, 0, 0, 534, 533,
	531, 532,
}
var yyPact = [...]int{

	-1000, -1000, 2399, -1000, -1000, -1000, -1000, 325, 505, 669,
	137, -1000, 335, -1000, -1000, 921, -1000, 263, 263, 5019,
	323, 263, 7736, 7605, 7474, 382, 175, 753, 7867, -1000,
	5850, 322, 321, 317, -1000, 432, 7867, 917, -4, 915,
	911, 7867, -1000, -1000, -1000, -1000, 678, -1000, 668, -1000,
	1133, 316, 7867, 453, 395, 395, 7867, 7867, 7867, 7867,
	-1000, -1000, 8129, -1000, 7867, 7867, 7867, 7867, 7867, 7867,
	7867, 314, -1000, -1000, 191, 186, 922, 7867, 655, 426,
	312, 310, 7867, 7867, 306, 7867, 7867, -1000, 185, -1000,
	-1000, 853, 847, -1000, 182, 289, 7081, -1000, 178, 172,
	-1000, 272, 823, 566, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 140, 150, -1000, 565, 256, -1000, 430,
	-1000, 248, 328, -1000, 823, -1000, 100, 600, 599, -1000,
	675, 823, -1000, 907, -1000, -16, 4102, 4888, 8129, 4757,
	724, -4, 520, 7867, 308, -1000, 5803, -1000, 699, -1000,
	5756, -1000, 381, 1311, 5938, -1000, 94, -1000, -1000, 264,
	85, -4, -19, 72, 5938, -1000, -1000, -1000, -1000, -1000,
	7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867,
	7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867,
	7867, 426, 329, 395, 7867, 900, -1000, 5709, 379, 868,
	-1000, 663, 661, -1000, 1133, 5662, -1000, -1000, 7343, 7867,
	7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867, 7867,
	7867, 422, -1000, -1000, -1000, -1000, -1000, 272, 519, 823,
	557, 544, -1000, -1000, -106, -106, -18, -106, 247, 5618,
	243, -106, -106, -106, -106, -106, -106, -106, -1000, 7212,
	-1000, 7867, 7867, 7867, 436, 707, 775, -1000, 245, 7998,
	395, 929, 57, 256, 542, -1000, 496, 518, 823, 651,
	140, 150, 535, 7867, 7867, 5938, 5938, 7867, 5938, 5938,
	7867, 497, 707, 686, -1000, 796, 7867, 7081, 157, 60,
	5574, 395, 7867, 7867, 866, -1000, 6378, 272, 71, 7867,
	7867, 140, 430, 79, -1000, 7867, 378, -1000, -1000, 2268,
	272, -1000, 613, 50, -1000, 674, 823, 37, -1000, 665,
	823, 864, 660, -30, 8289, -1000, -1000, -1000, -1000, -1000,
	285, -1000, -1000, -1000, -1000, -1000, 263, -1000, 377, 53,
	5938, -1000, 376, 373, -1000, -1000, -1000, -1000, -1000, 175,
	-1000, 7867, -1000, -1000, 794, -1000, 8289, -1000, 7867, 7867,
	7867, 7867, 7867, 89, 6917, 6666, 7210, 17, 17, 17,
	-18, -106, -18, -18, 295, 295, 1047, 1047, 1047, 1047,
	252, 252, 252, 252, -1000, 7867, -1000, 40, -1000, -1000,
	1089, 712, 39, -34, 3971, -1000, -1000, 281, 279, 659,
	601, 424, 601, 7867, 929, 286, 929, 929, 929, 929,
	929, 929, 929, 929, 929, 929, 929, 929, -8, -1000,
	-1000, 277, 823, 272, 57, 57, -1000, -1000, -1000, -1000,
	-106, 156, 5938, 152, -1000, -1000, -1000, -1000, 935, 852,
	5493, 170, 392, -1000, 161, -1000, -1000, 140, 150, -1000,
	7867, -1000, -1000, 147, 823, 496, 57, 140, 147, -23,
	-1000, 1133, -1000, 1167, 242, 5445, 145, -1000, -1000, -1000,
	144, 240, -1000, -1000, 6931, 6800, -1000, -1000, 142, 141,
	-1000, -1000, -24, 234, -1000, -1000, 1133, 395, 7867, -1000,
	256, 256, -1000, -1000, 138, 5401, 256, 256, -1000, 5353,
	-1000, 2137, -1000, -1000, -1000, -1000, 600, 846, 554, -1000,
	599, 844, 551, -1000, 833, 8289, -1000, 5894, -1000, -1000,
	496, 517, 823, 273, 8289, -1000, -1000, -1000, -1000, 615,
	534, 8289, 8289, 8289, 8289, 8289, 227, 503, 4233, 3840,
	371, 7867, 7867, 450, -1000, 798, -1000, -1000, 5305, -37,
	268, -1000, 5938, 6247, 6495, 6024, 929, 5257, 7867, 370,
	395, 265, 265, 4626, 831, 8289, 694, 631, 631, 423,
	601, -1000, 496, 504, 823, -1000, -13, -1000, -1000, 1133,
	-1000, 426, -42, 422, 422, 272, -1000, -1000, -1000, 136,
	-1000, -1000, -1000, -1000, -1000, 7867, -1000, -1000, 166, 148,
	256, 7867, 7867, 140, 5211, -1000, 496, -1000, -1000, -1000,
	7867, -1000, -1000, -1000, -1000, -1000, -1000, 5163, 395, 5938,
	395, -1000, -1000, -1000, 6509, -1000, -1000, 5938, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 827, -1000,
	-1000, 824, -1000, -1000, 8289, 8289, 8289, 8289, 8289, 8289,
	8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289,
	8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289,
	8214, 823, 496, 8289, 110, -5, 5119, 611, 750, -72,
	-72, 45, 45, 5075, 369, -1000, 263, 5019, 471, 368,
	-1000, 366, 5938, -1000, 7867, 300, 435, 365, 772, -1000,
	8289, 631, -1000, 6151, -1000, -1000, 635, -1000, 395, 267,
	635, -1000, -1000, -1000, -57, -1000, 689, 266, 225, -9,
	-1000, -4, -1000, -1000, -1000, 216, -1000, -13, 823, 496,
	1096, 601, -1000, 7867, -1000, -38, -1000, 176, -1000, 5031,
	639, 7867, 7867, -1000, 105, 1562, -1000, 642, -1000, 6669,
	-1000, -1000, -1000, -1000, -1000, 1966, 45, 45, -72, -72,
	-72, -72, 6538, 6375, -20, 36, 36, 45, 6067, 1853,
	5981, 1660, 6169, 614, 614, 614, 614, -11, -11, -11,
	-11, 8289, 1912, 496, 209, -1000, -1000, 8289, 8289, -1000,
	-1000, -1000, -1000, 5019, -1000, 446, 263, 309, -1000, 7867,
	1643, -1000, -1000, -1000, -1000, -1000, 364, -1000, 205, 7867,
	203, 265, -1000, 422, 202, 3709, 8289, -1000, 421, 601,
	419, 631, 493, 683, 747, 496, -1000, -1000, 789, -43,
	-1000, 699, 527, -1000, 817, 601, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 256, 929, -1000, -1000, 101, 639,
	7867, -1000, 57, 390, -1000, 99, 97, -1000, -1000, -1000,
	57, 5938, 395, -1000, 6110, 8289, -1000, 1789, 5894, -1000,
	359, 253, -1000, 198, -1000, 4233, -1000, 683, 6151, 4495,
	-1000, -47, 4495, 357, -1000, -1000, 787, -1000, -1000, 786,
	-1000, 418, 251, -1000, -45, -61, -1000, 814, -4, -1000,
	-62, -53, -1000, -1000, 7867, 639, -1000, 78, -1000, -1000,
	-1000, -1000, -1000, -1000, 6110, 8289, -1000, -1000, 4233, 4364,
	4233, 411, -1000, -1000, -1000, -1000, -1000, -1000, 3578, 195,
	3447, -65, -1000, 220, -1000, 781, 8289, -66, 805, 8289,
	-1000, 601, -1000, 632, -28, 639, -1000, -1000, 5894, 4233,
	-1000, -1000, -1000, -1000, 3316, -1000, 398, -1000, 8289, 3185,
	-51, -1000, 752, -71, -1000, 8289, 246, -1000, -1000, 386,
	632, -1000, 355, 348, 676, 709, 529, -1000, -1000, -1000,
	3054, 2923, 342, -1000, -1000, -1000, -1000, 184, -1000, 8289,
	-1000, 631, -1000, -1000, -1000, -1000, 601, 527, 799, 332,
	-1000, -1000, 2792, -1000, 746, -1000, 194, -50, -1000, 797,
	-1000, -1000, -1000, 693, -1000, 331, 601, -1000, -1000, 693,
	-1000, 143, -1000, -1000, -1000, -1000, -1000, 601, 2661, 741,
	-1000, 139, 394, -1000, 2530, -1000,
}
var yyPgo = [...]int{

	0, 186, 1138, 1135, 47, 39, 37, 594, 1133, 1132,
	16, 234, 1349, 6, 1302, 62, 64, 57, 755, 1123,
	1131, 35, 1125, 1124, 1122, 29, 1121, 38, 23, 1120,
	1116, 1114, 1113, 48, 1112, 1111, 27, 1109, 31, 46,
	180, 1108, 723, 36, 1106, 8, 1104, 1103, 41, 1102,
	58, 51, 42, 1101, 1099, 1098, 1077, 1076, 34, 24,
	1075, 1073, 1, 1072, 1071, 1070, 17, 1069, 1068, 1067,
	1066, 1064, 52, 44, 0, 1063, 1061, 1060, 40, 1055,
	1054, 592, 1053, 1052, 50, 18, 1050, 28, 1049, 1047,
	1045, 25, 43, 1044, 1043, 1042, 1040, 1039, 1038, 3,
	1037, 19, 1035, 1034, 1032, 1031, 1030, 33, 1029, 93,
	14, 22, 7, 1027, 1026, 1020, 13, 30, 1015, 1014,
	15, 1012, 1011, 20, 1010, 1009, 1008, 1007, 4, 1006,
	1004, 1003, 1001, 996, 991, 2, 988, 12, 11, 987,
	986, 985, 984, 983, 981, 980, 978, 977, 976, 974,
	972, 970, 968, 967, 964, 962, 961, 969, 26, 956,
	955, 21, 5, 941, 938, 936, 933, 932,
}
var yyR1 = [...]int{

	0, 122, 73, 73, 74, 74, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 75, 75, 4,
	4, 4, 4, 76, 76, 5, 5, 5, 5, 77,
	77, 6, 6, 6, 6, 53, 53, 78, 78, 24,
	24, 24, 24, 25, 25, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 96, 96, 61, 61, 97, 97, 98,
	98, 62, 94, 94, 58, 51, 52, 120, 120, 121,
	121, 63, 64, 64, 67, 67, 67, 67, 68, 68,
	2, 106, 106, 102, 102, 107, 107, 111, 111, 110,
	110, 110, 57, 57, 59, 59, 60, 60, 95, 95,
	118, 118, 118, 118, 92, 92, 92, 123, 123, 56,
	56, 88, 88, 89, 89, 54, 54, 55, 55, 99,
	99, 100, 100, 66, 66, 65, 65, 65, 65, 117,
	117, 117, 108, 108, 72, 72, 72, 72, 79, 79,
	27, 27, 27, 80, 80, 80, 80, 101, 101, 69,
	69, 69, 69, 71, 124, 124, 125, 125, 126, 126,
	127, 127, 128, 128, 129, 132, 132, 133, 133, 131,
	130, 130, 134, 134, 119, 119, 103, 103, 104, 104,
	136, 136, 135, 135, 135, 135, 135, 135, 105, 105,
	105, 105, 70, 70, 93, 93, 91, 91, 90, 90,
	137, 137, 139, 139, 141, 140, 140, 140, 142, 143,
	142, 42, 15, 15, 15, 144, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 145, 15, 146, 15, 147, 15,
	148, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	149, 15, 150, 151, 15, 152, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 153, 15, 15, 15,
	15, 15, 15, 15, 155, 15, 156, 15, 50, 50,
	50, 50, 47, 47, 47, 47, 46, 46, 1, 87,
	87, 86, 86, 86, 86, 23, 23, 23, 23, 23,
	23, 23, 23, 11, 11, 11, 11, 45, 45, 45,
	43, 43, 41, 41, 114, 114, 115, 49, 49, 49,
	154, 154, 154, 116, 116, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 8, 28, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 35, 35, 35, 35, 29, 29, 29, 29,
	29, 29, 29, 158, 158, 161, 161, 160, 160, 160,
	160, 14, 14, 48, 48, 16, 17, 18, 19, 19,
	163, 163, 164, 138, 165, 165, 167, 166, 162, 162,
	162, 40, 40, 44, 44, 12, 22, 22, 20, 20,
	20, 21, 21, 21, 10, 10, 10, 9, 9, 13,
	13, 112, 112, 113, 113, 113, 39, 39, 109, 109,
	85, 85, 38, 38, 38, 84, 84, 83, 83, 83,
	83, 83, 83, 83, 83, 81, 81, 81, 81, 33,
	33, 33, 33, 33, 33, 34, 34, 34, 37, 37,
	37, 37, 37, 37, 37, 37, 82, 82, 36, 36,
	30, 30, 31, 32,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 4,
	3, 5, 4, 3, 4, 4, 2, 3, 1, 1,
	3, 2, 4, 3, 1, 1, 3, 2, 4, 3,
	1, 1, 3, 2, 4, 5, 4, 2, 0, 1,
	1, 1, 4, 1, 2, 3, 5, 8, 3, 5,
	9, 3, 2, 3, 2, 3, 2, 3, 3, 2,
	3, 3, 3, 1, 2, 5, 8, 8, 5, 1,
	6, 3, 3, 0, 9, 0, 4, 1, 0, 1,
	2, 8, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 9, 7, 6, 1, 2, 1, 2, 0, 2,
	1, 0, 2, 0, 2, 1, 3, 0, 2, 1,
	2, 4, 1, 4, 1, 4, 1, 4, 3, 5,
	3, 4, 4, 5, 0, 5, 4, 1, 1, 1,
	4, 0, 4, 0, 5, 0, 2, 0, 3, 1,
	0, 1, 3, 4, 6, 0, 1, 1, 1, 2,
	3, 3, 1, 3, 1, 1, 2, 2, 3, 1,
	1, 2, 4, 3, 5, 1, 3, 2, 0, 3,
	2, 1, 8, 3, 1, 3, 1, 3, 0, 1,
	1, 2, 2, 2, 3, 1, 3, 1, 1, 3,
	4, 3, 0, 1, 1, 3, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 5, 4, 3, 1, 0, 1, 3, 1,
	2, 1, 4, 3, 0, 3, 1, 1, 0, 0,
	2, 3, 6, 3, 4, 0, 7, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 0, 4, 0, 4, 0, 4,
	0, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	0, 5, 0, 0, 7, 0, 5, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 0, 3, 1, 1,
	1, 3, 2, 1, 0, 10, 0, 11, 2, 2,
	4, 4, 4, 4, 4, 4, 4, 3, 1, 0,
	4, 3, 4, 1, 2, 2, 4, 3, 4, 4,
	4, 4, 2, 1, 1, 3, 2, 1, 3, 2,
	1, 1, 4, 1, 2, 0, 2, 0, 2, 1,
	0, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 1, 3, 2, 4, 3, 1, 1, 1, 4,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 2,
	2, 3, 1, 1, 3, 2, 1, 1, 1, 1,
	3, 3, 1, 0, 2, 0, 1, 5, 3, 3,
	1, 1, 1, 3, 3, 1, 1, 1, 5, 1,
	2, 0, 0, 4, 4, 4, 0, 2, 1, 1,
	0, 1, 2, 3, 3, 1, 4, 4, 1, 1,
	1, 1, 2, 1, 4, 4, 1, 1, 4, 0,
	1, 1, 1, 4, 4, 1, 1, 3, 1, 2,
	3, 1, 1, 4, 0, 0, 2, 5, 3, 3,
	1, 6, 4, 4, 2, 2, 2, 1, 2, 1,
	4, 3, 3, 6, 3, 1, 1, 1, 4, 4,
	4, 2, 2, 4, 2, 2, 1, 3, 1, 1,
	3, 3, 3, 3,
}
var yyChk = [...]int{

	-1000, -122, -73, -3, -25, -51, -52, 51, 79, 44,
	-53, -26, 10, -63, -64, 38, 119, 7, 21, 20,
	23, 30, 34, 35, 39, -50, 46, 98, 19, 14,
	-14, 48, 25, 27, 121, 40, 43, 36, -1, -67,
	-2, 97, -16, -15, 37, 52, 99, 53, 100, 54,
	-19, 59, 92, -18, 104, 105, 130, 129, 131, 132,
	-48, -42, 123, -37, 107, 108, 109, 110, 111, 112,
	113, 6, 133, -29, -47, -46, 118, 96, -20, 91,
	49, 50, 4, 5, 84, 85, 86, 11, -35, -32,
	-7, 117, 74, 62, 18, 60, 125, -21, -22, -23,
	-30, -74, 82, -11, 8, 9, 66, 67, 81, 63,
	64, 65, 80, -10, -109, -44, -12, -40, -9, 134,
	12, 123, -74, 119, 82, 10, -75, 37, 38, -4,
	-74, 82, 121, 135, 122, 10, -78, -48, 123, -48,
	-25, -1, 79, 123, -48, 121, -14, 97, 98, 121,
	-14, 121, -15, -19, -14, 121, -79, -27, 12, 134,
	-80, -1, 12, -93, -14, 121, 149, 150, 87, 89,
	88, 151, 128, 152, 163, 130, 129, 164, 167, 165,
	166, 161, 162, 155, 156, 153, 154, 157, 158, 159,
	160, 90, 127, 123, 123, 123, 119, -14, 10, -120,
	128, 10, 10, -15, -19, -14, 52, 52, 136, 137,
	138, 139, 148, 140, 141, 142, 143, 144, 145, 146,
	147, 123, -14, 104, 105, -18, -19, -74, 79, 82,
	-11, -12, 98, -18, -14, -14, -14, -14, -42, -14,
	-50, -14, -14, -14, -14, -14, -14, -14, -49, 123,
	-48, -153, 125, 125, -154, 17, -81, -33, 12, 76,
	77, -14, 57, -43, -11, -41, -74, 79, 82, -21,
	-10, -109, -12, 123, 123, -14, -14, 123, -14, -14,
	125, -81, 17, 17, 75, -81, 125, 123, -84, -83,
	-14, 128, 125, 125, 82, -117, 123, -74, 78, 125,
	119, -10, 134, 78, -117, 119, 124, 121, 119, -73,
	-74, 121, 135, -76, -5, -74, 82, -77, -6, -74,
	82, 29, -74, 10, 136, -24, 120, -25, -51, -52,
	51, -25, 122, -56, -25, 122, 21, -120, -91, -90,
	-14, -118, 119, 122, 121, 121, 121, 121, 121, 135,
	-16, 119, -19, 121, 135, -120, 136, 121, 135, -145,
	-146, -147, -148, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -43, -150, 122, -94, -58, -19,
	-19, -15, -95, 10, -78, 121, 121, 10, -155, -68,
	55, -106, 55, 58, -14, 128, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -85, -38,
	-19, 59, 82, -74, 78, 78, 124, 124, 124, 124,
	-14, -13, -14, -13, 118, -33, -33, 17, 125, 57,
	-14, 11, -19, -112, -113, -40, -39, -10, -109, 10,
	119, -116, -117, 78, 82, -74, 57, -10, 78, -82,
	-36, -19, -15, -19, -15, -14, -13, 117, 75, 75,
	-13, -84, 126, -161, 135, 58, -17, -19, -13, -13,
	10, 124, -108, -50, -72, -15, -19, 128, 83, -117,
	-39, -40, 10, 52, -13, -14, -39, -40, 10, -14,
	121, -73, 120, -117, -4, 121, 135, 29, -74, 121,
	135, 29, -74, 10, 29, 136, -28, -157, -7, -31,
	-74, 79, 82, 60, 125, -8, 62, -159, 18, 74,
	-11, 131, 132, 130, 129, 123, 123, -88, -78, -78,
	-48, 121, 135, -92, 121, -92, 121, -27, -14, 12,
	-156, -28, -14, -14, -14, -14, -14, -14, -152, 124,
	135, 29, 29, 124, 135, 136, 120, 123, 123, -102,
	56, -45, -74, 79, 82, 119, -107, -45, -15, -19,
	-19, 91, 124, 135, 123, -74, -149, 126, 126, -34,
	10, 13, 12, 10, 120, 125, 120, -162, -166, -165,
	-167, 125, 119, -10, -14, -40, -74, -112, -40, 124,
	135, 124, 124, 124, 126, 126, 124, -14, 128, -14,
	128, 126, 126, 124, 135, 124, -17, -14, -117, -117,
	126, 120, -117, -117, 120, 120, -5, 10, 29, -6,
	10, 29, 10, -28, 125, 130, 129, 164, 167, 165,
	166, 151, 128, 152, 161, 162, 163, 88, 89, 87,
	150, 149, 155, 156, 153, 154, 157, 159, 158, 160,
	127, 82, -74, 123, -158, -160, -157, 17, 78, -157,
	-157, -157, -157, -157, 124, -54, 93, 94, -89, 22,
	121, -91, -14, 120, 32, 33, -92, 31, -92, 120,
	136, 123, 122, -14, 121, -58, -110, -19, 128, 59,
	-110, -60, -25, 122, 10, -28, -96, 41, -99, -100,
	-66, -65, 60, 61, -45, -99, 119, -107, 82, -74,
	-101, 135, -43, 136, -38, -85, -142, -143, 126, -14,
	-163, 125, 125, -117, -13, -14, 120, -114, -36, 58,
	-17, -17, -72, 10, 10, -157, -157, -157, -157, -157,
	-157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
	-157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
	-157, 122, -157, -74, -158, 126, -161, 135, 58, 10,
	52, 124, 121, -48, -25, -55, 93, 94, 121, 121,
	-14, -123, 122, 121, 120, 121, 31, -28, -99, -151,
	-111, 58, -19, 123, -111, -78, 136, -61, 42, 123,
	124, 135, -120, 124, -101, -74, 120, -69, -103, -70,
	-71, -104, -136, 47, 38, 44, -135, 103, 102, 101,
	98, 99, 100, -45, -144, -14, 124, -140, -139, -137,
	125, -138, 57, 126, -138, -13, -13, 126, 120, -115,
	57, -14, 128, 126, -157, 122, 124, -157, -157, -25,
	95, -48, 122, -91, -123, -78, 121, 124, -14, 124,
	-110, -85, 124, 28, -28, 119, -45, 119, -66, -121,
	83, -87, 44, 120, -105, 12, 121, 135, -1, -135,
	10, -124, -45, -116, 125, -141, -138, -13, -112, 120,
	126, 126, -112, -17, -157, 58, 121, 122, -78, 124,
	-78, -87, -59, -25, 122, 124, -59, 121, -78, 12,
	-78, 12, 119, 123, 121, 135, 136, 10, -120, 136,
	-125, 135, 121, 119, -13, -137, 126, -164, -157, -78,
	-57, -25, 122, 119, -78, 120, 124, 120, 136, -78,
	-86, 12, 128, 12, -28, 136, 10, -28, -45, -126,
	-127, -128, -129, -130, -131, -133, -45, 10, 126, -162,
	-78, -78, 26, 119, -28, 120, 124, 135, 12, 136,
	-28, 123, 120, -128, 121, 121, 45, 29, 78, 24,
	120, 121, -78, 12, 128, -28, -99, -132, -45, -134,
	-135, 10, 121, 120, 12, 124, 135, 10, -97, -98,
	-62, 41, -119, 121, 119, -45, -62, 123, -78, -45,
	120, 12, 124, 119, -78, 120,
}
var yyDef = [...]int{

	3, -2, 1, 2, 6, 7, 8, 0, 0, 0,
	0, 43, 4, 85, 86, 0, 38, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 63,
	0, 0, 0, 0, 69, 0, 0, 0, 87, 0,
	0, 313, 441, 442, 328, 94, 0, 96, 0, 100,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 357, 306, 308, 309, 310, 360, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 426, 427, 428,
	429, 0, 0, 432, 367, 0, 495, 468, 469, 470,
	422, -2, 0, 0, 365, 366, 368, 369, 370, 371,
	372, 373, 374, -2, 0, 473, 0, 0, 476, 488,
	477, 0, 0, 3, 0, 4, 0, 0, 0, 18,
	19, 0, 16, 0, 44, 0, 0, 0, 0, 0,
	0, 87, 0, 216, 0, 52, 0, 313, 343, 54,
	0, 56, 442, -2, 0, 59, 0, 159, 160, 0,
	0, 87, 165, 0, 215, 64, 254, 256, 258, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 0, 0, 38, 0, 0, 314,
	88, 98, 101, -2, -2, 0, 95, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 237, 250, 252, 251, 447, 344, 0, 0,
	0, 0, 343, 253, 275, 276, 277, 278, 289, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 305, 0,
	359, 0, 479, 479, 0, 361, 362, 507, 509, 0,
	0, 312, 0, 363, 350, 351, 344, 0, 0, 353,
	-2, 0, 0, 0, 0, 521, 522, 0, 524, 525,
	479, 0, 0, 0, 376, 0, 479, 495, 0, 435,
	500, 0, 479, 479, 0, 335, 0, -2, 0, 479,
	0, -2, 489, 0, 342, 0, 0, 10, 3, 0,
	-2, 13, 0, 0, 24, 25, 0, 0, 30, 31,
	0, 0, 21, 0, 0, 37, 45, 39, 40, 41,
	0, 131, 38, 48, 129, 38, 0, 314, 0, 217,
	219, 51, 124, 124, 53, 55, 57, 58, 60, 0,
	161, 0, 445, 61, 0, 316, 0, 62, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, -2, -2, -2, -2,
	-2, -2, -2, -2, 287, 0, 295, 0, 82, 84,
	-2, 442, 0, 0, 0, 71, 72, 0, 0, 103,
	0, 0, 0, 0, 233, 0, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 0, 491,
	492, 0, 0, 346, 0, 0, 290, 443, 444, 358,
	307, 0, 480, 0, 311, 508, 505, 506, 0, 0,
	0, 426, 0, -2, 481, 482, 485, 461, 0, 486,
	0, 231, 364, 0, 0, 346, 0, 472, 0, 0,
	526, -2, -2, -2, 442, 0, 0, 430, 375, 431,
	0, 0, 327, 496, 436, 0, 504, 446, 0, 0,
	5, 149, 0, 0, 152, -2, -2, 0, 0, 337,
	0, 463, -2, 533, 0, 0, 0, 464, -2, 0,
	9, 0, 12, 336, 17, 14, 0, 0, 27, 15,
	0, 0, 33, 20, 0, 0, 36, 378, 379, 380,
	-2, 0, 0, 0, 433, 386, 387, 388, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 133, 0,
	0, 216, 0, 0, 124, 0, 124, 158, 0, 163,
	0, 166, 214, 255, 257, 259, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, -2, -2, 0,
	0, 99, 347, 0, 0, 168, 102, 105, -2, -2,
	234, 0, 0, 494, 494, 345, -2, 323, 322, 0,
	515, 516, 517, 511, 512, 0, 514, 451, 458, 459,
	0, 479, 0, 462, 0, 463, 345, 355, 464, 518,
	0, 519, 520, 523, 325, 324, 326, 498, 0, 499,
	0, 466, 467, 150, 0, 151, 156, 157, 338, 339,
	474, 475, 340, 341, 478, 11, 23, 26, 0, 29,
	32, 0, 22, 35, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 433, 0, 435, 440, 0, 0, 396,
	397, 419, 420, 0, 0, 46, 0, 0, 137, 0,
	49, 0, 218, 120, 0, 0, 0, 0, 0, 162,
	0, -2, 293, 296, 65, 83, 107, 109, 0, 0,
	107, 68, 116, 38, 0, 118, 75, 0, 0, 139,
	141, 87, 146, 147, 148, 0, 168, 104, 0, 349,
	198, 0, 235, 0, 490, 0, 291, 0, 510, 0,
	448, 479, 479, 457, 0, 0, 487, 352, 527, 0,
	502, 503, 153, 28, 34, 0, 390, 391, 392, 393,
	394, 395, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 0, -2, 0, 385, 434, 436, 0, 377,
	532, 421, 42, 0, 136, 0, 0, 0, 130, 216,
	0, 38, 127, 128, 121, 122, 0, 164, 0, 0,
	0, 0, 110, 494, 0, 0, 0, 70, 0, 0,
	0, 145, 89, 329, 198, 348, 93, 167, 0, 0,
	171, 0, -2, 197, 0, 0, 200, 202, 203, 204,
	205, 206, 207, 106, 363, 232, 493, 230, -2, 227,
	479, 221, 0, 0, 450, 0, 0, 483, 484, 354,
	0, 497, 0, 389, 417, 0, 384, 438, 439, 132,
	0, 0, 38, 0, 38, 126, 123, 329, 294, 0,
	108, 0, 0, 0, 119, 38, 0, 38, 142, 0,
	90, 0, 0, 92, 0, 210, 170, 0, 87, 201,
	0, 0, 174, 236, 479, 0, 220, 0, 452, 513,
	455, 454, 356, 501, 418, 0, 47, 38, 138, 0,
	125, 0, 66, 114, 38, 111, 67, 117, 0, 0,
	0, 143, 38, 0, 169, 0, 0, 0, 0, 0,
	173, 0, 176, 178, 0, 225, 223, -2, 437, 134,
	50, 112, 38, 38, 0, 76, 0, 91, 0, 0,
	0, 333, 0, 208, 211, 0, 0, 213, 175, 0,
	179, 180, 0, 0, 188, 0, 0, -2, 222, 453,
	0, 0, 0, 38, 144, 315, 330, 0, 334, 0,
	212, -2, 177, 181, 182, 183, 0, 192, 0, 0,
	317, 115, 0, 331, 0, 209, 0, 184, 185, 0,
	-2, 189, 113, 78, 332, 0, 0, 190, 74, 77,
	79, 0, 172, 194, 38, 186, 80, 0, 0, 0,
	195, 0, 0, 38, 0, 81,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:232
		{
			rootnode = stmt.NewStmtList(yyDollar[1].list)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:238
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:239
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:244
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:251
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:261
		{
			yyVAL.node = yyDollar[1].node
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:263
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:265
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:267
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 10:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:273
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 11:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:283
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 12:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:293
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 13:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:299
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 14:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:305
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:315
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 16:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:325
		{
			yyVAL.node = yyDollar[1].node
		}
	case 17:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:330
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:332
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:337
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:347
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:360
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 22:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:370
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:386
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:388
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:393
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:403
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:416
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:426
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:442
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:444
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:449
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:459
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:472
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:482
		{
			name := name.NewName(yyDollar[2].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 35:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:498
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)

			yyVAL.node = yyDollar[1].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:514
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(constant, yyDollar[2].token.Comments())

			constList := []node.Node{constant}

			yyVAL.node = stmt.NewConstList(constList)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:533
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:535
		{
			yyVAL.list = []node.Node{}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:541
		{
			yyVAL.node = yyDollar[1].node
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:543
		{
			yyVAL.node = yyDollar[1].node
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:545
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:547
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:557
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:559
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(label, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:572
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:578
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			if yyDollar[5].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:592
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[4].list))

			yyVAL.node = stmt.NewIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:601
		{
			yyVAL.node = stmt.NewWhile(yyDollar[1].token, yyDollar[2].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:607
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 50:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:613
		{
			yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:619
		{
			yyVAL.node = stmt.NewSwitch(yyDollar[1].token, yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:625
		{
			yyVAL.node = stmt.NewBreak(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:631
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:637
		{
			yyVAL.node = stmt.NewContinue(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:643
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:649
		{
			yyVAL.node = stmt.NewReturn(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:655
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:661
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:667
		{
			yyVAL.node = yyDollar[1].node
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:669
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:675
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:681
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:687
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:693
		{
			yyVAL.node = yyDollar[1].node
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:695
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:701
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:711
		{
			if yyDollar[6].foreachVariable.node == nil {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].node, yyDollar[6].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:721
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:727
		{
			yyVAL.node = stmt.NewNop()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:733
		{
			yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)

			if yyDollar[6].node == nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:745
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:751
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(label, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:764
		{
			yyVAL.list = []node.Node{}
		}
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:766
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(catch, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(catch, yyDollar[1].token.Comments())

			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:784
		{
			yyVAL.node = nil
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:786
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:795
		{
			yyVAL.list = yyDollar[1].list
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:797
		{
			yyVAL.list = []node.Node{}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:802
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:804
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:809
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:826
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:828
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:833
		{
			yyVAL.node = yyDollar[1].node
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:838
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:843
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:848
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:850
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:855
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:857
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:862
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewFunction(name, yyDollar[2].boolWithToken.value, yyDollar[5].list, nil, yyDollar[8].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:875
		{
			switch n := yyDollar[1].node.(type) {
			case *stmt.Class:
				name := node.NewIdentifier(yyDollar[2].token.Value)
				positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.ClassName = name
				n.Stmts = yyDollar[6].list
				n.Extends = yyDollar[3].node
				n.Implements = yyDollar[4].list

			case *stmt.Trait:
				// TODO: is it possible that trait extend or implement
				name := node.NewIdentifier(yyDollar[2].token.Value)
				positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.TraitName = name
				n.Stmts = yyDollar[6].list
			}

			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:896
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewInterface(name, yyDollar[3].list, yyDollar[5].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:910
		{
			yyVAL.node = stmt.NewClass(nil, nil, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:916
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(classModifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:926
		{
			yyVAL.node = stmt.NewTrait(nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:932
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(classModifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:945
		{
			yyVAL.node = nil
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:947
		{
			yyVAL.node = yyDollar[2].node
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:952
		{
			yyVAL.token = yyDollar[1].token
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:957
		{
			yyVAL.list = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:959
		{
			yyVAL.list = yyDollar[2].list
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:964
		{
			yyVAL.list = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:966
		{
			yyVAL.list = yyDollar[2].list
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:971
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:973
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:978
		{
			yyVAL.foreachVariable = foreachVariable{nil, false}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:980
		{
			yyVAL.foreachVariable = yyDollar[2].foreachVariable
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:985
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:987
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:989
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:999
		{
			yyVAL.node = yyDollar[1].node
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1001
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1011
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1013
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1023
		{
			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1025
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1035
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(name, yyDollar[1].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(constant, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{constant}
		}
	case 119:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1047
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, constant)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1063
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1065
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1067
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 123:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1069
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1075
		{
			yyVAL.list = []node.Node{}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1077
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			positions.AddPosition(_case, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1084
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			positions.AddPosition(_default, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1101
		{
			yyVAL.node = yyDollar[1].node
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1103
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1113
		{
			yyVAL.list = []node.Node{}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1115
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1127
		{
			yyVAL.list = []node.Node{}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1129
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[5].list))

			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1144
		{
			yyVAL.node = nil
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1146
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1156
		{
			yyVAL.node = nil
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1158
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[3].list))

			yyVAL.node = stmt.NewAltElse(stmts)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1171
		{
			yyVAL.list = yyDollar[1].list
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1173
		{
			yyVAL.list = nil
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1178
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1180
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1185
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[2].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[3].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1211
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[2].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[3].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1241
		{
			yyVAL.node = nil
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1243
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1249
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1255
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1261
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1263
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1265
		{
			arg := node.NewArgument(yyDollar[2].node, false, false)
			positions.AddPosition(arg, positionBuilder.NewNodePosition(yyDollar[2].node))
			comments.AddComments(arg, comments[yyDollar[2].node])

			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{arg}, yyDollar[3].token}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1277
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1279
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1284
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1290
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1296
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, false, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1302
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1311
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1313
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1319
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1329
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1335
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1345
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[3].token))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 164:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1362
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1379
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[1].token))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1396
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1418
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1420
		{
			yyVAL.list = []node.Node{}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1426
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1432
		{
			yyVAL.node = yyDollar[1].node
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1434
		{
			yyVAL.node = yyDollar[1].node
		}
	case 172:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1436
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(name, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].boolWithToken.value, yyDollar[6].list, nil, yyDollar[8].nodesWithEndToken.nodes, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[8].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1449
		{
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1453
		{
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1454
		{
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1478
		{
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1482
		{
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1483
		{
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1487
		{
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1488
		{
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1492
		{
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1496
		{
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1497
		{
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1501
		{
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1502
		{
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1506
		{
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1507
		{
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1511
		{
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1512
		{
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1516
		{
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1517
		{
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1521
		{
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1522
		{
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1526
		{
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1527
		{
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1528
		{
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1529
		{
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1530
		{
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1531
		{
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1535
		{
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1536
		{
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1537
		{
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1538
		{
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1542
		{
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1543
		{
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1548
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1550
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1556
		{
			yyVAL.list = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1558
		{
			yyVAL.list = yyDollar[1].list
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1563
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1565
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1569
		{
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1570
		{
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1574
		{
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1575
		{
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1579
		{
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1579
		{
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1580
		{
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1581
		{
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1585
		{
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1586
		{
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1587
		{
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1592
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1607
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign_op.NewAssign(list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1616
		{
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1617
		{
		}
	case 235:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1618
		{
		}
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1618
		{
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1619
		{
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1620
		{
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1621
		{
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1622
		{
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1623
		{
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1624
		{
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1625
		{
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1626
		{
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1627
		{
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1628
		{
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1629
		{
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1630
		{
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1631
		{
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1632
		{
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1633
		{
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1634
		{
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1635
		{
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1636
		{
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1636
		{
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1637
		{
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1637
		{
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1638
		{
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1638
		{
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1639
		{
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1639
		{
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1640
		{
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1641
		{
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1642
		{
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1643
		{
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1644
		{
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1645
		{
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1646
		{
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1647
		{
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1648
		{
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1649
		{
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1650
		{
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1651
		{
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1652
		{
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1653
		{
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1654
		{
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1655
		{
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1656
		{
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1657
		{
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1658
		{
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1659
		{
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1660
		{
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1661
		{
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1662
		{
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1663
		{
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1664
		{
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1665
		{
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1666
		{
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1668
		{
			yyVAL.node = yyDollar[1].node
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1669
		{
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1669
		{
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1670
		{
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1671
		{
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1672
		{
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1673
		{
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1674
		{
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1675
		{
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1676
		{
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1677
		{
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1678
		{
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1679
		{
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1680
		{
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1681
		{
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1682
		{
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1683
		{
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1684
		{
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1684
		{
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1685
		{
			yyVAL.node = yyDollar[1].node
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1686
		{
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1687
		{
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1688
		{
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1689
		{
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1690
		{
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1691
		{
		}
	case 315:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:1693
		{
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1694
		{
		}
	case 317:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php5/php5.y:1696
		{
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1700
		{
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1701
		{
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1702
		{
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1703
		{
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1708
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1714
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1720
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(str, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(str, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[str])
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1730
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1739
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1745
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1754
		{
			yyVAL.token = yyDollar[1].token
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1759
		{
			yyVAL.list = []node.Node{}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1761
		{
			yyVAL.list = yyDollar[3].list
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1766
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1782
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1798
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1814
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(identifier, yyDollar[2].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClusureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1833
		{
			name := name.NewName(yyDollar[1].list)
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewFunctionCall(name, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(name, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1843
		{
			funcName := name.NewRelative(yyDollar[3].list)
			positions.AddPosition(funcName, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(funcName, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[funcName])
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1853
		{
			funcName := name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(funcName, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(funcName, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[funcName])
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1863
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1869
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1875
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1881
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1887
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1896
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1902
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1908
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1914
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1923
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1929
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1935
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1944
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1946
		{
			yyVAL.node = yyDollar[1].node
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1951
		{
			yyVAL.node = yyDollar[1].node

			for _, f := range yyDollar[3].objectPropertyList {
				switch f.fetchType {
				case arrayFetchType:
					yyVAL.node = expr.NewArrayDimFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				case propertyFetchType:
					yyVAL.node = expr.NewPropertyFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				}
			}

			for _, f := range yyDollar[4].objectPropertyList {
				switch f.fetchType {
				case arrayFetchType:
					yyVAL.node = expr.NewArrayDimFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				case propertyFetchType:
					yyVAL.node = expr.NewPropertyFetch(yyVAL.node, f.node)
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, f.node))
					comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
				}
			}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1981
		{
			yyVAL.node = yyDollar[1].node
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1987
		{
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, yyDollar[2].objectPropertyList...)
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1989
		{
			yyVAL.objectPropertyList = []objectProperty{}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1995
		{
			yyVAL.objectPropertyList = yyDollar[2].objectPropertyList
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2000
		{
			yyVAL.node = nil
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2002
		{
			yyVAL.node = nil
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2004
		{
			yyVAL.node = yyDollar[1].node
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2008
		{
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2009
		{
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2010
		{
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2015
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2017
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2022
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2028
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2034
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2040
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2046
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2052
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2058
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2064
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2070
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2076
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2082
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)) /* TODO: mark as Heredoc*/
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2087
		{
			yyVAL.node = scalar.NewEncapsed(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2096
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2108
		{
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2112
		{
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2113
		{
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2114
		{
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2115
		{
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2116
		{
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2117
		{
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2118
		{
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2119
		{
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2120
		{
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2121
		{
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2125
		{
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2126
		{
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2127
		{
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2128
		{
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2129
		{
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2130
		{
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2131
		{
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2132
		{
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2133
		{
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2134
		{
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2135
		{
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2136
		{
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2137
		{
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2138
		{
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2139
		{
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2140
		{
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2141
		{
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2142
		{
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2143
		{
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2144
		{
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2145
		{
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2146
		{
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2147
		{
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2148
		{
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2149
		{
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2150
		{
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2151
		{
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2152
		{
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2153
		{
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2154
		{
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2155
		{
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2156
		{
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2157
		{
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2162
		{
			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2164
		{
			yyVAL.node = name.NewName(yyDollar[1].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2170
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2176
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2185
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2195
		{
			yyVAL.node = yyDollar[1].node
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2197
		{
			yyVAL.node = yyDollar[1].node
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2199
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2201
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2207
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2213
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2221
		{
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2222
		{
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2231
		{
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2232
		{
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2233
		{
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2234
		{
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2239
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2241
		{
			yyVAL.node = yyDollar[1].node
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2246
		{
			yyVAL.node = yyDollar[2].node
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2248
		{
			yyVAL.node = yyDollar[2].node
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2254
		{
			yyVAL.node = yyDollar[1].node
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2262
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2269
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2276
		{
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2278
		{
			yyVAL.node = yyDollar[1].node
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2282
		{
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2283
		{
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2288
		{
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2288
		{
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2292
		{
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2293
		{
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2297
		{
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2298
		{
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2302
		{
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2303
		{
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2304
		{
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2309
		{
			yyVAL.node = yyDollar[1].node
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2311
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2324
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2330
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2340
		{
			yyVAL.node = yyDollar[1].node
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2345
		{
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2347
		{
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2351
		{
			yyVAL.node = yyDollar[1].node
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2352
		{
			yyVAL.node = yyDollar[1].node
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2353
		{
			yyVAL.node = yyDollar[1].node
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2359
		{
			yyVAL.node = yyDollar[1].node
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2361
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2371
		{
			yyVAL.node = yyDollar[1].node
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2376
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2382
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2388
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2394
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2404
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2412
		{
			yyVAL.node = nil
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2413
		{
			yyVAL.node = yyDollar[1].node
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2419
		{
			yyVAL.objectPropertyList = yyDollar[1].objectPropertyList
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2421
		{
			op := objectProperty{yyDollar[1].node, propertyFetchType}
			yyVAL.objectPropertyList = []objectProperty{op}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2429
		{
			op := objectProperty{yyDollar[3].node, arrayFetchType}
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, op)
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2434
		{
			op := objectProperty{yyDollar[3].node, arrayFetchType}
			yyVAL.objectPropertyList = append(yyDollar[1].objectPropertyList, op)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2439
		{
			op := objectProperty{yyDollar[1].node, propertyFetchType}
			yyVAL.objectPropertyList = []objectProperty{op}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2447
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2453
		{
			yyVAL.node = yyDollar[2].node
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2458
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(n, yyDollar[1].token.Comments())

			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2466
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(n, yyDollar[2].token.Comments())

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)

			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2481
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2483
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2489
		{
			yyVAL.node = yyDollar[1].node
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2491
		{
			yyVAL.node = expr.NewList(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2497
		{
			yyVAL.node = nil
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2503
		{
			yyVAL.list = nil
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2505
		{
			yyVAL.list = yyDollar[1].list
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2510
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2518
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2526
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2534
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2542
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[6].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2550
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			comments.AddComments(arrayItem, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2558
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2566
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[2].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(arrayItem, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{arrayItem}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2577
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2579
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2586
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2588
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2598
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2608
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2621
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(fetch, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(fetch, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2637
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2643
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2657
		{
			yyVAL.node = yyDollar[2].node
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2662
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2668
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2680
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2693
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2699
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2705
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2711
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2717
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2723
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2729
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2735
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2744
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2746
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2750
		{
			yyVAL.node = yyDollar[1].node
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2751
		{
			yyVAL.node = yyDollar[1].node
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2756
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2766
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2779
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2792
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	}
	goto yystack /* stack new state and value */
}
